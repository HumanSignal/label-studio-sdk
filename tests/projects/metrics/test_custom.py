# This file was auto-generated by Fern from our API Definition.

from label_studio_sdk import LabelStudio
from label_studio_sdk import AsyncLabelStudio
import typing
from ...utilities import validate_response


async def test_get_lambda(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {"code": "code"}
    expected_types: typing.Any = {"code": None}
    response = client.projects.metrics.custom.get_lambda(id=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.projects.metrics.custom.get_lambda(id=1)
    validate_response(async_response, expected_response, expected_types)


async def test_update_lambda(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert (
        client.projects.metrics.custom.update_lambda(id=1, code="code")  # type: ignore[func-returns-value]
        is None
    )

    assert (
        await async_client.projects.metrics.custom.update_lambda(id=1, code="code")  # type: ignore[func-returns-value]
        is None
    )


async def test_logs(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {"key": "value"}
    expected_types: typing.Tuple[typing.Any, typing.Any] = ("dict", {0: (None, None)})
    response = client.projects.metrics.custom.logs(id=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.projects.metrics.custom.logs(id=1)
    validate_response(async_response, expected_response, expected_types)


async def test_check_function(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert (
        client.projects.metrics.custom.check_function(id=1, code="code")  # type: ignore[func-returns-value]
        is None
    )

    assert (
        await async_client.projects.metrics.custom.check_function(id=1, code="code")  # type: ignore[func-returns-value]
        is None
    )
