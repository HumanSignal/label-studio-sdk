# This file was auto-generated by Fern from our API Definition.

from label_studio_sdk import LabelStudio
from label_studio_sdk import AsyncLabelStudio
import typing
from ..utilities import validate_response


async def test_get(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {
        "agreement_threshold": "agreement_threshold",
        "allowed": "allowed",
        "max_additional_annotators_assignable": 1,
        "metric_name": "metric_name",
        "metric_params": {"key": "value"},
    }
    expected_types: typing.Any = {
        "agreement_threshold": None,
        "allowed": None,
        "max_additional_annotators_assignable": "integer",
        "metric_name": None,
        "metric_params": None,
    }
    response = client.projects.metrics.get(id=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.projects.metrics.get(id=1)
    validate_response(async_response, expected_response, expected_types)


async def test_update(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {
        "agreement_threshold": "agreement_threshold",
        "allowed": "allowed",
        "max_additional_annotators_assignable": 1,
        "metric_name": "metric_name",
        "metric_params": {"key": "value"},
    }
    expected_types: typing.Any = {
        "agreement_threshold": None,
        "allowed": None,
        "max_additional_annotators_assignable": "integer",
        "metric_name": None,
        "metric_params": None,
    }
    response = client.projects.metrics.update(id=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.projects.metrics.update(id=1)
    validate_response(async_response, expected_response, expected_types)
