# This file was auto-generated by Fern from our API Definition.

from label_studio_sdk import LabelStudio
from label_studio_sdk import AsyncLabelStudio
import typing
from ..utilities import validate_response


async def test_get(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {
        "user": 1,
        "organization": 1,
        "contributed_projects_count": "contributed_projects_count",
        "annotations_count": "annotations_count",
        "created_at": "2024-01-15T09:30:00Z",
    }
    expected_types: typing.Any = {
        "user": "integer",
        "organization": "integer",
        "contributed_projects_count": None,
        "annotations_count": None,
        "created_at": "datetime",
    }
    response = client.organizations.members.get(id=1, user_pk=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.organizations.members.get(id=1, user_pk=1)
    validate_response(async_response, expected_response, expected_types)


async def test_delete(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert (
        client.organizations.members.delete(id=1, user_pk=1)  # type: ignore[func-returns-value]
        is None
    )

    assert (
        await async_client.organizations.members.delete(id=1, user_pk=1)  # type: ignore[func-returns-value]
        is None
    )
