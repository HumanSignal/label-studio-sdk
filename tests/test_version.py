# This file was auto-generated by Fern from our API Definition.

from label_studio_sdk import LabelStudio
from label_studio_sdk import AsyncLabelStudio
import typing
from .utilities import validate_response


async def test_get(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {
        "release": "release",
        "label-studio-os-package": {"key": "value"},
        "label-studio-os-backend": {"key": "value"},
        "label-studio-frontend": {"key": "value"},
        "dm2": {"key": "value"},
        "label-studio-converter": {"key": "value"},
        "edition": "Community",
        "lsf": {"key": "value"},
        "backend": {"key": "value"},
    }
    expected_types: typing.Any = {
        "release": None,
        "label-studio-os-package": ("dict", {0: (None, None)}),
        "label-studio-os-backend": ("dict", {0: (None, None)}),
        "label-studio-frontend": ("dict", {0: (None, None)}),
        "dm2": ("dict", {0: (None, None)}),
        "label-studio-converter": ("dict", {0: (None, None)}),
        "edition": None,
        "lsf": ("dict", {0: (None, None)}),
        "backend": ("dict", {0: (None, None)}),
    }
    response = client.version.get()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.version.get()
    validate_response(async_response, expected_response, expected_types)
