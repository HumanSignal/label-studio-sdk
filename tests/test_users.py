# This file was auto-generated by Fern from our API Definition.

from label_studio_sdk import BaseUser
from label_studio_sdk.client import AsyncLabelStudio, LabelStudio

from .utilities import validate_response


async def test_api_current_user_reset_token_create(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = {"token": "token"}
    expected_types = {"token": None}
    response = client.users.api_current_user_reset_token_create()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_current_user_reset_token_create()
    validate_response(async_response, expected_response, expected_types)


async def test_api_current_user_token_list(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = {"detail": "detail"}
    expected_types = {"detail": None}
    response = client.users.api_current_user_token_list()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_current_user_token_list()
    validate_response(async_response, expected_response, expected_types)


async def test_api_current_user_whoami_read(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = {
        "id": 1,
        "first_name": "first_name",
        "last_name": "last_name",
        "username": "username",
        "email": "email",
        "last_activity": "2024-01-15T09:30:00Z",
        "avatar": "avatar",
        "initials": "initials",
        "phone": "phone",
        "active_organization": 1,
        "allow_newsletters": True,
    }
    expected_types = {
        "id": "integer",
        "first_name": None,
        "last_name": None,
        "username": None,
        "email": None,
        "last_activity": "datetime",
        "avatar": None,
        "initials": None,
        "phone": None,
        "active_organization": "integer",
        "allow_newsletters": None,
    }
    response = client.users.api_current_user_whoami_read()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_current_user_whoami_read()
    validate_response(async_response, expected_response, expected_types)


async def test_api_users_list(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = [
        {
            "id": 1,
            "first_name": "first_name",
            "last_name": "last_name",
            "username": "username",
            "email": "email",
            "last_activity": "2024-01-15T09:30:00Z",
            "avatar": "avatar",
            "initials": "initials",
            "phone": "phone",
            "active_organization": 1,
            "allow_newsletters": True,
        }
    ]
    expected_types = (
        "list",
        {
            0: {
                "id": "integer",
                "first_name": None,
                "last_name": None,
                "username": None,
                "email": None,
                "last_activity": "datetime",
                "avatar": None,
                "initials": None,
                "phone": None,
                "active_organization": "integer",
                "allow_newsletters": None,
            }
        },
    )
    response = client.users.api_users_list()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_users_list()
    validate_response(async_response, expected_response, expected_types)


async def test_api_users_create(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = {
        "id": 1,
        "first_name": "first_name",
        "last_name": "last_name",
        "username": "username",
        "email": "email",
        "last_activity": "2024-01-15T09:30:00Z",
        "avatar": "avatar",
        "initials": "initials",
        "phone": "phone",
        "active_organization": 1,
        "allow_newsletters": True,
    }
    expected_types = {
        "id": "integer",
        "first_name": None,
        "last_name": None,
        "username": None,
        "email": None,
        "last_activity": "datetime",
        "avatar": None,
        "initials": None,
        "phone": None,
        "active_organization": "integer",
        "allow_newsletters": None,
    }
    response = client.users.api_users_create(request=BaseUser(username="username"))
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_users_create(request=BaseUser(username="username"))
    validate_response(async_response, expected_response, expected_types)


async def test_api_users_read(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = {
        "id": 1,
        "first_name": "first_name",
        "last_name": "last_name",
        "username": "username",
        "email": "email",
        "last_activity": "2024-01-15T09:30:00Z",
        "avatar": "avatar",
        "initials": "initials",
        "phone": "phone",
        "active_organization": 1,
        "allow_newsletters": True,
    }
    expected_types = {
        "id": "integer",
        "first_name": None,
        "last_name": None,
        "username": None,
        "email": None,
        "last_activity": "datetime",
        "avatar": None,
        "initials": None,
        "phone": None,
        "active_organization": "integer",
        "allow_newsletters": None,
    }
    response = client.users.api_users_read(id=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_users_read(id=1)
    validate_response(async_response, expected_response, expected_types)


async def test_api_users_delete(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert client.users.api_users_delete(id=1) is None  # type: ignore[func-returns-value]

    assert await async_client.users.api_users_delete(id=1) is None  # type: ignore[func-returns-value]


async def test_api_users_partial_update(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response = {
        "id": 1,
        "first_name": "first_name",
        "last_name": "last_name",
        "username": "username",
        "email": "email",
        "last_activity": "2024-01-15T09:30:00Z",
        "avatar": "avatar",
        "initials": "initials",
        "phone": "phone",
        "active_organization": 1,
        "allow_newsletters": True,
    }
    expected_types = {
        "id": "integer",
        "first_name": None,
        "last_name": None,
        "username": None,
        "email": None,
        "last_activity": "datetime",
        "avatar": None,
        "initials": None,
        "phone": None,
        "active_organization": "integer",
        "allow_newsletters": None,
    }
    response = client.users.api_users_partial_update(id=1, request=BaseUser(username="username"))
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.users.api_users_partial_update(id=1, request=BaseUser(username="username"))
    validate_response(async_response, expected_response, expected_types)
