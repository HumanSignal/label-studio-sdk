# This file was auto-generated by Fern from our API Definition.

from label_studio_sdk import LabelStudio
from label_studio_sdk import AsyncLabelStudio
import typing
from ..utilities import validate_response


async def test_list_(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = [{"title": "title", "values": {"key": "value"}}]
    expected_types: typing.Tuple[typing.Any, typing.Any] = (
        "list",
        {0: {"title": None, "values": ("dict", {0: (None, None)})}},
    )
    response = client.prompts.indicators.list(id=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.prompts.indicators.list(id=1)
    validate_response(async_response, expected_response, expected_types)


async def test_get(client: LabelStudio, async_client: AsyncLabelStudio) -> None:
    expected_response: typing.Any = {"title": "title", "values": {"key": "value"}}
    expected_types: typing.Any = {"title": None, "values": ("dict", {0: (None, None)})}
    response = client.prompts.indicators.get(id=1, indicator_key="indicator_key")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.prompts.indicators.get(id=1, indicator_key="indicator_key")
    validate_response(async_response, expected_response, expected_types)
