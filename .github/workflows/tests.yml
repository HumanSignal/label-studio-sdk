name: pytests

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
      - '**/requirements**'
      - 'codecov.yml'
    tags-ignore:
      - '**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - master
      - 'release/**'
  workflow_dispatch:

jobs:
  run_pytest:
    name: "pytest ${{ matrix.os }} | ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.9
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Set up poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install app
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source $VENV
          poetry run pytest ./tests/custom/ -vv
