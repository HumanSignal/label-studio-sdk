# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ProjectSampling(str, enum.Enum):
    SEQUENTIAL_SAMPLING = "Sequential sampling"
    UNIFORM_SAMPLING = "Uniform sampling"
    UNCERTAINTY_SAMPLING = "Uncertainty sampling"

    def visit(
        self,
        sequential_sampling: typing.Callable[[], T_Result],
        uniform_sampling: typing.Callable[[], T_Result],
        uncertainty_sampling: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ProjectSampling.SEQUENTIAL_SAMPLING:
            return sequential_sampling()
        if self is ProjectSampling.UNIFORM_SAMPLING:
            return uniform_sampling()
        if self is ProjectSampling.UNCERTAINTY_SAMPLING:
            return uncertainty_sampling()
