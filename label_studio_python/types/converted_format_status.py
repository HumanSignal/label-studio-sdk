# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ConvertedFormatStatus(str, enum.Enum):
    CREATED = "created"
    IN_PROGRESS = "in_progress"
    FAILED = "failed"
    COMPLETED = "completed"

    def visit(
        self,
        created: typing.Callable[[], T_Result],
        in_progress: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
        completed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ConvertedFormatStatus.CREATED:
            return created()
        if self is ConvertedFormatStatus.IN_PROGRESS:
            return in_progress()
        if self is ConvertedFormatStatus.FAILED:
            return failed()
        if self is ConvertedFormatStatus.COMPLETED:
            return completed()
