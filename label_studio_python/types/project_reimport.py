# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .project_reimport_status import ProjectReimportStatus


class ProjectReimport(pydantic_v1.BaseModel):
    id: typing.Optional[int] = None
    status: typing.Optional[ProjectReimportStatus] = None
    error: typing.Optional[str] = None
    task_count: typing.Optional[int] = None
    annotation_count: typing.Optional[int] = None
    prediction_count: typing.Optional[int] = None
    duration: typing.Optional[int] = None
    file_upload_ids: typing.Optional[typing.Dict[str, typing.Any]] = None
    files_as_tasks_list: typing.Optional[bool] = None
    found_formats: typing.Optional[typing.Dict[str, typing.Any]] = None
    data_columns: typing.Optional[typing.Dict[str, typing.Any]] = None
    traceback: typing.Optional[str] = None
    project: typing.Optional[int] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
