# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ApiProjectsImportCreateResponse(pydantic.BaseModel):
    """
    Task creation response
    """

    task_count: typing.Optional[int] = pydantic.Field(description="Number of tasks added")
    annotation_count: typing.Optional[int] = pydantic.Field(description="Number of annotations added")
    predictions_count: typing.Optional[int] = pydantic.Field(description="Number of predictions added")
    duration: typing.Optional[float] = pydantic.Field(description="Time in seconds to create")
    file_upload_ids: typing.Optional[typing.List[int]] = pydantic.Field(description="Database IDs of uploaded files")
    could_be_tasks_list: typing.Optional[bool] = pydantic.Field(
        description="Whether uploaded files can contain lists of tasks, like CSV/TSV files"
    )
    found_formats: typing.Optional[typing.List[str]] = pydantic.Field(description="The list of found file formats")
    data_columns: typing.Optional[typing.List[str]] = pydantic.Field(description="The list of found data columns")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
