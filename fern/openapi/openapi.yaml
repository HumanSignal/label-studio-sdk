openapi: 3.0.1
info:
  title: Label Studio API
  contact:
    url: https://labelstud.io
  version: v1.11.1.dev0
  x-logo:
    url: ../../static/icons/logo-black.svg
servers:
- url: http://localhost:8080/
security:
- Token: []
paths:
  /api/annotations/{id}/:
    get:
      tags:
      - Annotations
      summary: Get annotation by its ID
      description: Retrieve a specific annotation for a task using the annotation
        result ID.
      operationId: retrieve_annotation
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this annotation.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
    delete:
      tags:
      - Annotations
      summary: Delete annotation
      description: Delete an annotation. This action can't be undone!
      operationId: api_annotations_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this annotation.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Annotations
      summary: Update annotation
      description: Update existing attributes on an annotation.
      operationId: api_annotations_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this annotation.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      x-codegen-request-body-name: data
  /api/current-user/reset-token/:
    post:
      tags:
      - Users
      summary: Reset user token
      description: Reset the user token for the current user.
      operationId: api_current-user_reset-token_create
      responses:
        "201":
          description: User token response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token
                description: User token
  /api/current-user/token:
    get:
      tags:
      - Users
      summary: Get user token
      description: Get a user token to authenticate to the API as the current user.
      operationId: api_current-user_token_list
      responses:
        "200":
          description: User token response
          content: {}
  /api/current-user/whoami:
    get:
      tags:
      - Users
      summary: Retrieve my user
      description: Retrieve details of the account that you are using to access the
        API.
      operationId: api_current-user_whoami_read
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
  /api/dm/actions/:
    get:
      tags:
      - Data Manager
      summary: Get actions
      description: Retrieve all the registered actions with descriptions that data
        manager can use.
      operationId: api_dm_actions_list
      responses:
        "200":
          description: ""
          content: {}
    post:
      tags:
      - Data Manager
      summary: Post actions
      description: Perform an action with the selected items from a specific view.
      operationId: api_dm_actions_create
      responses:
        "201":
          description: ""
          content: {}
  /api/dm/columns/:
    get:
      tags:
      - Data Manager
      summary: Get data manager columns
      description: Retrieve the data manager columns available for the tasks in a
        specific project.
      operationId: api_dm_columns_list
      responses:
        "200":
          description: ""
          content: {}
  /api/dm/project/:
    get:
      tags:
      - Data Manager
      summary: Get project state
      description: Retrieve the project state for the data manager.
      operationId: api_dm_project_list
      responses:
        "200":
          description: ""
          content: {}
  /api/dm/views/:
    get:
      tags:
      - Data Manager
      summary: List views
      description: List all views for a specific project.
      operationId: api_dm_views_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/View'
    post:
      tags:
      - Data Manager
      summary: Create view
      description: Create a view for a specific project.
      operationId: api_dm_views_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
      x-codegen-request-body-name: data
  /api/dm/views/reset/:
    post:
      tags:
      - Data Manager
      summary: Reset project views
      description: Reset all views for a specific project.
      operationId: api_dm_views_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewReset'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewReset'
      x-codegen-request-body-name: data
  /api/dm/views/{id}/:
    get:
      tags:
      - Data Manager
      summary: Get view details
      description: Get the details about a specific view in the data manager
      operationId: api_dm_views_read
      parameters:
      - name: id
        in: path
        description: View ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
    put:
      tags:
      - Data Manager
      summary: Put view
      description: Overwrite view data with updated filters and other information
        for a specific project.
      operationId: api_dm_views_update
      parameters:
      - name: id
        in: path
        description: View ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
      x-codegen-request-body-name: data
    delete:
      tags:
      - Data Manager
      summary: Delete view
      description: Delete a specific view by ID.
      operationId: api_dm_views_delete
      parameters:
      - name: id
        in: path
        description: View ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Data Manager
      summary: Update view
      description: Update view data with additional filters and other information
        for a specific project.
      operationId: api_dm_views_partial_update
      parameters:
      - name: id
        in: path
        description: View ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
      x-codegen-request-body-name: data
  /api/import/file-upload/{id}:
    get:
      tags:
      - ProjectImport
      summary: Get file upload
      description: Retrieve details about a specific uploaded file.
      operationId: api_import_file-upload_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
    delete:
      tags:
      - ProjectImport
      summary: Delete file upload
      description: Delete a specific uploaded file.
      operationId: api_import_file-upload_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - ProjectImport
      summary: Update file upload
      description: Update a specific uploaded file.
      operationId: api_import_file-upload_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpload'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
      x-codegen-request-body-name: data
  /api/invite:
    get:
      tags:
      - Invites
      summary: Get organization invite link
      description: Get a link to use to invite a new member to an organization in
        Label Studio Enterprise.
      operationId: api_invite_read
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
  /api/invite/reset-token:
    post:
      tags:
      - Invites
      summary: Reset organization token
      description: Reset the token used in the invitation link to invite someone to
        an organization.
      operationId: api_invite_reset-token_create
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
  /api/label_links/:
    get:
      tags:
      - Labels
      summary: List label links
      description: List label links for a specific label and project.
      operationId: api_label_links_list
      parameters:
      - name: project
        in: query
        description: project
        schema:
          type: string
      - name: label__created_at
        in: query
        description: label__created_at
        schema:
          type: string
      - name: label__created_at__gte
        in: query
        description: label__created_at__gte
        schema:
          type: string
      - name: label__created_at__lte
        in: query
        description: label__created_at__lte
        schema:
          type: string
      - name: label__created_by
        in: query
        description: label__created_by
        schema:
          type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LabelLink'
    post:
      tags:
      - Labels
      summary: Create label links
      description: Create label links to link new custom labels to your project labeling
        configuration.
      operationId: api_label_links_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelLink'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelLink'
      x-codegen-request-body-name: data
  /api/label_links/{id}/:
    get:
      tags:
      - Labels
      summary: Get label link
      description: 'Get label links for a specific project configuration. '
      operationId: api_label_links_read
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelLink'
    delete:
      tags:
      - Labels
      summary: Remove label link
      description: "\nRemove a label link that links custom labels to your project\
        \ labeling configuration. If you remove a label link,\nthe label stops being\
        \ available for the project it was linked to. You can add a new label link\
        \ at any time. \n"
      operationId: api_label_links_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Labels
      summary: Update label link
      description: "\nUpdate a label link that links custom labels to a project labeling\
        \ configuration, for example if the fromName,  \ntoName, or name parameters\
        \ for a tag in the labeling configuration change. \n"
      operationId: api_label_links_partial_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelLink'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelLink'
      x-codegen-request-body-name: data
  /api/labels/:
    get:
      tags:
      - Labels
      summary: List labels
      description: List all custom labels added to your project separately from the
        labeling configuration.
      operationId: api_labels_list
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Label'
    post:
      tags:
      - Labels
      summary: Create labels
      description: Add labels to your project without updating the labeling configuration.
      operationId: api_labels_create
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LabelCreate'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabelCreate'
      x-codegen-request-body-name: data
  /api/labels/bulk:
    post:
      tags:
      - Labels
      summary: Bulk update labels
      description: |2

        If you want to update the labels in saved annotations, use this endpoint.
      operationId: api_labels_bulk_create
      responses:
        "201":
          description: ""
          content: {}
  /api/labels/{id}/:
    get:
      tags:
      - Labels
      summary: Get label
      description: |2

        Retrieve a specific custom label used for your project by its ID.
      operationId: api_labels_read
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
    delete:
      tags:
      - Labels
      summary: Remove labels
      description: Remove labels from your project without updating the labeling configuration.
      operationId: api_labels_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Labels
      summary: Update labels
      description: Update labels used for your project without updating the labeling
        configuration.
      operationId: api_labels_partial_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      x-codegen-request-body-name: data
  /api/ml/:
    get:
      tags:
      - Machine Learning
      summary: List ML backends
      description: |2

        List all configured ML backends for a specific project by ID.
        Use the following cURL command:
        ```bash
        curl https://localhost:8080/api/ml?project={project_id} -H 'Authorization: Token abc123'
      operationId: api_ml_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MLBackend'
    post:
      tags:
      - Machine Learning
      summary: Add ML Backend
      description: "\nAdd an ML backend to a project using the Label Studio UI or\
        \ by sending a POST request using the following cURL \ncommand:\n```bash\n\
        curl -X POST -H 'Content-type: application/json' https://localhost:8080/api/ml\
        \ -H 'Authorization: Token abc123'\\\n--data '{\"url\": \"http://localhost:9090\"\
        , \"project\": {project_id}}' \n"
      operationId: api_ml_create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: integer
                  description: Project ID
                url:
                  type: string
                  description: ML backend URL
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: integer
                    description: Project ID
                  url:
                    type: string
                    description: ML backend URL
      x-codegen-request-body-name: data
  /api/ml/{id}:
    get:
      tags:
      - Machine Learning
      summary: Get ML Backend
      description: |2

        Get details about a specific ML backend connection by ID. For example, make a GET request using the
        following cURL command:
        ```bash
        curl https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'
      operationId: api_ml_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ml backend.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLBackend'
    delete:
      tags:
      - Machine Learning
      summary: Remove ML Backend
      description: |2

        Remove an existing ML backend connection by ID. For example, use the
        following cURL command:
        ```bash
        curl -X DELETE https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token abc123'
      operationId: api_ml_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ml backend.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Machine Learning
      summary: Update ML Backend
      description: "\nUpdate ML backend parameters using the Label Studio UI or by\
        \ sending a PATCH request using the following cURL command:\n```bash\ncurl\
        \ -X PATCH -H 'Content-type: application/json' https://localhost:8080/api/ml/{ml_backend_ID}\
        \ -H 'Authorization: Token abc123'\\\n--data '{\"url\": \"http://localhost:9091\"\
        }' \n"
      operationId: api_ml_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ml backend.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLBackend'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLBackend'
      x-codegen-request-body-name: data
  /api/ml/{id}/interactive-annotating:
    post:
      tags:
      - Machine Learning
      summary: Request Interactive Annotation
      description: "\nSend a request to the machine learning backend set up to be\
        \ used for interactive preannotations to retrieve a\npredicted region based\
        \ on annotator input. \nSee [set up machine learning](https://labelstud.io/guide/ml.html#Get-interactive-preannotations)\
        \ for more.\n"
      operationId: api_ml_interactive-annotating_create
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ML backend.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLInteractiveAnnotatingRequest'
        required: true
      responses:
        "200":
          description: Interactive annotation has succeeded.
          content: {}
      x-codegen-request-body-name: data
  /api/ml/{id}/predict/test:
    post:
      tags:
      - Machine Learning
      summary: Predict
      description: "\nAfter you add an ML backend, call this API with the ML backend\
        \ ID to run a test prediction on specific task data               \n"
      operationId: api_ml_predict_test_create
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ML backend.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Predicting has successfully started.
          content: {}
        "500":
          description: Predicting error
          content:
            application/json:
              schema:
                title: Error message
                type: string
                description: Error message
                example: Server responded with an error.
  /api/ml/{id}/train:
    post:
      tags:
      - Machine Learning
      summary: Train
      description: "\nAfter you add an ML backend, call this API with the ML backend\
        \ ID to start training with \nalready-labeled tasks. \n\nGet the ML backend\
        \ ID by [listing the ML backends for a project](https://labelstud.io/api/#operation/api_ml_list).\n"
      operationId: api_ml_train_create
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this ML backend.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                use_ground_truth:
                  type: boolean
                  description: Whether to include ground truth annotations in training
        required: true
      responses:
        "200":
          description: Training has successfully started.
          content: {}
        "500":
          description: Training error
          content:
            application/json:
              schema:
                title: Error message
                type: string
                description: Error message
                example: Server responded with an error.
      x-codegen-request-body-name: data
  /api/ml/{id}/versions:
    get:
      tags:
      - Machine Learning
      summary: Get model versions
      description: Get available versions of the model.
      operationId: api_ml_versions_read
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of available versions.
          content: {}
  /api/organizations/:
    get:
      tags:
      - Organizations
      summary: List your organizations
      description: |2

        Return a list of the organizations you've created or that you have access to.
      operationId: api_organizations_list
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationId'
  /api/organizations/{id}:
    get:
      tags:
      - Organizations
      summary: Get organization settings
      description: Retrieve the settings for a specific organization by ID.
      operationId: api_organizations_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this organization.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    patch:
      tags:
      - Organizations
      summary: Update organization settings
      description: Update the settings for a specific organization by ID.
      operationId: api_organizations_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this organization.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      x-codegen-request-body-name: data
  /api/organizations/{id}/memberships:
    get:
      tags:
      - Organizations
      summary: Get organization members list
      description: Retrieve a list of the organization members and their IDs.
      operationId: api_organizations_memberships_list
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationMemberUser'
  /api/organizations/{id}/memberships/{user_pk}/:
    delete:
      tags:
      - Organizations
      summary: Soft delete an organization member
      description: Soft delete a member from the organization.
      operationId: api_organizations_memberships_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: user_pk
        in: path
        description: A unique integer value identifying the user to be deleted from
          the organization.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Member deleted successfully.
          content: {}
        "405":
          description: User cannot soft delete self.
          content: {}
        "404":
          description: Member not found
          content: {}
  /api/predictions/:
    get:
      tags:
      - Predictions
      summary: List predictions
      description: List all predictions and their IDs.
      operationId: api_predictions_list
      parameters:
      - name: task
        in: query
        description: Filter the returned list by task
        schema:
          type: string
      - name: task__project
        in: query
        description: Filter the returned list by task__project
        schema:
          type: string
      - name: project
        in: query
        description: Filter the returned list by project
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prediction'
    post:
      tags:
      - Predictions
      summary: Create prediction
      description: Create a prediction for a specific task.
      operationId: api_predictions_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prediction'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
      x-codegen-request-body-name: data
  /api/predictions/{id}/:
    get:
      tags:
      - Predictions
      summary: Get prediction details
      description: Get details about a specific prediction by its ID.
      operationId: api_predictions_read
      parameters:
      - name: id
        in: path
        description: Prediction ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
    put:
      tags:
      - Predictions
      summary: Put prediction
      description: Overwrite prediction data by prediction ID.
      operationId: api_predictions_update
      parameters:
      - name: id
        in: path
        description: Prediction ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prediction'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
      x-codegen-request-body-name: data
    delete:
      tags:
      - Predictions
      summary: Delete prediction
      description: Delete a prediction by prediction ID.
      operationId: api_predictions_delete
      parameters:
      - name: id
        in: path
        description: Prediction ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Predictions
      summary: Update prediction
      description: Update prediction data by prediction ID.
      operationId: api_predictions_partial_update
      parameters:
      - name: id
        in: path
        description: Prediction ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prediction'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
      x-codegen-request-body-name: data
  /api/projects/:
    get:
      tags:
      - Projects
      summary: List your projects
      description: |2

        Return a list of the projects that you've created.

        To perform most tasks with the Label Studio API, you must specify the project ID, sometimes referred to as the `pk`.
        To retrieve a list of your Label Studio projects, update the following command to match your own environment.
        Replace the domain name, port, and authorization token, then run the following from the command line:
        ```bash
        curl -X GET https://localhost:8080/api/projects/ -H 'Authorization: Token abc123'
        ```
      operationId: api_projects_list
      parameters:
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: ids
        in: query
        description: ids
        schema:
          type: string
      - name: title
        in: query
        description: title
        schema:
          type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
    post:
      tags:
      - Projects
      summary: Create new project
      description: |2

        Create a project and set up the labeling interface in Label Studio using the API.

        ```bash
        curl -H Content-Type:application/json -H 'Authorization: Token abc123' -X POST 'https://localhost:8080/api/projects'     --data '{"label_config": "<View>[...]</View>"}'
        ```
      operationId: api_projects_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      x-codegen-request-body-name: data
  /api/projects/validate/:
    post:
      tags:
      - Projects
      summary: Validate label config
      description: Validate an arbitrary labeling configuration.
      operationId: api_projects_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfig'
        required: true
      responses:
        "204":
          description: Validation success
          content: {}
      x-codegen-request-body-name: data
  /api/projects/{id}/:
    get:
      tags:
      - Projects
      summary: Get project by ID
      description: Retrieve information about a project by project ID.
      operationId: api_projects_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
      - Projects
      summary: Delete project
      description: Delete a project by specified project ID.
      operationId: api_projects_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Projects
      summary: Update project
      description: Update the project settings for a specific project.
      operationId: api_projects_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      x-codegen-request-body-name: data
  /api/projects/{id}/export:
    get:
      tags:
      - Export
      summary: Easy export of tasks and annotations
      description: |2

        <i>Note: if you have a large project it's recommended to use
        export snapshots, this easy export endpoint might have timeouts.</i><br/><br>
        Export annotated tasks as a file in a specific format.
        For example, to export JSON annotations for a project to a file called `annotations.json`,
        run the following from the command line:
        ```bash
        curl -X GET https://localhost:8080/api/projects/{id}/export?exportType=JSON -H 'Authorization: Token abc123' --output 'annotations.json'
        ```
        To export all tasks, including skipped tasks and others without annotations, run the following from the command line:
        ```bash
        curl -X GET https://localhost:8080/api/projects/{id}/export?exportType=JSON&download_all_tasks=true -H 'Authorization: Token abc123' --output 'annotations.json'
        ```
        To export specific tasks with IDs of 123 and 345, run the following from the command line:
        ```bash
        curl -X GET https://localhost:8080/api/projects/{id}/export?ids[]=123\&ids[]=345 -H 'Authorization: Token abc123' --output 'annotations.json'
        ```
      operationId: api_projects_export_read
      parameters:
      - name: export_type
        in: query
        description: Selected export format (JSON by default)
        schema:
          type: string
      - name: download_all_tasks
        in: query
        description: |2

          If true, download all tasks regardless of status. If false, download only annotated tasks.
        schema:
          type: string
      - name: download_resources
        in: query
        description: |2

          If true, download all resource files such as images, audio, and others relevant to the tasks.
        schema:
          type: boolean
      - name: ids
        in: query
        description: |2

          Specify a list of task IDs to retrieve only the details for those tasks.
        style: form
        explode: false
        schema:
          type: array
          items:
            title: Task ID
            type: integer
            description: Individual task ID
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Exported data
          content:
            application/json:
              schema:
                title: Export file
                type: string
                description: Export file with results
                format: binary
  /api/projects/{id}/export/formats:
    get:
      tags:
      - Export
      summary: Get export formats
      description: Retrieve the available export formats for the current project by
        ID.
      operationId: api_projects_export_formats_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Export formats
          content:
            application/json:
              schema:
                title: Format list
                type: array
                description: List of available formats
                items:
                  title: Export format
                  type: string
  /api/projects/{id}/exports/:
    get:
      tags:
      - Export
      summary: List all export snapshots
      description: |2

        Returns a list of exported files for a specific project by ID.
      operationId: api_projects_exports_list
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Export'
    post:
      tags:
      - Export
      summary: Create new export snapshot
      description: |2

        Create a new export request to start a background task and generate an export file for a specific project by ID.
      operationId: api_projects_exports_create
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportCreate'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportCreate'
      x-codegen-request-body-name: data
  /api/projects/{id}/exports/{export_pk}:
    get:
      tags:
      - Export
      summary: Get export snapshot by ID
      description: |2

        Retrieve information about an export file by export ID for a specific project.
      operationId: api_projects_exports_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        description: Primary key identifying the export file.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
    delete:
      tags:
      - Export
      summary: Delete export snapshot
      description: |2

        Delete an export file by specified export ID.
      operationId: api_projects_exports_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        description: Primary key identifying the export file.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
          content: {}
  /api/projects/{id}/exports/{export_pk}/convert:
    post:
      tags:
      - Export
      summary: Export conversion
      description: |2

        Convert export snapshot to selected format
      operationId: api_projects_exports_convert_create
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        description: Primary key identifying the export file.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportConvert'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportConvert'
      x-codegen-request-body-name: data
  /api/projects/{id}/exports/{export_pk}/download:
    get:
      tags:
      - Export
      summary: Download export snapshot as file in specified format
      description: |2

        Download an export file in the specified format for a specific project. Specify the project ID with the `id`
        parameter in the path and the ID of the export file you want to download using the `export_pk` parameter
        in the path.

        Get the `export_pk` from the response of the request to [Create new export](/api#operation/api_projects_exports_create)
        or after [listing export files](/api#operation/api_projects_exports_list).
      operationId: api_projects_exports_download_read
      parameters:
      - name: exportType
        in: query
        description: Selected export format
        schema:
          type: string
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      - name: export_pk
        in: path
        description: Primary key identifying the export file.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content: {}
  /api/projects/{id}/file-uploads:
    get:
      tags:
      - ProjectImport
      summary: Get files list
      description: |2

        Retrieve the list of uploaded files used to create labeling tasks for a specific project.
      operationId: api_projects_file-uploads_list
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
      - name: all
        in: query
        description: Set to "true" if you want to retrieve all file uploads
        schema:
          type: boolean
      - name: ids
        in: query
        description: "Specify the list of file upload IDs to retrieve, e.g. ids=[1,2,3]"
        style: form
        explode: false
        schema:
          type: array
          items:
            title: File upload ID
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUpload'
    delete:
      tags:
      - ProjectImport
      summary: Delete files
      description: |2

        Delete uploaded files for a specific project.
      operationId: api_projects_file-uploads_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this file upload.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
  /api/projects/{id}/import:
    post:
      tags:
      - ProjectImport
      summary: Import tasks
      description: |2

        Import data as labeling tasks in bulk using this API endpoint. You can use this API endpoint to import multiple tasks.
        One POST request is limited at 250K tasks and 200 MB.

        **Note:** Imported data is verified against a project *label_config* and must
        include all variables that were used in the *label_config*. For example,
        if the label configuration has a *$text* variable, then each item in a data object
        must include a "text" field.
        <br>

        ## POST requests
        <hr style="opacity:0.3">

        There are three possible ways to import tasks with this endpoint:

        ### 1\. **POST with data**
        Send JSON tasks as POST data. Only JSON is supported for POSTing files directly.
        Update this example to specify your authorization token and Label Studio instance host, then run the following from
        the command line.

        ```bash
        curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \
        -X POST 'https://localhost:8080/api/projects/1/import' --data '[{"text": "Some text 1"}, {"text": "Some text 2"}]'
        ```

        ### 2\. **POST with files**
        Send tasks as files. You can attach multiple files with different names.

        - **JSON**: text files in JavaScript object notation format
        - **CSV**: text files with tables in Comma Separated Values format
        - **TSV**: text files with tables in Tab Separated Value format
        - **TXT**: simple text files are similar to CSV with one column and no header, supported for projects with one source only

        Update this example to specify your authorization token, Label Studio instance host, and file name and path,
        then run the following from the command line:

        ```bash
        curl -H 'Authorization: Token abc123' \
        -X POST 'https://localhost:8080/api/projects/1/import' -F ‘file=@path/to/my_file.csv’
        ```

        ### 3\. **POST with URL**
        You can also provide a URL to a file with labeling tasks. Supported file formats are the same as in option 2.

        ```bash
        curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \
        -X POST 'https://localhost:8080/api/projects/1/import' \
        --data '[{"url": "http://example.com/test1.csv"}, {"url": "http://example.com/test2.csv"}]'
        ```

        <br>
      operationId: api_projects_import_create
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportApi'
        required: true
      responses:
        "201":
          description: Tasks successfully imported
          content:
            application/json:
              schema:
                title: Task creation response
                type: object
                properties:
                  task_count:
                    title: task_count
                    type: integer
                    description: Number of tasks added
                  annotation_count:
                    title: annotation_count
                    type: integer
                    description: Number of annotations added
                  predictions_count:
                    title: predictions_count
                    type: integer
                    description: Number of predictions added
                  duration:
                    title: duration
                    type: number
                    description: Time in seconds to create
                  file_upload_ids:
                    title: file_upload_ids
                    type: array
                    description: Database IDs of uploaded files
                    items:
                      title: File Upload IDs
                      type: integer
                  could_be_tasks_list:
                    title: could_be_tasks_list
                    type: boolean
                    description: "Whether uploaded files can contain lists of tasks,\
                      \ like CSV/TSV files"
                  found_formats:
                    title: found_formats
                    type: array
                    description: The list of found file formats
                    items:
                      title: File format
                      type: string
                  data_columns:
                    title: data_columns
                    type: array
                    description: The list of found data columns
                    items:
                      title: Data column name
                      type: string
                description: Task creation response
        "400":
          description: ""
          content:
            application/json:
              schema:
                title: Incorrect task data
                type: string
                description: String with error description
      x-codegen-request-body-name: data
  /api/projects/{id}/imports/{import_pk}/:
    get:
      tags:
      - Projects
      summary: Get project import info
      description: Return data related to async project import operation
      operationId: api_projects_imports_read
      parameters:
      - name: import_pk
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: A unique integer value identifying this project import.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectImport'
  /api/projects/{id}/reimports/{reimport_pk}/:
    get:
      tags:
      - Projects
      summary: Get project reimport info
      description: Return data related to async project reimport operation
      operationId: api_projects_reimports_read
      parameters:
      - name: reimport_pk
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: A unique integer value identifying this project reimport.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectReimport'
  /api/projects/{id}/tasks/:
    get:
      tags:
      - Projects
      summary: List project tasks
      description: |2

        Retrieve a paginated list of tasks for a specific project. For example, use the following cURL command:
        ```bash
        curl -X GET https://localhost:8080/api/projects/{id}/tasks/?page=1&page_size=10 -H 'Authorization: Token abc123'
        ```
      operationId: api_projects_tasks_list
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: "[or \"start\"] current page"
        schema:
          type: integer
      - name: page_size
        in: query
        description: "[or \"length\"] tasks per page, use -1 to obtain all tasks (in\
          \ this case \"page\" has no effect and this operation might be slow)"
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content: {}
    delete:
      tags:
      - Projects
      summary: Delete all tasks
      description: Delete all tasks from a specific project.
      operationId: api_projects_tasks_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
  /api/projects/{id}/validate/:
    post:
      tags:
      - Projects
      summary: Validate project label config
      description: |2

        Determine whether the label configuration for a specific project is valid.
      operationId: api_projects_validate_label_config
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfig'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLabelConfig'
      x-codegen-request-body-name: data
  /api/storages/:
    get:
      tags:
      - Storage
      summary: List all import storages from the project
      description: Retrieve a list of the import storages of all types with their
        IDs.
      operationId: api_storages_list
      responses:
        "200":
          description: List of ImportStorageSerializer
          content: {}
  /api/storages/azure/:
    get:
      tags:
      - "Storage: Azure"
      summary: Get all import storage
      description: Get list of all Azure import storage connections.
      operationId: api_storages_azure_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureBlobImportStorage'
    post:
      tags:
      - "Storage: Azure"
      summary: Create new storage
      description: Get new Azure import storage
      operationId: api_storages_azure_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
      x-codegen-request-body-name: data
  /api/storages/azure/validate:
    post:
      tags:
      - "Storage: Azure"
      summary: Validate import storage
      description: Validate a specific Azure import storage connection.
      operationId: api_storages_azure_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
      x-codegen-request-body-name: data
  /api/storages/azure/{id}:
    get:
      tags:
      - "Storage: Azure"
      summary: Get import storage
      description: Get a specific Azure import storage connection.
      operationId: api_storages_azure_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob import storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
    delete:
      tags:
      - "Storage: Azure"
      summary: Delete import storage
      description: Delete a specific Azure import storage connection.
      operationId: api_storages_azure_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob import storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: Azure"
      summary: Update import storage
      description: Update a specific Azure import storage connection.
      operationId: api_storages_azure_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob import storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobImportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
      x-codegen-request-body-name: data
  /api/storages/azure/{id}/sync:
    post:
      tags:
      - "Storage: Azure"
      summary: Sync import storage
      description: Sync tasks from an Azure import storage connection.
      operationId: api_storages_azure_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
      x-codegen-request-body-name: data
  /api/storages/export:
    get:
      tags:
      - Storage
      summary: List all export storages from the project
      description: Retrieve a list of the export storages of all types with their
        IDs.
      operationId: api_storages_export_list
      responses:
        "200":
          description: List of ExportStorageSerializer
          content: {}
  /api/storages/export/azure:
    get:
      tags:
      - "Storage: Azure"
      summary: Get all export storage
      description: Get a list of all Azure export storage connections.
      operationId: api_storages_export_azure_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureBlobExportStorage'
    post:
      tags:
      - "Storage: Azure"
      summary: Create export storage
      description: Create a new Azure export storage connection to store annotations.
      operationId: api_storages_export_azure_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/azure/validate:
    post:
      tags:
      - "Storage: Azure"
      summary: Validate export storage
      description: Validate a specific Azure export storage connection.
      operationId: api_storages_export_azure_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/azure/{id}:
    get:
      tags:
      - "Storage: Azure"
      summary: Get export storage
      description: Get a specific Azure export storage connection.
      operationId: api_storages_export_azure_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob export storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
    delete:
      tags:
      - "Storage: Azure"
      summary: Delete export storage
      description: Delete a specific Azure export storage connection.
      operationId: api_storages_export_azure_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob export storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: Azure"
      summary: Update export storage
      description: Update a specific Azure export storage connection.
      operationId: api_storages_export_azure_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this azure blob export storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobExportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/azure/{id}/sync:
    post:
      tags:
      - "Storage: Azure"
      summary: Sync export storage
      description: Sync tasks from an Azure export storage connection.
      operationId: api_storages_export_azure_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureBlobExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/gcs:
    get:
      tags:
      - "Storage: GCS"
      summary: Get all export storage
      description: Get a list of all GCS export storage connections.
      operationId: api_storages_export_gcs_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSExportStorage'
    post:
      tags:
      - "Storage: GCS"
      summary: Create export storage
      description: Create a new GCS export storage connection to store annotations.
      operationId: api_storages_export_gcs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/gcs/validate:
    post:
      tags:
      - "Storage: GCS"
      summary: Validate export storage
      description: Validate a specific GCS export storage connection.
      operationId: api_storages_export_gcs_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/gcs/{id}:
    get:
      tags:
      - "Storage: GCS"
      summary: Get export storage
      description: Get a specific GCS export storage connection.
      operationId: api_storages_export_gcs_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs export storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
    delete:
      tags:
      - "Storage: GCS"
      summary: Delete export storage
      description: Delete a specific GCS export storage connection.
      operationId: api_storages_export_gcs_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs export storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: GCS"
      summary: Update export storage
      description: Update a specific GCS export storage connection.
      operationId: api_storages_export_gcs_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs export storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSExportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/gcs/{id}/sync:
    post:
      tags:
      - "Storage: GCS"
      summary: Sync export storage
      description: Sync tasks from an GCS export storage connection.
      operationId: api_storages_export_gcs_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/localfiles:
    get:
      tags:
      - "Storage: Local"
      summary: Get all export storage
      description: Get a list of all Local export storage connections.
      operationId: api_storages_export_localfiles_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalFilesExportStorage'
    post:
      tags:
      - "Storage: Local"
      summary: Create export storage
      description: Create a new local file export storage connection to store annotations.
      operationId: api_storages_export_localfiles_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/localfiles/validate:
    post:
      tags:
      - "Storage: Local"
      summary: Validate export storage
      description: Validate a specific local file export storage connection.
      operationId: api_storages_export_localfiles_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/localfiles/{id}:
    get:
      tags:
      - "Storage: Local"
      summary: Get export storage
      description: Get a specific local file export storage connection.
      operationId: api_storages_export_localfiles_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this local files export storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
    delete:
      tags:
      - "Storage: Local"
      summary: Delete export storage
      description: Delete a specific local file export storage connection.
      operationId: api_storages_export_localfiles_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this local files export storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: Local"
      summary: Update export storage
      description: Update a specific local file export storage connection.
      operationId: api_storages_export_localfiles_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this local files export storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesExportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/localfiles/{id}/sync:
    post:
      tags:
      - "Storage: Local"
      summary: Sync export storage
      description: Sync tasks from a local file export storage connection.
      operationId: api_storages_export_localfiles_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/redis:
    get:
      tags:
      - "Storage: Redis"
      summary: Get all export storage
      description: Get a list of all Redis export storage connections.
      operationId: api_storages_export_redis_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RedisExportStorage'
    post:
      tags:
      - "Storage: Redis"
      summary: Create export storage
      description: Create a new Redis export storage connection to store annotations.
      operationId: api_storages_export_redis_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/redis/validate:
    post:
      tags:
      - "Storage: Redis"
      summary: Validate export storage
      description: Validate a specific Redis export storage connection.
      operationId: api_storages_export_redis_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/redis/{id}:
    get:
      tags:
      - "Storage: Redis"
      summary: Get export storage
      description: Get a specific Redis export storage connection.
      operationId: api_storages_export_redis_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis export storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
    delete:
      tags:
      - "Storage: Redis"
      summary: Delete export storage
      description: Delete a specific Redis export storage connection.
      operationId: api_storages_export_redis_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis export storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: Redis"
      summary: Update export storage
      description: Update a specific Redis export storage connection.
      operationId: api_storages_export_redis_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis export storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisExportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/redis/{id}/sync:
    post:
      tags:
      - "Storage: Redis"
      summary: Sync export storage
      description: Sync tasks from a specific Redis export storage connection.
      operationId: api_storages_export_redis_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/s3:
    get:
      tags:
      - Storage:S3
      summary: Get all export storage
      description: Get a list of all S3 export storage connections.
      operationId: api_storages_export_s3_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/S3ExportStorage'
    post:
      tags:
      - Storage:S3
      summary: Create export storage
      description: Create a new S3 export storage connection to store annotations.
      operationId: api_storages_export_s3_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/s3/validate:
    post:
      tags:
      - Storage:S3
      summary: Validate export storage
      description: Validate a specific S3 export storage connection.
      operationId: api_storages_export_s3_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/s3/{id}:
    get:
      tags:
      - Storage:S3
      summary: Get export storage
      description: Get a specific S3 export storage connection.
      operationId: api_storages_export_s3_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 export storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
    delete:
      tags:
      - Storage:S3
      summary: Delete export storage
      description: Delete a specific S3 export storage connection.
      operationId: api_storages_export_s3_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 export storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Storage:S3
      summary: Update export storage
      description: Update a specific S3 export storage connection.
      operationId: api_storages_export_s3_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 export storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ExportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/s3/{id}/sync:
    post:
      tags:
      - Storage:S3
      summary: Sync export storage
      description: Sync tasks from an S3 export storage connection.
      operationId: api_storages_export_s3_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ExportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
      x-codegen-request-body-name: data
  /api/storages/export/types:
    get:
      tags:
      - Storage
      summary: List all export storages types
      description: Retrieve a list of the export storages types.
      operationId: api_storages_export_types_list
      responses:
        "200":
          description: "A list of export storages types {'name': name, 'title': title}."
          content: {}
  /api/storages/gcs/:
    get:
      tags:
      - "Storage: GCS"
      summary: Get all import storage
      description: Get a list of all GCS import storage connections.
      operationId: api_storages_gcs_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSImportStorage'
    post:
      tags:
      - "Storage: GCS"
      summary: Create import storage
      description: Create a new GCS import storage connection.
      operationId: api_storages_gcs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
      x-codegen-request-body-name: data
  /api/storages/gcs/validate:
    post:
      tags:
      - "Storage: GCS"
      summary: Validate import storage
      description: Validate a specific GCS import storage connection.
      operationId: api_storages_gcs_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
      x-codegen-request-body-name: data
  /api/storages/gcs/{id}:
    get:
      tags:
      - "Storage: GCS"
      summary: Get import storage
      description: Get a specific GCS import storage connection.
      operationId: api_storages_gcs_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs import storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
    delete:
      tags:
      - "Storage: GCS"
      summary: Delete import storage
      description: Delete a specific GCS import storage connection.
      operationId: api_storages_gcs_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs import storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: GCS"
      summary: Update import storage
      description: Update a specific GCS import storage connection.
      operationId: api_storages_gcs_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this gcs import storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSImportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
      x-codegen-request-body-name: data
  /api/storages/gcs/{id}/sync:
    post:
      tags:
      - "Storage: GCS"
      summary: Sync import storage
      description: Sync tasks from an GCS import storage connection.
      operationId: api_storages_gcs_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
      x-codegen-request-body-name: data
  /api/storages/localfiles/:
    get:
      tags:
      - "Storage: Local"
      summary: Get all import storage
      description: Get a list of all local file import storage connections.
      operationId: api_storages_localfiles_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalFilesImportStorage'
    post:
      tags:
      - "Storage: Local"
      summary: Create import storage
      description: Create a new local file import storage connection.
      operationId: api_storages_localfiles_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
      x-codegen-request-body-name: data
  /api/storages/localfiles/validate:
    post:
      tags:
      - "Storage: Local"
      summary: Validate import storage
      description: Validate a specific local file import storage connection.
      operationId: api_storages_localfiles_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
      x-codegen-request-body-name: data
  /api/storages/localfiles/{id}:
    get:
      tags:
      - "Storage: Local"
      summary: Get import storage
      description: Get a specific local file import storage connection.
      operationId: api_storages_localfiles_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this local files import storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
    delete:
      tags:
      - "Storage: Local"
      summary: Delete import storage
      description: Delete a specific local import storage connection.
      operationId: api_storages_localfiles_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this local files import storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: Local"
      summary: Update import storage
      description: Update a specific local file import storage connection.
      operationId: api_storages_localfiles_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this local files import storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesImportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
      x-codegen-request-body-name: data
  /api/storages/localfiles/{id}/sync:
    post:
      tags:
      - "Storage: Local"
      summary: Sync import storage
      description: Sync tasks from a local file import storage connection.
      operationId: api_storages_localfiles_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalFilesImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
      x-codegen-request-body-name: data
  /api/storages/redis/:
    get:
      tags:
      - "Storage: Redis"
      summary: Get all import storage
      description: Get a list of all Redis import storage connections.
      operationId: api_storages_redis_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RedisImportStorage'
    post:
      tags:
      - "Storage: Redis"
      summary: Create import storage
      description: Create a new Redis import storage connection.
      operationId: api_storages_redis_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
      x-codegen-request-body-name: data
  /api/storages/redis/validate:
    post:
      tags:
      - "Storage: Redis"
      summary: Validate import storage
      description: Validate a specific Redis import storage connection.
      operationId: api_storages_redis_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
      x-codegen-request-body-name: data
  /api/storages/redis/{id}:
    get:
      tags:
      - "Storage: Redis"
      summary: Get import storage
      description: Get a specific Redis import storage connection.
      operationId: api_storages_redis_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis import storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
    delete:
      tags:
      - "Storage: Redis"
      summary: Delete import storage
      description: Delete a specific Redis import storage connection.
      operationId: api_storages_redis_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis import storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - "Storage: Redis"
      summary: Update import storage
      description: Update a specific Redis import storage connection.
      operationId: api_storages_redis_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this redis import storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisImportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
      x-codegen-request-body-name: data
  /api/storages/redis/{id}/sync:
    post:
      tags:
      - "Storage: Redis"
      summary: Sync import storage
      description: Sync tasks from a specific Redis import storage connection.
      operationId: api_storages_redis_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
      x-codegen-request-body-name: data
  /api/storages/s3/:
    get:
      tags:
      - Storage:S3
      summary: Get import storage
      description: Get a list of all S3 import storage connections.
      operationId: api_storages_s3_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/S3ImportStorage'
    post:
      tags:
      - Storage:S3
      summary: Create new storage
      description: Get new S3 import storage
      operationId: api_storages_s3_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
      x-codegen-request-body-name: data
  /api/storages/s3/validate:
    post:
      tags:
      - Storage:S3
      summary: Validate import storage
      description: Validate a specific S3 import storage connection.
      operationId: api_storages_s3_validate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
      x-codegen-request-body-name: data
  /api/storages/s3/{id}:
    get:
      tags:
      - Storage:S3
      summary: Get import storage
      description: Get a specific S3 import storage connection.
      operationId: api_storages_s3_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 import storage.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
    delete:
      tags:
      - Storage:S3
      summary: Delete import storage
      description: Delete a specific S3 import storage connection.
      operationId: api_storages_s3_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 import storage.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Storage:S3
      summary: Update import storage
      description: Update a specific S3 import storage connection.
      operationId: api_storages_s3_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this s3 import storage.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ImportStorage'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
      x-codegen-request-body-name: data
  /api/storages/s3/{id}/sync:
    post:
      tags:
      - Storage:S3
      summary: Sync import storage
      description: Sync tasks from an S3 import storage connection.
      operationId: api_storages_s3_sync_create
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3ImportStorage'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
      x-codegen-request-body-name: data
  /api/storages/types:
    get:
      tags:
      - Storage
      summary: List all import storages types
      description: Retrieve a list of the import storages types.
      operationId: api_storages_types_list
      responses:
        "200":
          description: "A list of import storages types {'name': name, 'title': title}."
          content: {}
  /api/tasks/:
    get:
      tags:
      - Tasks
      summary: Get tasks list
      description: |2

        Retrieve a list of tasks with pagination for a specific view or project, by using filters and ordering.
      operationId: api_tasks_list
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: view
        in: query
        description: View ID
        schema:
          type: integer
      - name: project
        in: query
        description: Project ID
        schema:
          type: integer
      - name: resolve_uri
        in: query
        description: Resolve task data URIs using Cloud Storage
        schema:
          type: boolean
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                - count
                - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaseTask'
    post:
      tags:
      - Tasks
      summary: Create task
      description: Create a new labeling task in Label Studio.
      operationId: api_tasks_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTask'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTask'
      x-codegen-request-body-name: data
  /api/tasks/{id}/:
    get:
      tags:
      - Tasks
      summary: Get task
      description: |2

        Get task data, metadata, annotations and other attributes for a specific labeling task by task ID.
      operationId: api_tasks_read
      parameters:
      - name: id
        in: path
        description: Task ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data_manager_task_serializer'
    delete:
      tags:
      - Tasks
      summary: Delete task
      description: Delete a task in Label Studio. This action cannot be undone!
      operationId: api_tasks_delete
      parameters:
      - name: id
        in: path
        description: Task ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Tasks
      summary: Update task
      description: Update the attributes of an existing labeling task.
      operationId: api_tasks_partial_update
      parameters:
      - name: id
        in: path
        description: Task ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSimple'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSimple'
      x-codegen-request-body-name: data
  /api/tasks/{id}/annotations/:
    get:
      tags:
      - Annotations
      summary: Get all task annotations
      description: List all annotations for a task.
      operationId: api_tasks_annotations_list
      parameters:
      - name: id
        in: path
        description: Task ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
    post:
      tags:
      - Annotations
      summary: Create annotation
      description: "\nAdd annotations to a task like an annotator does. The content\
        \ of the result field depends on your \nlabeling configuration. For example,\
        \ send the following data as part of your POST \nrequest to send an empty\
        \ annotation with the ID of the user who completed the task:\n\n```json\n\
        {\n\"result\": {},\n\"was_cancelled\": true,\n\"ground_truth\": true,\n\"\
        lead_time\": 0,\n\"task\": 0\n\"completed_by\": 123\n} \n```\n"
      operationId: api_tasks_annotations_create
      parameters:
      - name: id
        in: path
        description: Task ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      x-codegen-request-body-name: data
  /api/users/:
    get:
      tags:
      - Users
      summary: List users
      description: List the users that exist on the Label Studio server.
      operationId: api_users_list
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseUser'
    post:
      tags:
      - Users
      summary: Create new user
      description: Create a user in Label Studio.
      operationId: api_users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
      x-codegen-request-body-name: data
  /api/users/{id}/:
    get:
      tags:
      - Users
      summary: Get user info
      description: "Get info about a specific Label Studio user, based on the user\
        \ ID."
      operationId: api_users_read
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
    delete:
      tags:
      - Users
      summary: Delete user
      description: Delete a specific Label Studio user.
      operationId: api_users_delete
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Users
      summary: Update user details
      description: |2

        Update details for a specific user, such as their name or contact information, in Label Studio.
      operationId: api_users_partial_update
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
      x-codegen-request-body-name: data
  /api/webhooks/:
    get:
      tags:
      - Webhooks
      summary: List all webhooks
      description: List all webhooks set up for your organization.
      operationId: api_webhooks_list
      parameters:
      - name: project
        in: query
        description: Project ID
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
    post:
      tags:
      - Webhooks
      summary: Create a webhook
      description: Create a webhook for your organization.
      operationId: api_webhooks_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
      x-codegen-request-body-name: data
  /api/webhooks/info/:
    get:
      tags:
      - Webhooks
      summary: Get all webhook actions
      description: Get descriptions of all available webhook actions to set up webhooks.
      operationId: api_webhooks_info_list
      parameters:
      - name: organization-only
        in: query
        description: organization-only or not
        schema:
          type: boolean
      responses:
        "200":
          description: Object with description data.
          content: {}
  /api/webhooks/{id}/:
    get:
      tags:
      - Webhooks
      summary: Get webhook info
      operationId: api_webhooks_read
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this webhook.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      tags:
      - Webhooks
      summary: Save webhook info
      operationId: api_webhooks_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this webhook.
        required: true
        schema:
          type: integer
      - name: url
        in: query
        description: URL of webhook
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
          format: uri
      - name: send_payload
        in: query
        description: If value is False send only action
        schema:
          type: boolean
      - name: send_for_all_actions
        in: query
        description: If value is False - used only for actions from WebhookAction
        schema:
          type: boolean
      - name: headers
        in: query
        description: Key Value Json of headers
        schema:
          type: string
      - name: is_active
        in: query
        description: If value is False the webhook is disabled
        schema:
          type: boolean
      - name: actions
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - PROJECT_CREATED
            - PROJECT_UPDATED
            - PROJECT_DELETED
            - TASKS_CREATED
            - TASKS_DELETED
            - ANNOTATION_CREATED
            - ANNOTATIONS_CREATED
            - ANNOTATION_UPDATED
            - ANNOTATIONS_DELETED
            - LABEL_LINK_CREATED
            - LABEL_LINK_UPDATED
            - LABEL_LINK_DELETED
          default: "[]"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSerializerForUpdate'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSerializerForUpdate'
      x-codegen-request-body-name: data
    delete:
      tags:
      - Webhooks
      summary: Delete webhook info
      operationId: api_webhooks_delete
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this webhook.
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: ""
          content: {}
    patch:
      tags:
      - Webhooks
      summary: Update webhook info
      operationId: api_webhooks_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this webhook.
        required: true
        schema:
          type: integer
      - name: url
        in: query
        description: URL of webhook
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
          format: uri
      - name: send_payload
        in: query
        description: If value is False send only action
        schema:
          type: boolean
      - name: send_for_all_actions
        in: query
        description: If value is False - used only for actions from WebhookAction
        schema:
          type: boolean
      - name: headers
        in: query
        description: Key Value Json of headers
        schema:
          type: string
      - name: is_active
        in: query
        description: If value is False the webhook is disabled
        schema:
          type: boolean
      - name: actions
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - PROJECT_CREATED
            - PROJECT_UPDATED
            - PROJECT_DELETED
            - TASKS_CREATED
            - TASKS_DELETED
            - ANNOTATION_CREATED
            - ANNOTATIONS_CREATED
            - ANNOTATION_UPDATED
            - ANNOTATIONS_DELETED
            - LABEL_LINK_CREATED
            - LABEL_LINK_UPDATED
            - LABEL_LINK_DELETED
          default: "[]"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSerializerForUpdate'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSerializerForUpdate'
      x-codegen-request-body-name: data
  /data/local-files/:
    get:
      tags:
      - data
      description: Serving files for LocalFilesImportStorage
      operationId: data_local-files_list
      responses:
        "200":
          description: ""
          content: {}
components:
  schemas:
    Annotation:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_username:
          title: Created username
          type: string
          description: Username string
          readOnly: true
        created_ago:
          title: Created ago
          minLength: 1
          type: string
          description: Time delta from creation time
          readOnly: true
          default: ""
        completed_by:
          title: Completed by
          type: integer
        unique_id:
          title: Unique id
          minLength: 1
          type: string
        result:
          title: Result
          type: object
          properties: {}
          description: The main value of annotator work - labeling result in JSON
            format
          nullable: true
        was_cancelled:
          title: Was cancelled
          type: boolean
          description: User skipped the task
        ground_truth:
          title: Ground_truth
          type: boolean
          description: This annotation is a Ground Truth (ground_truth)
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last updated time
          format: date-time
          readOnly: true
        draft_created_at:
          title: Draft created at
          type: string
          description: Draft creation time
          format: date-time
          nullable: true
        lead_time:
          title: Lead time
          type: number
          description: How much time it took to annotate the task
          nullable: true
        import_id:
          title: Import id
          type: integer
          description: Original annotation ID that was at the import step or NULL
            if this annotation wasn't imported
          nullable: true
        last_action:
          title: Last action
          type: string
          description: Action which was performed in the last annotation history item
          nullable: true
          enum:
          - prediction
          - propagated_annotation
          - imported
          - submitted
          - updated
          - skipped
          - accepted
          - rejected
          - fixed_and_accepted
          - deleted_review
        task:
          title: Task
          type: integer
          description: Corresponding task for this annotation
          nullable: true
        project:
          title: Project
          type: integer
          description: Project ID for this annotation
          nullable: true
        updated_by:
          title: Updated by
          type: integer
          description: Last user who updated this annotation
          nullable: true
        parent_prediction:
          title: Parent prediction
          type: integer
          description: Points to the prediction from which this annotation was created
          nullable: true
        parent_annotation:
          title: Parent annotation
          type: integer
          description: Points to the parent annotation from which this annotation
            was created
          nullable: true
        last_created_by:
          title: Last created by
          type: integer
          description: User who created the last annotation history item
          nullable: true
    BaseUser:
      required:
      - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        first_name:
          title: First name
          maxLength: 256
          type: string
        last_name:
          title: Last name
          maxLength: 256
          type: string
        username:
          title: Username
          maxLength: 256
          minLength: 1
          type: string
        email:
          title: Email address
          maxLength: 254
          type: string
          format: email
        last_activity:
          title: Last activity
          type: string
          format: date-time
          readOnly: true
        avatar:
          title: Avatar
          type: string
          readOnly: true
        initials:
          title: Initials
          type: string
          readOnly: true
        phone:
          title: Phone
          maxLength: 256
          type: string
        active_organization:
          title: Active organization
          type: integer
          nullable: true
        allow_newsletters:
          title: Allow newsletters
          type: boolean
          description: Allow sending newsletters to user
          nullable: true
    Filter:
      required:
      - column
      - operator
      - type
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        index:
          title: Index
          type: integer
          description: To keep filter order
        column:
          title: Column
          maxLength: 1024
          minLength: 1
          type: string
          description: Field name
        type:
          title: Type
          maxLength: 1024
          minLength: 1
          type: string
          description: Field type
        operator:
          title: Operator
          maxLength: 1024
          minLength: 1
          type: string
          description: Filter operator
        value:
          title: Value
          type: object
          properties: {}
          description: Filter value
          nullable: true
    FilterGroup:
      required:
      - conjunction
      - filters
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        conjunction:
          title: Conjunction
          maxLength: 1024
          minLength: 1
          type: string
          description: Type of conjunction
    View:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        filter_group:
          $ref: '#/components/schemas/FilterGroup'
        data:
          title: Data
          type: object
          properties: {}
          description: Custom view data
          nullable: true
        ordering:
          title: Ordering
          type: object
          properties: {}
          description: Ordering parameters
          nullable: true
        selected_items:
          title: Selected items
          type: object
          properties: {}
          description: Selected items
          nullable: true
        user:
          title: User
          type: integer
          description: User who made this view
          nullable: true
        project:
          title: Project
          type: integer
          description: Project ID
    ViewReset:
      required:
      - project
      type: object
      properties:
        project:
          title: Project
          type: integer
    FileUpload:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        file:
          title: File
          type: string
          readOnly: true
    OrganizationInvite:
      type: object
      properties:
        token:
          title: Token
          minLength: 1
          type: string
        invite_url:
          title: Invite url
          minLength: 1
          type: string
    LabelLink:
      required:
      - from_name
      - label
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        annotations_count:
          title: Annotations count
          type: integer
          readOnly: true
        from_name:
          title: Tag name
          maxLength: 2048
          minLength: 1
          type: string
          description: Tag name
        project:
          title: Project
          type: integer
        label:
          title: Label
          type: integer
    Label:
      required:
      - created_by
      - organization
      - title
      - value
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        links:
          uniqueItems: true
          type: array
          readOnly: true
          items:
            type: integer
        created_at:
          title: Created at
          type: string
          description: Time of label creation
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Time of label modification
          format: date-time
          readOnly: true
        value:
          title: Value
          type: object
          properties: {}
          description: Label value
        title:
          title: Title
          maxLength: 2048
          minLength: 1
          type: string
          description: Label title
        description:
          title: Description
          type: string
          description: Label description
          nullable: true
        approved:
          title: Approved
          type: boolean
          description: Status of label
        created_by:
          title: Created by
          type: integer
          description: User who made this label
        approved_by:
          title: Approved by
          type: integer
          description: User who approved this label
          nullable: true
        organization:
          title: Organization
          type: integer
        projects:
          uniqueItems: true
          type: array
          readOnly: true
          items:
            type: integer
    LabelCreate:
      required:
      - from_name
      - project
      - title
      - value
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          title: Created by
          type: integer
        organization:
          title: Organization
          type: integer
        project:
          title: Project
          type: integer
        from_name:
          title: From name
          minLength: 1
          type: string
        created_at:
          title: Created at
          type: string
          description: Time of label creation
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Time of label modification
          format: date-time
          readOnly: true
        value:
          title: Value
          type: object
          properties: {}
          description: Label value
        title:
          title: Title
          maxLength: 2048
          minLength: 1
          type: string
          description: Label title
        description:
          title: Description
          type: string
          description: Label description
          nullable: true
        approved:
          title: Approved
          type: boolean
          description: Status of label
        approved_by:
          title: Approved by
          type: integer
          description: User who approved this label
          nullable: true
        projects:
          uniqueItems: true
          type: array
          readOnly: true
          items:
            type: integer
    MLBackend:
      required:
      - project
      - url
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        state:
          title: State
          type: string
          enum:
          - CO
          - DI
          - ER
          - TR
          - PR
        readable_state:
          title: Readable state
          type: string
          readOnly: true
        is_interactive:
          title: Is_interactive
          type: boolean
          description: "Used to interactively annotate tasks. If true, model returns\
            \ one list with results"
        url:
          title: Url
          minLength: 1
          type: string
          description: URL for the machine learning model server
        error_message:
          title: Error_message
          type: string
          description: Error message in error state
          nullable: true
        title:
          title: Title
          type: string
          description: Name of the machine learning backend
          nullable: true
        auth_method:
          title: Auth method
          type: string
          enum:
          - NONE
          - BASIC_AUTH
        basic_auth_user:
          title: Basic auth user
          type: string
          description: HTTP Basic Auth user
          nullable: true
        basic_auth_pass:
          title: Basic auth pass
          type: string
          nullable: true
        basic_auth_pass_is_set:
          title: Basic auth pass is set
          type: string
          readOnly: true
        description:
          title: Description
          type: string
          description: Description for the machine learning backend
          nullable: true
        extra_params:
          title: Extra params
          type: object
          properties: {}
          description: Any extra parameters passed to the ML Backend during the setup
          nullable: true
        model_version:
          title: Model version
          type: string
          description: Current model version associated with this machine learning
            backend
          nullable: true
        timeout:
          title: Timeout
          type: number
          description: Response model timeout
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        auto_update:
          title: Auto_update
          type: boolean
          description: "If false, model version is set by the user, if true - getting\
            \ latest version from backend."
        project:
          title: Project
          type: integer
    MLInteractiveAnnotatingRequest:
      required:
      - task
      type: object
      properties:
        task:
          title: Task
          type: integer
          description: ID of task to annotate
        context:
          title: Context
          type: object
          properties: {}
          description: Context for ML model
          nullable: true
    OrganizationId:
      required:
      - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Organization title
          maxLength: 1000
          minLength: 1
          type: string
        contact_info:
          title: Contact info
          maxLength: 254
          type: string
          format: email
          nullable: true
    Organization:
      required:
      - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Organization title
          maxLength: 1000
          minLength: 1
          type: string
        token:
          title: Token
          maxLength: 256
          type: string
          nullable: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        contact_info:
          title: Contact info
          maxLength: 254
          type: string
          format: email
          nullable: true
        created_by:
          title: Created_by
          type: integer
          nullable: true
        users:
          uniqueItems: true
          type: array
          readOnly: true
          items:
            type: integer
    UserSerializerWithProjects:
      required:
      - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        first_name:
          title: First name
          maxLength: 256
          type: string
        last_name:
          title: Last name
          maxLength: 256
          type: string
        username:
          title: Username
          maxLength: 256
          minLength: 1
          type: string
        email:
          title: Email address
          maxLength: 254
          type: string
          format: email
        last_activity:
          title: Last activity
          type: string
          format: date-time
          readOnly: true
        avatar:
          title: Avatar
          type: string
          readOnly: true
        initials:
          title: Initials
          type: string
          readOnly: true
        phone:
          title: Phone
          maxLength: 256
          type: string
        active_organization:
          title: Active organization
          type: integer
          nullable: true
        allow_newsletters:
          title: Allow newsletters
          type: boolean
          description: Allow sending newsletters to user
          nullable: true
        created_projects:
          title: Created projects
          type: string
          readOnly: true
        contributed_to_projects:
          title: Contributed to projects
          type: string
          readOnly: true
    OrganizationMemberUser:
      required:
      - organization
      - user
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        organization:
          title: Organization
          type: integer
          description: Organization ID
        user:
          $ref: '#/components/schemas/UserSerializerWithProjects'
    Prediction:
      required:
      - task
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        model_version:
          title: Model version
          type: string
        created_ago:
          title: Created ago
          minLength: 1
          type: string
          description: Delta time from creation time
          readOnly: true
          default: ""
        result:
          title: Result
          type: object
          properties: {}
          description: Prediction result
          nullable: true
        score:
          title: Score
          type: number
          description: Prediction score
          nullable: true
        cluster:
          title: Cluster
          type: integer
          description: Cluster for the current prediction
          nullable: true
        neighbors:
          title: Neighbors
          type: object
          properties: {}
          description: Array of task IDs of the closest neighbors
          nullable: true
        mislabeling:
          title: Mislabeling
          type: number
          description: Related task mislabeling score
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        model:
          title: Model
          type: integer
          description: An ML Backend instance that created the prediction.
          nullable: true
        model_run:
          title: Model run
          type: integer
          description: A run of a ModelVersion that created the prediction.
          nullable: true
        task:
          title: Task
          type: integer
        project:
          title: Project
          type: integer
          nullable: true
    UserSimple:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        first_name:
          title: First name
          maxLength: 256
          type: string
        last_name:
          title: Last name
          maxLength: 256
          type: string
        email:
          title: Email address
          maxLength: 254
          type: string
          format: email
        avatar:
          title: Avatar
          type: string
          readOnly: true
      description: Project owner
    Project:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          maxLength: 50
          minLength: 3
          type: string
          description: Project name. Must be between 3 and 50 characters long.
          nullable: true
        description:
          title: Description
          type: string
          description: Project description
          nullable: true
        label_config:
          title: Label config
          type: string
          description: Label config in XML format. See more about it in documentation
          nullable: true
        expert_instruction:
          title: Expert instruction
          type: string
          description: Labeling instructions in HTML format
          nullable: true
        show_instruction:
          title: Show instruction
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          title: Show skip button
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          title: Enable empty annotation
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          title: Show annotation history
          type: boolean
          description: Show annotation history to annotator
        organization:
          title: Organization
          type: integer
          nullable: true
        color:
          title: Color
          maxLength: 16
          type: string
          nullable: true
        maximum_annotations:
          title: Maximum annotation number
          type: integer
          description: "Maximum number of annotations for one task. If the number\
            \ of annotations per task is equal or greater to this value, the task\
            \ is completed (is_labeled=True)"
        is_published:
          title: Published
          type: boolean
          description: Whether or not the project is published to annotators
        model_version:
          title: Model version
          type: string
          description: Machine learning model version
          nullable: true
        is_draft:
          title: Is draft
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          $ref: '#/components/schemas/UserSimple'
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          title: Min_annotations_to_start_training
          type: integer
          description: Minimum number of completed tasks after which model training
            is started
        start_training_on_annotation_update:
          title: Start training on annotation update
          type: string
          description: Start model training after any annotations are submitted or
            updated
          readOnly: true
        show_collab_predictions:
          title: Show predictions to annotator
          type: boolean
          description: "If set, the annotator can view model predictions"
        num_tasks_with_annotations:
          title: Num tasks with annotations
          type: integer
          description: Tasks with annotations count
          readOnly: true
        task_number:
          title: Task number
          type: integer
          description: Total task number in project
          readOnly: true
        useful_annotation_number:
          title: Useful annotation number
          type: integer
          description: Useful annotation number in project not including skipped_annotations_number
            and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number
            + ground_truth_number
          readOnly: true
        ground_truth_number:
          title: Ground truth number
          type: integer
          description: Honeypot annotation number in project
          readOnly: true
        skipped_annotations_number:
          title: Skipped annotations number
          type: integer
          description: Skipped by collaborators annotation number in project
          readOnly: true
        total_annotations_number:
          title: Total annotations number
          type: integer
          description: Total annotations number in project including skipped_annotations_number
            and ground_truth_number.
          readOnly: true
        total_predictions_number:
          title: Total predictions number
          type: integer
          description: "Total predictions number in project including skipped_annotations_number,\
            \ ground_truth_number, and useful_annotation_number."
          readOnly: true
        sampling:
          title: Sampling
          type: string
          nullable: true
          enum:
          - Sequential sampling
          - Uniform sampling
          - Uncertainty sampling
        show_ground_truth_first:
          title: Show ground truth first
          type: boolean
        show_overlap_first:
          title: Show overlap first
          type: boolean
        overlap_cohort_percentage:
          title: Overlap_cohort_percentage
          type: integer
        task_data_login:
          title: Task_data_login
          maxLength: 256
          type: string
          description: "Task data credentials: login"
          nullable: true
        task_data_password:
          title: Task_data_password
          maxLength: 256
          type: string
          description: "Task data credentials: password"
          nullable: true
        control_weights:
          title: Control weights
          type: object
          properties: {}
          description: "Dict of weights for each control tag in metric calculation.\
            \ Each control tag (e.g. label or choice) will have it's own key in control\
            \ weight dict with weight for each label and overall weight.For example,\
            \ if bounding box annotation with control tag named my_bbox should be\
            \ included with 0.33 weight in agreement calculation, and the first label\
            \ Car should be twice more important than Airplaine, then you have to\
            \ need the specify: {'my_bbox': {'type': 'RectangleLabels', 'labels':\
            \ {'Car': 1.0, 'Airplaine': 0.5}, 'overall': 0.33}"
          nullable: true
        parsed_label_config:
          title: Parsed label config
          type: object
          description: JSON-formatted labeling configuration
          readOnly: true
        evaluate_predictions_automatically:
          title: Evaluate predictions automatically
          type: boolean
          description: Retrieve and display predictions when loading a task
        config_has_control_tags:
          title: Config has control tags
          type: string
          description: Flag to detect is project ready for labeling
          readOnly: true
        skip_queue:
          title: Skip queue
          type: string
          nullable: true
          enum:
          - REQUEUE_FOR_ME
          - REQUEUE_FOR_OTHERS
          - IGNORE_SKIPPED
        reveal_preannotations_interactively:
          title: Reveal_preannotations_interactively
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          title: Pinned at
          type: string
          description: Pinned date and time
          format: date-time
          nullable: true
        finished_task_number:
          title: Finished task number
          type: integer
          description: Finished tasks
          readOnly: true
        queue_total:
          title: Queue total
          type: string
          readOnly: true
        queue_done:
          title: Queue done
          type: string
          readOnly: true
    ProjectLabelConfig:
      required:
      - label_config
      type: object
      properties:
        label_config:
          title: Label config
          minLength: 1
          type: string
          description: Label config in XML format. See more about it in documentation
    ConvertedFormat:
      required:
      - export_type
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        status:
          title: Status
          type: string
          enum:
          - created
          - in_progress
          - failed
          - completed
        export_type:
          title: Export type
          maxLength: 64
          minLength: 1
          type: string
        traceback:
          title: Traceback
          type: string
          description: Traceback report in case of errors
          nullable: true
    Export:
      type: object
      properties:
        title:
          title: Title
          maxLength: 2048
          type: string
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserSimple'
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        finished_at:
          title: Finished at
          type: string
          description: Complete or fail time
          format: date-time
          nullable: true
        status:
          title: Export status
          type: string
          enum:
          - created
          - in_progress
          - failed
          - completed
        md5:
          title: Md5 of file
          maxLength: 128
          minLength: 1
          type: string
        counters:
          title: Exporting meta data
          type: object
          properties: {}
        converted_formats:
          type: array
          items:
            $ref: '#/components/schemas/ConvertedFormat'
    TaskFilterOptions:
      type: object
      properties:
        view:
          title: View
          type: integer
          description: Apply filters from the view ID (a tab from the Data Manager)
        skipped:
          title: Skipped
          type: string
          description: '`only` - include all tasks with skipped annotations<br>`exclude`
            - exclude all tasks with skipped annotations'
          nullable: true
          enum:
          - only
          - exclude
        finished:
          title: Finished
          type: string
          description: '`only` - include all finished tasks (is_labeled = true)<br>`exclude`
            - exclude all finished tasks'
          nullable: true
          enum:
          - only
          - exclude
        annotated:
          title: Annotated
          type: string
          description: '`only` - include all tasks with at least one not skipped annotation<br>`exclude`
            - exclude all tasks with at least one not skipped annotation'
          nullable: true
          enum:
          - only
          - exclude
        only_with_annotations:
          title: Only with annotations
          type: boolean
          default: false
    AnnotationFilterOptions:
      type: object
      properties:
        usual:
          title: Usual
          type: boolean
          description: Include not skipped and not ground truth annotations
          nullable: true
          default: true
        ground_truth:
          title: Ground truth
          type: boolean
          description: Include ground truth annotations
          nullable: true
        skipped:
          title: Skipped
          type: boolean
          description: Include skipped annotations
          nullable: true
    SerializationOption:
      type: object
      properties:
        only_id:
          title: Only id
          type: boolean
          description: Include a full json body or IDs only
          default: false
      description: JSON dict with parameters
    SerializationOptions:
      type: object
      properties:
        drafts:
          $ref: '#/components/schemas/SerializationOption'
        predictions:
          $ref: '#/components/schemas/SerializationOption'
        annotations__completed_by:
          $ref: '#/components/schemas/SerializationOption'
        interpolate_key_frames:
          title: Interpolate key frames
          type: boolean
          description: Interpolate video key frames
          default: false
    ExportCreate:
      type: object
      properties:
        title:
          title: Title
          maxLength: 2048
          type: string
        id:
          title: ID
          type: integer
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserSimple'
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        finished_at:
          title: Finished at
          type: string
          description: Complete or fail time
          format: date-time
          nullable: true
        status:
          title: Export status
          type: string
          enum:
          - created
          - in_progress
          - failed
          - completed
        md5:
          title: Md5 of file
          maxLength: 128
          minLength: 1
          type: string
        counters:
          title: Exporting meta data
          type: object
          properties: {}
        converted_formats:
          type: array
          items:
            $ref: '#/components/schemas/ConvertedFormat'
        task_filter_options:
          $ref: '#/components/schemas/TaskFilterOptions'
        annotation_filter_options:
          $ref: '#/components/schemas/AnnotationFilterOptions'
        serialization_options:
          $ref: '#/components/schemas/SerializationOptions'
    ExportConvert:
      required:
      - export_type
      type: object
      properties:
        export_type:
          title: Export type
          minLength: 1
          type: string
          description: Export file format.
    ImportApi:
      required:
      - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/Prediction'
        data:
          title: Data
          type: object
          properties: {}
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          title: Meta
          type: object
          properties: {}
          description: "Meta is user imported (uploaded) data and can be useful as\
            \ input for an ML Backend for embeddings, advanced vectors, and other\
            \ info. It is passed to ML during training/predicting steps."
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Time a task was created
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last time a task was updated
          format: date-time
          readOnly: true
        overlap:
          title: Overlap
          type: integer
          description: Number of distinct annotators that processed the current task
        inner_id:
          title: Inner id
          type: integer
          description: "Internal task ID in the project, starts with 1"
          nullable: true
        total_annotations:
          title: Total_annotations
          type: integer
          description: Number of total annotations for the current task except cancelled
            annotations
        cancelled_annotations:
          title: Cancelled_annotations
          type: integer
          description: Number of total cancelled annotations for the current task
        total_predictions:
          title: Total_predictions
          type: integer
          description: Number of total predictions for the current task
        comment_count:
          title: Comment count
          type: integer
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          title: Unresolved comment count
          type: integer
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          title: Last comment updated at
          type: string
          description: When the last comment was updated
          format: date-time
          nullable: true
        updated_by:
          title: Updated by
          type: integer
          description: Last annotator or reviewer who updated this task
          nullable: true
        file_upload:
          title: File upload
          type: integer
          description: Uploaded file used as data source for this task
          nullable: true
        comment_authors:
          uniqueItems: true
          type: array
          description: Users who wrote comments
          items:
            type: integer
            description: Users who wrote comments
    ProjectImport:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        preannotated_from_fields:
          title: Preannotated from fields
          type: object
          properties: {}
          nullable: true
        commit_to_project:
          title: Commit to project
          type: boolean
        return_task_ids:
          title: Return task ids
          type: boolean
        status:
          title: Status
          type: string
          enum:
          - created
          - in_progress
          - failed
          - completed
        url:
          title: Url
          maxLength: 2048
          type: string
          nullable: true
        traceback:
          title: Traceback
          type: string
          nullable: true
        error:
          title: Error
          type: string
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Updated time
          format: date-time
          readOnly: true
        finished_at:
          title: Finished at
          type: string
          description: Complete or fail time
          format: date-time
          nullable: true
        task_count:
          title: Task count
          type: integer
        annotation_count:
          title: Annotation count
          type: integer
        prediction_count:
          title: Prediction count
          type: integer
        duration:
          title: Duration
          type: integer
        file_upload_ids:
          title: File upload ids
          type: object
          properties: {}
        could_be_tasks_list:
          title: Could be tasks list
          type: boolean
        found_formats:
          title: Found formats
          type: object
          properties: {}
        data_columns:
          title: Data columns
          type: object
          properties: {}
        tasks:
          title: Tasks
          type: object
          properties: {}
          nullable: true
        task_ids:
          title: Task ids
          type: object
          properties: {}
        project:
          title: Project
          type: integer
          nullable: true
    ProjectReimport:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        status:
          title: Status
          type: string
          enum:
          - created
          - in_progress
          - failed
          - completed
        error:
          title: Error
          type: string
          nullable: true
        task_count:
          title: Task count
          type: integer
        annotation_count:
          title: Annotation count
          type: integer
        prediction_count:
          title: Prediction count
          type: integer
        duration:
          title: Duration
          type: integer
        file_upload_ids:
          title: File upload ids
          type: object
          properties: {}
        files_as_tasks_list:
          title: Files as tasks list
          type: boolean
        found_formats:
          title: Found formats
          type: object
          properties: {}
        data_columns:
          title: Data columns
          type: object
          properties: {}
        traceback:
          title: Traceback
          type: string
          nullable: true
        project:
          title: Project
          type: integer
          nullable: true
    AzureBlobImportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: azure
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        container:
          title: Container
          type: string
          description: Azure blob container
          nullable: true
        prefix:
          title: Prefix
          type: string
          description: Azure blob prefix name
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          title: Account_name
          type: string
          description: Azure Blob account name
          nullable: true
        account_key:
          title: Account_key
          type: string
          description: Azure Blob account key
          nullable: true
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        presign_ttl:
          title: Presign_ttl
          type: integer
          description: Presigned URLs TTL (in minutes)
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    AzureBlobExportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: azure
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        container:
          title: Container
          type: string
          description: Azure blob container
          nullable: true
        prefix:
          title: Prefix
          type: string
          description: Azure blob prefix name
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          title: Account_name
          type: string
          description: Azure Blob account name
          nullable: true
        account_key:
          title: Account_key
          type: string
          description: Azure Blob account key
          nullable: true
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          type: boolean
          description: Deletion from storage enabled
          nullable: true
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    GCSExportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        bucket:
          title: Bucket
          type: string
          description: GCS bucket name
          nullable: true
        prefix:
          title: Prefix
          type: string
          description: GCS bucket prefix
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          title: Google_application_credentials
          type: string
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
          nullable: true
        google_project_id:
          title: Google Project ID
          type: string
          description: Google project ID
          nullable: true
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          type: boolean
          description: Deletion from storage enabled
          nullable: true
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    LocalFilesExportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: localfiles
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        path:
          title: Path
          type: string
          description: Local path
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          type: boolean
          description: Deletion from storage enabled
          nullable: true
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    RedisExportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: redis
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        path:
          title: Path
          type: string
          description: Storage prefix (optional)
          nullable: true
        host:
          title: Host
          type: string
          description: Server Host IP (optional)
          nullable: true
        port:
          title: Port
          type: string
          description: Server Port (optional)
          nullable: true
        password:
          title: Password
          type: string
          description: Server Password (optional)
          nullable: true
        regex_filter:
          title: Port
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          type: boolean
          description: Deletion from storage enabled
          nullable: true
        db:
          title: Db
          type: integer
          description: Server Database
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    S3ExportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        can_delete_objects:
          title: Can_delete_objects
          type: boolean
          description: Deletion from storage enabled
          nullable: true
        bucket:
          title: Bucket
          type: string
          description: S3 bucket name
          nullable: true
        prefix:
          title: Prefix
          type: string
          description: S3 bucket prefix
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          title: Aws_access_key_id
          type: string
          description: AWS_ACCESS_KEY_ID
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          type: string
          description: AWS_SECRET_ACCESS_KEY
          nullable: true
        aws_session_token:
          title: Aws_session_token
          type: string
          description: AWS_SESSION_TOKEN
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          type: string
          description: AWS SSE KMS Key ID
          nullable: true
        region_name:
          title: Region_name
          type: string
          description: AWS Region
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          type: string
          description: S3 Endpoint
          nullable: true
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    GCSImportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        bucket:
          title: Bucket
          type: string
          description: GCS bucket name
          nullable: true
        prefix:
          title: Prefix
          type: string
          description: GCS bucket prefix
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          title: Google_application_credentials
          type: string
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
          nullable: true
        google_project_id:
          title: Google Project ID
          type: string
          description: Google project ID
          nullable: true
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        presign_ttl:
          title: Presign_ttl
          type: integer
          description: Presigned URLs TTL (in minutes)
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    LocalFilesImportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: localfiles
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        path:
          title: Path
          type: string
          description: Local path
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    RedisImportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: redis
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        path:
          title: Path
          type: string
          description: Storage prefix (optional)
          nullable: true
        host:
          title: Host
          type: string
          description: Server Host IP (optional)
          nullable: true
        port:
          title: Port
          type: string
          description: Server Port (optional)
          nullable: true
        password:
          title: Password
          type: string
          description: Server Password (optional)
          nullable: true
        regex_filter:
          title: Port
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        db:
          title: Db
          type: integer
          description: Server Database
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    S3ImportStorage:
      required:
      - project
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          readOnly: true
          default: s3
        synchronizable:
          title: Synchronizable
          type: boolean
          default: true
        presign:
          title: Presign
          type: boolean
          default: true
        last_sync:
          title: Last sync
          type: string
          description: Last sync finished time
          format: date-time
          nullable: true
        last_sync_count:
          title: Last sync count
          type: integer
          description: Count of tasks synced last time
          nullable: true
        last_sync_job:
          title: Last_sync_job
          maxLength: 256
          type: string
          description: Last sync job ID
          nullable: true
        status:
          title: Status
          type: string
          enum:
          - initialized
          - queued
          - in_progress
          - failed
          - completed
        traceback:
          title: Traceback
          type: string
          description: Traceback report for the last failed sync
          nullable: true
        meta:
          title: Meta
          type: object
          properties: {}
          description: Meta and debug information about storage processes
          nullable: true
        title:
          title: Title
          maxLength: 256
          type: string
          description: Cloud storage title
          nullable: true
        description:
          title: Description
          type: string
          description: Cloud storage description
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        bucket:
          title: Bucket
          type: string
          description: S3 bucket name
          nullable: true
        prefix:
          title: Prefix
          type: string
          description: S3 bucket prefix
          nullable: true
        regex_filter:
          title: Regex_filter
          type: string
          description: Cloud storage regex for filtering objects
          nullable: true
        use_blob_urls:
          title: Use_blob_urls
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          title: Aws_access_key_id
          type: string
          description: AWS_ACCESS_KEY_ID
          nullable: true
        aws_secret_access_key:
          title: Aws_secret_access_key
          type: string
          description: AWS_SECRET_ACCESS_KEY
          nullable: true
        aws_session_token:
          title: Aws_session_token
          type: string
          description: AWS_SESSION_TOKEN
          nullable: true
        aws_sse_kms_key_id:
          title: Aws_sse_kms_key_id
          type: string
          description: AWS SSE KMS Key ID
          nullable: true
        region_name:
          title: Region_name
          type: string
          description: AWS Region
          nullable: true
        s3_endpoint:
          title: S3_endpoint
          type: string
          description: S3 Endpoint
          nullable: true
        presign_ttl:
          title: Presign_ttl
          type: integer
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          title: Recursive scan
          type: boolean
          description: Perform recursive scan over the bucket content
        project:
          title: Project
          type: integer
          description: A unique integer value identifying this project.
    BaseTask:
      required:
      - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        data:
          title: Data
          type: object
          properties: {}
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          title: Meta
          type: object
          properties: {}
          description: "Meta is user imported (uploaded) data and can be useful as\
            \ input for an ML Backend for embeddings, advanced vectors, and other\
            \ info. It is passed to ML during training/predicting steps."
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Time a task was created
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last time a task was updated
          format: date-time
          readOnly: true
        is_labeled:
          title: Is_labeled
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          title: Overlap
          type: integer
          description: Number of distinct annotators that processed the current task
        inner_id:
          title: Inner id
          type: integer
          description: "Internal task ID in the project, starts with 1"
          nullable: true
        total_annotations:
          title: Total_annotations
          type: integer
          description: Number of total annotations for the current task except cancelled
            annotations
        cancelled_annotations:
          title: Cancelled_annotations
          type: integer
          description: Number of total cancelled annotations for the current task
        total_predictions:
          title: Total_predictions
          type: integer
          description: Number of total predictions for the current task
        comment_count:
          title: Comment count
          type: integer
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          title: Unresolved comment count
          type: integer
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          title: Last comment updated at
          type: string
          description: When the last comment was updated
          format: date-time
          nullable: true
        project:
          title: Project
          type: integer
          description: Project ID for this task
          nullable: true
        updated_by:
          title: Updated by
          type: integer
          description: Last annotator or reviewer who updated this task
          nullable: true
        file_upload:
          title: File upload
          type: integer
          description: Uploaded file used as data source for this task
          nullable: true
        comment_authors:
          uniqueItems: true
          type: array
          description: Users who wrote comments
          items:
            type: integer
            description: Users who wrote comments
    data_manager_task_serializer:
      required:
      - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        predictions:
          title: Predictions
          type: string
          readOnly: true
        annotations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Annotation'
        drafts:
          title: Drafts
          type: string
          readOnly: true
        annotators:
          title: Annotators
          type: string
          readOnly: true
        inner_id:
          title: Inner id
          type: integer
        cancelled_annotations:
          title: Cancelled annotations
          type: integer
        total_annotations:
          title: Total annotations
          type: integer
        total_predictions:
          title: Total predictions
          type: integer
        completed_at:
          title: Completed at
          type: string
          format: date-time
        annotations_results:
          title: Annotations results
          type: string
          readOnly: true
        predictions_results:
          title: Predictions results
          type: string
          readOnly: true
        predictions_score:
          title: Predictions score
          type: number
        file_upload:
          title: File upload
          type: string
          readOnly: true
        storage_filename:
          title: Storage filename
          type: string
          readOnly: true
        annotations_ids:
          title: Annotations ids
          type: string
          readOnly: true
        predictions_model_versions:
          title: Predictions model versions
          type: string
          readOnly: true
        avg_lead_time:
          title: Avg lead time
          type: number
        draft_exists:
          title: Draft exists
          type: boolean
        updated_by:
          title: Updated by
          type: string
          readOnly: true
        data:
          title: Data
          type: object
          properties: {}
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          title: Meta
          type: object
          properties: {}
          description: "Meta is user imported (uploaded) data and can be useful as\
            \ input for an ML Backend for embeddings, advanced vectors, and other\
            \ info. It is passed to ML during training/predicting steps."
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Time a task was created
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last time a task was updated
          format: date-time
          readOnly: true
        is_labeled:
          title: Is_labeled
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          title: Overlap
          type: integer
          description: Number of distinct annotators that processed the current task
        comment_count:
          title: Comment count
          type: integer
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          title: Unresolved comment count
          type: integer
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          title: Last comment updated at
          type: string
          description: When the last comment was updated
          format: date-time
          nullable: true
        project:
          title: Project
          type: integer
          description: Project ID for this task
          nullable: true
        comment_authors:
          uniqueItems: true
          type: array
          description: Users who wrote comments
          items:
            type: integer
            description: Users who wrote comments
    TaskSimple:
      required:
      - data
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        data:
          title: Data
          type: object
          properties: {}
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          title: Meta
          type: object
          properties: {}
          description: "Meta is user imported (uploaded) data and can be useful as\
            \ input for an ML Backend for embeddings, advanced vectors, and other\
            \ info. It is passed to ML during training/predicting steps."
          nullable: true
        created_at:
          title: Created at
          type: string
          description: Time a task was created
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last time a task was updated
          format: date-time
          readOnly: true
        is_labeled:
          title: Is_labeled
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          title: Overlap
          type: integer
          description: Number of distinct annotators that processed the current task
        inner_id:
          title: Inner id
          type: integer
          description: "Internal task ID in the project, starts with 1"
          nullable: true
        total_annotations:
          title: Total_annotations
          type: integer
          description: Number of total annotations for the current task except cancelled
            annotations
        cancelled_annotations:
          title: Cancelled_annotations
          type: integer
          description: Number of total cancelled annotations for the current task
        total_predictions:
          title: Total_predictions
          type: integer
          description: Number of total predictions for the current task
        comment_count:
          title: Comment count
          type: integer
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          title: Unresolved comment count
          type: integer
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          title: Last comment updated at
          type: string
          description: When the last comment was updated
          format: date-time
          nullable: true
        project:
          title: Project
          type: integer
          description: Project ID for this task
          nullable: true
        updated_by:
          title: Updated by
          type: integer
          description: Last annotator or reviewer who updated this task
          nullable: true
        file_upload:
          title: File upload
          type: integer
          description: Uploaded file used as data source for this task
          nullable: true
        comment_authors:
          uniqueItems: true
          type: array
          description: Users who wrote comments
          items:
            type: integer
            description: Users who wrote comments
        annotations:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Annotation'
        predictions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Prediction'
    Webhook:
      required:
      - url
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        organization:
          title: Organization
          type: integer
          readOnly: true
        project:
          title: Project
          type: integer
          nullable: true
        url:
          title: URL of webhook
          maxLength: 2048
          minLength: 1
          type: string
          description: URL of webhook
          format: uri
        send_payload:
          title: Does webhook send the payload
          type: boolean
          description: If value is False send only action
        send_for_all_actions:
          title: Use webhook for all actions
          type: boolean
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          type: object
          properties: {}
          description: Key Value Json of headers
        is_active:
          title: Is webhook active
          type: boolean
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            type: string
            enum:
            - PROJECT_CREATED
            - PROJECT_UPDATED
            - PROJECT_DELETED
            - TASKS_CREATED
            - TASKS_DELETED
            - ANNOTATION_CREATED
            - ANNOTATIONS_CREATED
            - ANNOTATION_UPDATED
            - ANNOTATIONS_DELETED
            - LABEL_LINK_CREATED
            - LABEL_LINK_UPDATED
            - LABEL_LINK_DELETED
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last update time
          format: date-time
          readOnly: true
    WebhookSerializerForUpdate:
      required:
      - url
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        organization:
          title: Organization
          type: integer
          readOnly: true
        project:
          title: Project
          type: integer
          nullable: true
          readOnly: true
        url:
          title: URL of webhook
          maxLength: 2048
          minLength: 1
          type: string
          description: URL of webhook
          format: uri
        send_payload:
          title: Does webhook send the payload
          type: boolean
          description: If value is False send only action
        send_for_all_actions:
          title: Use webhook for all actions
          type: boolean
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          type: object
          properties: {}
          description: Key Value Json of headers
        is_active:
          title: Is webhook active
          type: boolean
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            type: string
            enum:
            - PROJECT_CREATED
            - PROJECT_UPDATED
            - PROJECT_DELETED
            - TASKS_CREATED
            - TASKS_DELETED
            - ANNOTATION_CREATED
            - ANNOTATIONS_CREATED
            - ANNOTATION_UPDATED
            - ANNOTATIONS_DELETED
            - LABEL_LINK_CREATED
            - LABEL_LINK_UPDATED
            - LABEL_LINK_DELETED
        created_at:
          title: Created at
          type: string
          description: Creation time
          format: date-time
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          description: Last update time
          format: date-time
          readOnly: true
  securitySchemes:
    Token:
      type: apiKey
      description: "The token (or API key) must be passed as a request header. You\
        \ can find your user token on the User Account page in Label Studio. Example:\
        \ <br><pre><code class=\"language-bash\">curl https://label-studio-host/api/projects\
        \ -H \"Authorization: Token [your-token]\"</code></pre>"
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
