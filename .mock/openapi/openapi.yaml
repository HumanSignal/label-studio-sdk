openapi: 3.0.3
info:
  title: Label Studio API
  version: ''
  description: Label Studio API for data annotation and labeling
  contact:
    url: https://labelstud.io
paths:
  /api/activity-logs/:
    get:
      operationId: api_activity_logs_list
      description: Retrieve activity logs filtered by workspace, project, user, HTTP
        method, date range or search query.
      summary: Get activity logs
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: End date/time (ISO-8601) for log filtering.
      - in: query
        name: method
        schema:
          type: string
          enum:
          - DELETE
          - GET
          - PATCH
          - POST
          - PUT
          - all
          default: all
        description: HTTP request method used in the log.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
        description: '[or "start"] Current page index.'
      - in: query
        name: page_size
        schema:
          type: integer
        description: '[or "length"] Logs per page, use -1 to obtain all logs (might
          be slow).'
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID to filter logs.
      - in: query
        name: search
        schema:
          type: string
        description: Search expression using "AND"/"OR" to filter by request URL.
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date/time (ISO-8601) for log filtering.
      - in: query
        name: user
        schema:
          type: integer
        description: User ID to filter logs.
      - in: query
        name: workspace
        schema:
          type: integer
        description: Workspace owner ID to filter logs.
      tags:
      - Activity Log
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityLogResponse'
          description: Activity logs
        '404':
          description: No more logs found
  /api/annotation-history/:
    get:
      operationId: api_annotation_history_list
      description: 'List annotation history items for an annotation. Annotation history
        logs all actions performed with annotations, such as: imports, submits, updates,
        reviews, and more. Users can view annotation history items in the Annotation
        History panel during labeling.'
      summary: List all annotation history items for annotation
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Annotation History
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotationHistory'
          description: ''
    delete:
      operationId: api_annotation_history_destroy
      description: Delete all annotation history items for a specific annotation,
        task or project. This method is available only for users with administrator
        roles.
      summary: Delete annotation history items
      tags:
      - Annotation History
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  removed:
                    type: integer
                    description: Number of removed items
          description: Returns a dict containing the count of removed items.
  /api/annotation-reviews/:
    get:
      operationId: api_annotation_reviews_list
      description: List all reviews for a specific annotation ID.
      summary: List reviews
      parameters:
      - in: query
        name: annotation
        schema:
          type: integer
      - in: query
        name: annotation__task__project
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Annotation Reviews
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotationReview'
          description: ''
    post:
      operationId: api_annotation_reviews_create
      description: Create a review for a specific annotation ID.
      summary: Create review
      tags:
      - Annotation Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationReviewRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationReview'
          description: ''
  /api/annotation-reviews/{id}/:
    get:
      operationId: api_annotation_reviews_retrieve
      description: Retrieve a specific review by ID for an annotation.
      summary: Get review
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation review.
        required: true
      tags:
      - Annotation Reviews
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationReview'
          description: ''
    put:
      operationId: api_annotation_reviews_update
      description: Overwrite a specific review by ID.
      summary: Put review
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation review.
        required: true
      tags:
      - Annotation Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationReviewRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationReview'
          description: ''
    patch:
      operationId: api_annotation_reviews_partial_update
      description: Update a specific review by ID.
      summary: Update review
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation review.
        required: true
      tags:
      - Annotation Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnotationReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnotationReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnotationReviewRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationReview'
          description: ''
    delete:
      operationId: api_annotation_reviews_destroy
      description: Delete a review by ID
      summary: Delete review
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this annotation review.
        required: true
      tags:
      - Annotation Reviews
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/annotations/{id}/:
    get:
      operationId: api_annotations_retrieve
      description: Retrieve a specific annotation for a task using the annotation
        result ID.
      summary: Get annotation by its ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Annotations
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
              examples:
                Response:
                  value:
                    id: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    task: 1
                    project: 1
                    completed_by: 1
                    updated_by: 1
                    was_cancelled: false
                    ground_truth: false
                    lead_time: 10
                  summary: response
          description: Retrieved annotation
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_annotations_partial_update
      description: Update existing attributes on an annotation.
      summary: Update annotation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Annotations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: array
                  items:
                    type: object
                  description: Labeling result in JSON format. Read more about the
                    format in [the Label Studio documentation.](https://labelstud.io/guide/task_format)
                  example:
                  - original_width: 1920
                    original_height: 1080
                    image_rotation: 0
                    from_name: bboxes
                    to_name: image
                    type: rectanglelabels
                    value:
                      x: 20
                      y: 30
                      width: 50
                      height: 60
                      rotation: 0
                      values:
                        rectanglelabels:
                        - Person
                task:
                  type: integer
                  description: Corresponding task for this annotation
                project:
                  type: integer
                  description: Project ID for this annotation
                completed_by:
                  type: integer
                  description: User ID of the person who created this annotation
                updated_by:
                  type: integer
                  description: Last user who updated this annotation
                was_cancelled:
                  type: boolean
                  description: User skipped the task
                ground_truth:
                  type: boolean
                  description: This annotation is a Ground Truth
                lead_time:
                  type: number
                  description: How much time it took to annotate the task (in seconds)
                  example: 100.5
              required: []
              example:
                result:
                - original_width: 1920
                  original_height: 1080
                  image_rotation: 0
                  from_name: bboxes
                  to_name: image
                  type: rectanglelabels
                  value:
                    x: 20
                    y: 30
                    width: 50
                    height: 60
                    rotation: 0
                    values:
                      rectanglelabels:
                      - Person
                was_cancelled: false
                ground_truth: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
              examples:
                Response:
                  value:
                    id: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    task: 1
                    project: 1
                    completed_by: 1
                    updated_by: 1
                    was_cancelled: false
                    ground_truth: false
                    lead_time: 10
                  summary: response
          description: Updated annotation
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_annotations_destroy
      description: Delete an annotation. This action can't be undone!
      summary: Delete annotation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Annotations
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/annotations/{id}/convert-to-draft:
    post:
      operationId: api_annotations_convert_to_draft_create
      description: Convert annotation to draft
      summary: Convert annotation to draft
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Annotations
      security:
      - Token: []
      responses:
        '200':
          description: No response body
      x-fern-audiences:
      - internal
  /api/annotations/bulk/:
    post:
      operationId: api_annotations_bulk_create
      description: Create multiple annotations at once
      summary: Bulk create annotations
      tags:
      - Annotations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationBulkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationBulkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationBulkRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Bulk annotations created successfully
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Annotation ID
          description: ''
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: create_many
      x-fern-audiences:
      - public
  /api/blueprints/:
    post:
      operationId: api_blueprints_create
      description: Create a new blueprint
      summary: Create blueprint
      tags:
      - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlueprintRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlueprintRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blueprint'
          description: ''
  /api/blueprints/{id}/:
    delete:
      operationId: api_blueprints_destroy
      description: Delete a blueprint by ID
      summary: Delete blueprint
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Blueprints
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/blueprints/{share_id}/create-project:
    get:
      operationId: api_blueprints_create_project_retrieve
      description: Create a new project from an existing blueprint
      summary: Create project from blueprint
      parameters:
      - in: path
        name: share_id
        schema:
          type: string
        description: Blueprint share ID
        required: true
      tags:
      - Blueprints
      security:
      - {}
      responses:
        '302':
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    type: string
                    description: URL to redirect to the new project
          description: Redirect to new project
        '404':
          description: Blueprint not found
  /api/comments/:
    get:
      operationId: api_comments_list
      description: List all comments for a specific annotation ID.
      summary: List comments
      parameters:
      - in: query
        name: annotators
        schema:
          type: string
        description: Comma-separated list of annotator user IDs
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: projects
        schema:
          type: string
        description: Comma-separated list of project IDs
      tags:
      - Comments
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: api_comments_create
      description: Create a comment for a specific annotation ID.
      summary: Create comment
      tags:
      - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/comments/{id}/:
    get:
      operationId: api_comments_retrieve
      description: Retrieve a specific comment by ID for an annotation.
      summary: Get comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Comments
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: api_comments_update
      description: Overwrite a specific comment by ID.
      summary: Put comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: api_comments_partial_update
      description: Update a specific comment by ID.
      summary: Update comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommentRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: api_comments_destroy
      description: Delete a comment by ID
      summary: Delete comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Comments
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/comments/export/:
    get:
      operationId: api_comments_export_retrieve
      description: Export comments to CSV file
      summary: Export comments to CSV
      parameters:
      - in: query
        name: annotators
        schema:
          type: string
        description: Comma-separated list of annotator user IDs
      - in: query
        name: projects
        schema:
          type: string
        description: Comma-separated list of project IDs
      - in: query
        name: tz
        schema:
          type: string
        description: Timezone in which to export the data. Format IANA timezone name,
          e.g. "America/New_York"
      tags:
      - Comments
      security:
      - Token: []
      responses:
        '200':
          description: CSV file with comments
  /api/current-user:
    get:
      operationId: api_current_user_retrieve
      description: Get info about the currently authenticated user.
      summary: Get current user info
      tags:
      - Users
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseUserAPI'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: get_current_user
      x-fern-audiences:
      - public
    patch:
      operationId: api_current_user_partial_update
      description: Update details for the currently authenticated user.
      summary: Update current user
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLseUserSerializerUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLseUserSerializerUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLseUserSerializerUpdateRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseUserAPI'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: update_current_user
      x-fern-audiences:
      - public
  /api/current-user/hotkeys/:
    get:
      operationId: api_current_user_hotkeys_retrieve
      description: Retrieve the custom hotkeys configuration for the current user.
      summary: Get user hotkeys
      tags:
      - Users
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotkeys'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: get_hotkeys
      x-fern-audiences:
      - public
    patch:
      operationId: api_current_user_hotkeys_partial_update
      description: Update the custom hotkeys configuration for the current user.
      summary: Update user hotkeys
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHotkeysRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHotkeysRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHotkeysRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotkeys'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: update_hotkeys
      x-fern-audiences:
      - public
  /api/current-user/reset-token/:
    post:
      operationId: api_current_user_reset_token_create
      description: Reset the user token for the current user.
      summary: Reset user token
      tags:
      - Users
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
          description: User token response
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: reset_token
      x-fern-audiences:
      - public
  /api/current-user/token:
    get:
      operationId: api_current_user_token_retrieve
      description: Get a user token to authenticate to the API as the current user.
      summary: Get user token
      tags:
      - Users
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: User token response
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: get_token
      x-fern-audiences:
      - public
  /api/current-user/whoami:
    get:
      operationId: api_current_user_whoami_retrieve
      description: Retrieve details of the account that you are using to access the
        API.
      summary: Retrieve my user
      tags:
      - Users
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseUser'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: whoami
      x-fern-audiences:
      - public
  /api/dashboards/{id}/kpis/{kpi_key}:
    get:
      operationId: api_dashboards_kpis_retrieve
      description: 'Get Key Performance Indicator (KPI) data for a dashboard. Supports
        various KPIs including: skipped_annotations, accepted_annotations, rejected_annotations,
        average_time_per_task_min, total_annotations, regions_created, and more.'
      summary: Get KPI data
      parameters:
      - in: query
        name: end
        schema:
          type: string
        description: End date for filtering (ISO format)
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: kpi_key
        schema:
          type: string
        required: true
      - in: query
        name: members
        schema:
          type: array
          items:
            type: integer
        description: Array of user IDs to filter by
      - in: query
        name: start
        schema:
          type: string
        description: Start date for filtering (ISO format)
      tags:
      - Dashboard
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: KPI data with the requested key and its value
          description: KPI data
        '404':
          description: KPI not found
        '501':
          description: KPI depends on other KPIs - not implemented
  /api/dataset-storages/:
    get:
      operationId: api_dataset_storages_list
      description: Retrieve a list of the dataset storages of all types with their
        IDs.
      summary: List all dataset storages from the project
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Storage
      security:
      - Token: []
      responses:
        '200':
          description: List of DatasetStorageSerializer
  /api/dataset-storages/azure/:
    get:
      operationId: api_dataset_storages_azure_list
      description: Get a list of all Azure import storage connections.
      summary: Get all import storage
      parameters:
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Dataset Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
    post:
      operationId: api_dataset_storages_azure_create
      description: Create a new Azure import storage connection.
      summary: Create import storage
      tags:
      - 'Dataset Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
  /api/dataset-storages/azure/{id}/:
    get:
      operationId: api_dataset_storages_azure_retrieve
      description: Get a specific Azure import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
    patch:
      operationId: api_dataset_storages_azure_partial_update
      description: Update a specific Azure import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAzureDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAzureDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAzureDatasetStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
    delete:
      operationId: api_dataset_storages_azure_destroy
      description: Delete a specific Azure import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: Azure'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/dataset-storages/azure/{id}/columns/:
    get:
      operationId: api_dataset_storages_azure_columns_retrieve
      description: Retrieves column names from users JSON/blob data in bucket
      summary: Get data column names from storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/dataset-storages/azure/{id}/sync/:
    post:
      operationId: api_dataset_storages_azure_sync_create
      description: Sync tasks from an Azure import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
  /api/dataset-storages/azure/check-for-records/:
    post:
      operationId: api_dataset_storages_azure_check_for_records_create
      description: Checks for existence of records matching the file pattern in the
        bucket/prefix
      summary: Check for records given the file pattern
      tags:
      - 'Dataset Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
  /api/dataset-storages/azure/validate/:
    post:
      operationId: api_dataset_storages_azure_validate_create
      description: Validate a specific Azure import storage connection.
      summary: Validate import storage
      tags:
      - 'Dataset Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AzureDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDatasetStorage'
          description: ''
  /api/dataset-storages/gcs/:
    get:
      operationId: api_dataset_storages_gcs_list
      description: Get a list of all GCS import storage connections.
      summary: Get all import storage
      parameters:
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Dataset Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
    post:
      operationId: api_dataset_storages_gcs_create
      description: Create a new GCS import storage connection.
      summary: Create import storage
      tags:
      - 'Dataset Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
  /api/dataset-storages/gcs/{id}/:
    get:
      operationId: api_dataset_storages_gcs_retrieve
      description: Get a specific GCS import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
    patch:
      operationId: api_dataset_storages_gcs_partial_update
      description: Update a specific GCS import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGCSDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGCSDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGCSDatasetStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
    delete:
      operationId: api_dataset_storages_gcs_destroy
      description: Delete a specific GCS import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: GCS'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/dataset-storages/gcs/{id}/columns/:
    get:
      operationId: api_dataset_storages_gcs_columns_retrieve
      description: Retrieves column names from users JSON/blob data in bucket
      summary: Get data column names from storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/dataset-storages/gcs/{id}/sync/:
    post:
      operationId: api_dataset_storages_gcs_sync_create
      description: Sync tasks from an GCS import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
  /api/dataset-storages/gcs/check-for-records/:
    post:
      operationId: api_dataset_storages_gcs_check_for_records_create
      description: Checks for existence of records matching the file pattern in the
        bucket/prefix
      summary: Check for records given the file pattern
      tags:
      - 'Dataset Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
  /api/dataset-storages/gcs/validate/:
    post:
      operationId: api_dataset_storages_gcs_validate_create
      description: Validate a specific GCS import storage connection.
      summary: Validate import storage
      tags:
      - 'Dataset Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSDatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSDatasetStorage'
          description: ''
  /api/dataset-storages/s3/:
    get:
      operationId: api_dataset_storages_s3_list
      description: Get a list of all S3 import storage connections.
      summary: Get all import storage
      parameters:
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Dataset Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
    post:
      operationId: api_dataset_storages_s3_create
      description: Create a new S3 import storage connection.
      summary: Create import storage
      tags:
      - 'Dataset Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
  /api/dataset-storages/s3/{id}/:
    get:
      operationId: api_dataset_storages_s3_retrieve
      description: Get a specific S3 import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
    patch:
      operationId: api_dataset_storages_s3_partial_update
      description: Update a specific S3 import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedS3DatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedS3DatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedS3DatasetStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
    delete:
      operationId: api_dataset_storages_s3_destroy
      description: Delete a specific S3 import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: S3'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/dataset-storages/s3/{id}/columns/:
    get:
      operationId: api_dataset_storages_s3_columns_retrieve
      description: Retrieves column names from users JSON/blob data in bucket
      summary: Get data column names from storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/dataset-storages/s3/{id}/sync/:
    post:
      operationId: api_dataset_storages_s3_sync_create
      description: Sync tasks from an S3 import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Dataset Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
  /api/dataset-storages/s3/check-for-records/:
    post:
      operationId: api_dataset_storages_s3_check_for_records_create
      description: Checks for existence of records matching the file pattern in the
        bucket/prefix
      summary: Check for records given the file pattern
      tags:
      - 'Dataset Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
  /api/dataset-storages/s3/validate/:
    post:
      operationId: api_dataset_storages_s3_validate_create
      description: Validate a specific S3 import storage connection.
      summary: Validate import storage
      tags:
      - 'Dataset Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/S3DatasetStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3DatasetStorage'
          description: ''
  /api/dataset-storages/types/:
    get:
      operationId: api_dataset_storages_types_retrieve
      description: Retrieve a list of the dataset storages types.
      summary: List all dataset storages types
      tags:
      - Storage
      security:
      - Token: []
      responses:
        '200':
          description: 'A list of dataset storages types {''name'': name, ''title'':
            title}.'
  /api/datasets/:
    get:
      operationId: api_datasets_list
      description: List all datasets.
      summary: List datasets
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
          description: ''
    post:
      operationId: api_datasets_create
      description: Create a new dataset.
      summary: Create dataset
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/datasets/{id}/:
    get:
      operationId: api_datasets_retrieve
      description: Retrieve a specific dataset.
      summary: Get dataset
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: api_datasets_update
      description: Overwrite a specific dataset by ID.
      summary: Put dataset
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: api_datasets_partial_update
      description: Update a specific dataset by ID.
      summary: Update dataset
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDatasetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDatasetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDatasetRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: api_datasets_destroy
      description: Delete a dataset by ID
      summary: Delete dataset
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/datasets/{id}/members:
    get:
      operationId: api_datasets_members_list
      description: Retrieve the members for a specific dataset.
      summary: Get datasets members
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetMember'
          description: ''
    post:
      operationId: api_datasets_members_create
      description: Add a member to a specific dataset.
      summary: Add dataset member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetMemberRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetMember'
          description: ''
    delete:
      operationId: api_datasets_members_destroy
      description: Remove a member from a specific dataset.
      summary: Remove member from dataset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: project_member
        schema:
          type: integer
        description: A unique integer value identifying this dataset member.
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/datasets/columns:
    get:
      operationId: api_datasets_columns_retrieve
      description: Retrieve the data explorer columns available for a specific Dataset.
      summary: Get data explorer columns
      parameters:
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      tags:
      - Data Explorer
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/datasets/import:
    post:
      operationId: api_datasets_import_create
      description: "\n    Export Candidate task for a specific dataset to project.\n\
        \    "
      summary: Export candidate tasks to project
      parameters:
      - in: query
        name: additional_filters
        schema:
          type: object
          additionalProperties: {}
        description: Additional filters like page and page_size to limit export
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      - in: query
        name: excluded
        schema:
          type: object
          additionalProperties: {}
        description: Candidate tasks IDs to exclude from export
      - in: query
        name: included
        schema:
          type: object
          additionalProperties: {}
        description: Candidate tasks IDs from vectordb database
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      - in: query
        name: view
        schema:
          type: integer
        description: View ID
      tags:
      - Data Explorer
      security:
      - Token: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_datasets_import_partial_update
      description: Export Candidate task for a specific dataset to project.
      summary: Export candidate tasks to project
      parameters:
      - in: query
        name: job_id
        schema:
          type: integer
        description: Job ID to start or cancel
      - in: query
        name: signal
        schema:
          type: string
        description: 'Signal type: start or cancel'
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/datasets/tasks:
    get:
      operationId: api_datasets_tasks_retrieve
      description: "\n    Retrieve a list of Data Explorer tasks with pagination for\
        \ a specific view or dataset, by using filters and ordering.\n    "
      summary: Get Data Explorer tasks list
      parameters:
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      - in: query
        name: max_threshold
        schema:
          type: number
        description: Maximum threshold for candidate score
      - in: query
        name: min_threshold
        schema:
          type: number
        description: Minimum threshold for candidate score
      - in: query
        name: page
        schema:
          type: integer
        description: Page number in request
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of tasks to return in response
      - in: query
        name: view
        schema:
          type: integer
        description: View ID
      tags:
      - Data Explorer
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetView'
          description: ''
  /api/datasets/tasks/metadata:
    get:
      operationId: api_datasets_tasks_metadata_retrieve
      description: "\n    Retrieve Candidate task metadata for a specific dataset,\
        \ by using candidate_task_id or weaviate_id.\n    "
      summary: Get Candidate task metadata
      parameters:
      - in: query
        name: candidate_task_id
        schema:
          type: string
        description: Candidate task path in the bucket
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      - in: query
        name: vectordb_id
        schema:
          type: string
        description: Task ID from vectordb database
      tags:
      - Data Explorer
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/datasets/views/:
    get:
      operationId: api_datasets_views_list
      description: List all views for a specific dataset.
      summary: List dataset views
      parameters:
      - in: query
        name: dataset
        schema:
          type: integer
        description: Dataset ID
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetView'
          description: ''
    post:
      operationId: api_datasets_views_create
      description: Create a view for a specific dataset.
      summary: Create dataset view
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetViewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetViewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetViewRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetView'
          description: ''
  /api/datasets/views/{id}/:
    get:
      operationId: api_datasets_views_retrieve
      description: Get the details about a specific view in the data manager
      summary: Get dataset view details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetView'
          description: ''
    put:
      operationId: api_datasets_views_update
      description: Overwrite view data with updated filters and other information
        for a specific dataset.
      summary: Put dataset view
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetViewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatasetViewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatasetViewRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetView'
          description: ''
    patch:
      operationId: api_datasets_views_partial_update
      description: Update view data with additional filters and other information
        for a specific dataset.
      summary: Update dataset view
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDatasetViewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDatasetViewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDatasetViewRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetView'
          description: ''
    delete:
      operationId: api_datasets_views_destroy
      description: Delete a specific view by ID.
      summary: Delete dataset view
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/datasets/views/reset/:
    delete:
      operationId: api_datasets_views_reset_destroy
      description: Reset all views for a specific dataset.
      summary: Reset dataset views
      tags:
      - Datasets
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/dm/actions/:
    get:
      operationId: api_dm_actions_retrieve
      description: Retrieve all the registered actions with descriptions that data
        manager can use.
      summary: Get actions
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '200':
          description: No response body
      x-fern-sdk-group-name: actions
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_dm_actions_create
      description: 'Perform a Data Manager action with the selected tasks and filters.
        Note: More complex actions require additional parameters in the request body.
        Call `GET api/actions?project=<id>` to explore them. <br>Example: `GET api/actions?id=delete_tasks&project=1`'
      summary: Post actions
      parameters:
      - in: query
        name: id
        schema:
          type: string
          enum:
          - delete_annotators
          - delete_ground_truths
          - delete_reviewers
          - delete_tasks
          - delete_tasks_annotations
          - delete_tasks_predictions
          - delete_tasks_reviews
          - predictions_to_annotations
          - remove_duplicates
          - retrieve_tasks_predictions
        description: Action name ID, see the full list of actions in the `GET api/actions`
          request
        required: true
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
        required: true
      - in: query
        name: view
        schema:
          type: integer
        description: View ID (optional, it has higher priority than filters, selectedItems
          and ordering from the request body payload)
      tags:
      - Data Manager
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: object
                  properties:
                    conjunction:
                      type: string
                      enum:
                      - or
                      - and
                      description: Logical conjunction for the filters. This conjunction
                        (either "or" or "and") will be applied to all items in the
                        filters list. It is not possible to combine "or" and "and"
                        within one list of filters. All filters will be either combined
                        with "or" or with "and", but not a mix of both.
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          filter:
                            type: string
                            enum:
                            - filter:tasks:agreement
                            - filter:tasks:annotations_results
                            - filter:tasks:annotators
                            - filter:tasks:cancelled_annotations
                            - filter:tasks:comments
                            - filter:tasks:completed_at
                            - filter:tasks:created_at
                            - filter:tasks:file_upload
                            - filter:tasks:ground_truth
                            - filter:tasks:id
                            - filter:tasks:inner_id
                            - filter:tasks:predictions_model_versions
                            - filter:tasks:predictions_results
                            - filter:tasks:predictions_score
                            - filter:tasks:reviewed
                            - filter:tasks:reviewers
                            - filter:tasks:reviews_accepted
                            - filter:tasks:reviews_rejected
                            - filter:tasks:total_annotations
                            - filter:tasks:total_predictions
                            - filter:tasks:unresolved_comment_count
                            - filter:tasks:updated_at
                            description: 'Filter identifier, it should start with
                              `filter:tasks:` prefix, e.g. `filter:tasks:agreement`.
                              For `task.data` fields it may look like `filter:tasks:data.field_name`.
                              If you need more info about columns, check the [Get
                              data manager columns](#tag/Data-Manager/operation/api_dm_columns_list)
                              API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br>
                              (Number) Agreement for annotation results for a specific
                              task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br>
                              (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br>
                              (List) Annotators that completed the task (Community).
                              Can include assigned annotators (Enterprise only). Important
                              note: the filter `type` should be List, but the filter
                              `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br>
                              (Number) Number of cancelled or skipped annotations
                              for the task</li><br><li>`filter:tasks:comments`<br>
                              (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br>
                              (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br>
                              (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br>
                              (String) Name of the file uploaded to create the tasks</li><br><li>`filter:tasks:ground_truth`<br>
                              (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br>
                              (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br>
                              (Number) Task Inner ID, it starts from 1 for all projects</li><br><li>`filter:tasks:predictions_model_versions`<br>
                              (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br>
                              (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br>
                              (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br>
                              (Boolean) Whether the tasks have been reviewed (Enterprise
                              only)</li><br><li>`filter:tasks:reviewers`<br> (String)
                              Reviewers that reviewed the task, or assigned reviewers
                              (Enterprise only). Important note: the filter `type`
                              should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br>
                              (Number) Number of annotations accepted for a task in
                              review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br>
                              (Number) Number of annotations rejected for a task in
                              review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br>
                              (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br>
                              (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br>
                              (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br>
                              (Datetime) Time the task was updated at (e.g. new annotation
                              was created, review added, etc)</li>'
                          operator:
                            type: string
                            enum:
                            - contains
                            - ends_with
                            - equal
                            - exists
                            - greater
                            - greater_or_equal
                            - in
                            - less
                            - less_or_equal
                            - not_contains
                            - not_equal
                            - not_exists
                            - not_in
                            - starts_with
                            description: 'Filter operator. Possible values:<br><li>`contains`<br>
                              Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br>
                              Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br>
                              Greater than</li><br><li>`greater_or_equal`<br> Greater
                              than or equal to</li><br><li>`in`<br> Is between min
                              and max values, so the filter `value` should be e.g.
                              `{"min": 1, "max": 7}`</li><br><li>`less`<br> Less than</li><br><li>`less_or_equal`<br>
                              Less than or equal to</li><br><li>`not_contains`<br>
                              Does not contain</li><br><li>`not_equal`<br> Not equal
                              to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br>
                              Is not between min and max values, so the filter `value`
                              should be e.g. `{"min": 1, "max": 7}`</li><br><li>`starts_with`<br>
                              Starts with</li>'
                          type:
                            type: string
                            description: Type of the filter value. Possible values:<br><li>`Boolean`<br>
                              Boolean</li><br><li>`Datetime`<br> Datetime string in
                              `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br>
                              List of items</li><br><li>`Number`<br> Float or Integer</li><br><li>`String`<br>
                              String</li><br><li>`Unknown`<br> Unknown is explicitly
                              converted to string format</li>
                          value:
                            type: object
                            oneOf:
                            - type: string
                              title: String
                              description: String
                            - type: integer
                              title: Integer
                              description: Integer
                            - type: number
                              title: Float
                              format: float
                              description: Float
                            - type: boolean
                              title: Boolean
                              description: Boolean
                            - type: object
                              title: Dictionary
                              description: Dictionary is used for some operator types,
                                e.g. `in` and `not_in`
                            - type: object
                              title: List
                              description: List of strings or integers
                            description: Value to filter by
                        required:
                        - filter
                        - operator
                        - type
                        - value
                        example:
                          filter: filter:tasks:id
                          operator: greater
                          type: Number
                          value: 123
                      description: List of filter items
                  required:
                  - conjunction
                  - items
                  description: 'Filters to apply on tasks. You can use [the helper
                    class `Filters` from this page](https://labelstud.io/sdk/data_manager.html)
                    to create Data Manager Filters.<br>Example: `{"conjunction": "or",
                    "items": [{"filter": "filter:tasks:completed_at", "operator":
                    "greater", "type": "Datetime", "value": "2021-01-01T00:00:00.000Z"}]}`'
                selectedItems:
                  type: object
                  required:
                  - all
                  description: 'Task selection by IDs. If filters are applied, the
                    selection will be applied to the filtered tasks.If "all" is `false`,
                    `"included"` must be used. If "all" is `true`, `"excluded"` must
                    be used.<br>Examples: `{"all": false, "included": [1, 2, 3]}`
                    or `{"all": true, "excluded": [4, 5]}`'
                  oneOf:
                  - title: 'all: false'
                    type: object
                    properties:
                      all:
                        type: boolean
                        enum:
                        - false
                        description: No tasks are selected
                      included:
                        type: array
                        items:
                          type: integer
                        description: List of included task IDs
                    required:
                    - all
                  - title: 'all: true'
                    type: object
                    properties:
                      all:
                        type: boolean
                        enum:
                        - true
                        description: All tasks are selected
                      excluded:
                        type: array
                        items:
                          type: integer
                        description: List of excluded task IDs
                    required:
                    - all
                ordering:
                  type: array
                  items:
                    type: string
                    enum:
                    - tasks:agreement
                    - tasks:annotations_results
                    - tasks:annotators
                    - tasks:cancelled_annotations
                    - tasks:comments
                    - tasks:completed_at
                    - tasks:created_at
                    - tasks:file_upload
                    - tasks:ground_truth
                    - tasks:id
                    - tasks:inner_id
                    - tasks:predictions_model_versions
                    - tasks:predictions_results
                    - tasks:predictions_score
                    - tasks:reviewed
                    - tasks:reviewers
                    - tasks:reviews_accepted
                    - tasks:reviews_rejected
                    - tasks:total_annotations
                    - tasks:total_predictions
                    - tasks:unresolved_comment_count
                    - tasks:updated_at
                  description: List of fields to order by. Fields are similar to filters
                    but without the `filter:` prefix. To reverse the order, add a
                    minus sign before the field name, e.g. `-tasks:created_at`.
              description: Data payload containing task filters, selected task items,
                and ordering
              example:
                filters:
                  conjunction: or
                  items:
                  - filter: filter:tasks:id
                    operator: greater
                    type: Number
                    value: 123
                selectedItems:
                  all: true
                  excluded:
                  - 124
                  - 125
                  - 126
                ordering:
                - tasks:total_annotations
      security:
      - Token: []
      responses:
        '200':
          description: Action performed successfully
      x-fern-sdk-group-name: actions
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/dm/actions/{action_id}/form/:
    get:
      operationId: api_dm_actions_form_retrieve
      description: Get the form configuration for a specific action.
      summary: Get action form
      parameters:
      - in: path
        name: action_id
        schema:
          type: string
        required: true
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
        required: true
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: Form configuration object
          description: Action form configuration returned successfully
  /api/dm/project/:
    get:
      operationId: api_dm_project_retrieve
      description: Retrieve the project state for the data manager.
      summary: Get project state
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '200':
          description: No response body
      x-fern-audiences:
      - internal
  /api/dm/views/:
    get:
      operationId: api_dm_views_list
      description: List all views for a specific project.
      summary: List views
      parameters:
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/View'
          description: ''
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_dm_views_create
      description: Create a view for a specific project.
      summary: Create view
      tags:
      - Data Manager
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: Custom view data
                  properties:
                    filters:
                      type: object
                      properties:
                        conjunction:
                          type: string
                          enum:
                          - or
                          - and
                          description: Logical conjunction for the filters. This conjunction
                            (either "or" or "and") will be applied to all items in
                            the filters list. It is not possible to combine "or" and
                            "and" within one list of filters. All filters will be
                            either combined with "or" or with "and", but not a mix
                            of both.
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              filter:
                                type: string
                                enum:
                                - filter:tasks:agreement
                                - filter:tasks:annotations_results
                                - filter:tasks:annotators
                                - filter:tasks:cancelled_annotations
                                - filter:tasks:comments
                                - filter:tasks:completed_at
                                - filter:tasks:created_at
                                - filter:tasks:file_upload
                                - filter:tasks:ground_truth
                                - filter:tasks:id
                                - filter:tasks:inner_id
                                - filter:tasks:predictions_model_versions
                                - filter:tasks:predictions_results
                                - filter:tasks:predictions_score
                                - filter:tasks:reviewed
                                - filter:tasks:reviewers
                                - filter:tasks:reviews_accepted
                                - filter:tasks:reviews_rejected
                                - filter:tasks:total_annotations
                                - filter:tasks:total_predictions
                                - filter:tasks:unresolved_comment_count
                                - filter:tasks:updated_at
                                description: 'Filter identifier, it should start with
                                  `filter:tasks:` prefix, e.g. `filter:tasks:agreement`.
                                  For `task.data` fields it may look like `filter:tasks:data.field_name`.
                                  If you need more info about columns, check the [Get
                                  data manager columns](#tag/Data-Manager/operation/api_dm_columns_list)
                                  API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br>
                                  (Number) Agreement for annotation results for a
                                  specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br>
                                  (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br>
                                  (List) Annotators that completed the task (Community).
                                  Can include assigned annotators (Enterprise only).
                                  Important note: the filter `type` should be List,
                                  but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br>
                                  (Number) Number of cancelled or skipped annotations
                                  for the task</li><br><li>`filter:tasks:comments`<br>
                                  (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br>
                                  (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br>
                                  (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br>
                                  (String) Name of the file uploaded to create the
                                  tasks</li><br><li>`filter:tasks:ground_truth`<br>
                                  (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br>
                                  (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br>
                                  (Number) Task Inner ID, it starts from 1 for all
                                  projects</li><br><li>`filter:tasks:predictions_model_versions`<br>
                                  (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br>
                                  (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br>
                                  (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br>
                                  (Boolean) Whether the tasks have been reviewed (Enterprise
                                  only)</li><br><li>`filter:tasks:reviewers`<br> (String)
                                  Reviewers that reviewed the task, or assigned reviewers
                                  (Enterprise only). Important note: the filter `type`
                                  should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br>
                                  (Number) Number of annotations accepted for a task
                                  in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br>
                                  (Number) Number of annotations rejected for a task
                                  in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br>
                                  (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br>
                                  (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br>
                                  (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br>
                                  (Datetime) Time the task was updated at (e.g. new
                                  annotation was created, review added, etc)</li>'
                              operator:
                                type: string
                                enum:
                                - contains
                                - ends_with
                                - equal
                                - exists
                                - greater
                                - greater_or_equal
                                - in
                                - less
                                - less_or_equal
                                - not_contains
                                - not_equal
                                - not_exists
                                - not_in
                                - starts_with
                                description: 'Filter operator. Possible values:<br><li>`contains`<br>
                                  Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br>
                                  Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br>
                                  Greater than</li><br><li>`greater_or_equal`<br>
                                  Greater than or equal to</li><br><li>`in`<br> Is
                                  between min and max values, so the filter `value`
                                  should be e.g. `{"min": 1, "max": 7}`</li><br><li>`less`<br>
                                  Less than</li><br><li>`less_or_equal`<br> Less than
                                  or equal to</li><br><li>`not_contains`<br> Does
                                  not contain</li><br><li>`not_equal`<br> Not equal
                                  to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br>
                                  Is not between min and max values, so the filter
                                  `value` should be e.g. `{"min": 1, "max": 7}`</li><br><li>`starts_with`<br>
                                  Starts with</li>'
                              type:
                                type: string
                                description: Type of the filter value. Possible values:<br><li>`Boolean`<br>
                                  Boolean</li><br><li>`Datetime`<br> Datetime string
                                  in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br>
                                  List of items</li><br><li>`Number`<br> Float or
                                  Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br>
                                  Unknown is explicitly converted to string format</li>
                              value:
                                type: object
                                oneOf:
                                - type: string
                                  title: String
                                  description: String
                                - type: integer
                                  title: Integer
                                  description: Integer
                                - type: number
                                  title: Float
                                  format: float
                                  description: Float
                                - type: boolean
                                  title: Boolean
                                  description: Boolean
                                - type: object
                                  title: Dictionary
                                  description: Dictionary is used for some operator
                                    types, e.g. `in` and `not_in`
                                - type: object
                                  title: List
                                  description: List of strings or integers
                                description: Value to filter by
                            required:
                            - filter
                            - operator
                            - type
                            - value
                            example:
                              filter: filter:tasks:id
                              operator: greater
                              type: Number
                              value: 123
                          description: List of filter items
                      required:
                      - conjunction
                      - items
                      description: 'Filters to apply on tasks. You can use [the helper
                        class `Filters` from this page](https://labelstud.io/sdk/data_manager.html)
                        to create Data Manager Filters.<br>Example: `{"conjunction":
                        "or", "items": [{"filter": "filter:tasks:completed_at", "operator":
                        "greater", "type": "Datetime", "value": "2021-01-01T00:00:00.000Z"}]}`'
                    ordering:
                      type: array
                      items:
                        type: string
                        enum:
                        - tasks:agreement
                        - tasks:annotations_results
                        - tasks:annotators
                        - tasks:cancelled_annotations
                        - tasks:comments
                        - tasks:completed_at
                        - tasks:created_at
                        - tasks:file_upload
                        - tasks:ground_truth
                        - tasks:id
                        - tasks:inner_id
                        - tasks:predictions_model_versions
                        - tasks:predictions_results
                        - tasks:predictions_score
                        - tasks:reviewed
                        - tasks:reviewers
                        - tasks:reviews_accepted
                        - tasks:reviews_rejected
                        - tasks:total_annotations
                        - tasks:total_predictions
                        - tasks:unresolved_comment_count
                        - tasks:updated_at
                      description: List of fields to order by. Fields are similar
                        to filters but without the `filter:` prefix. To reverse the
                        order, add a minus sign before the field name, e.g. `-tasks:created_at`.
                project:
                  type: integer
                  description: Project ID
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: ''
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/dm/views/{id}/:
    get:
      operationId: api_dm_views_retrieve
      description: Get the details about a specific view in the data manager
      summary: Get view details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: ''
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    put:
      operationId: api_dm_views_update
      description: Overwrite view data with updated filters and other information
        for a specific project.
      summary: Put view
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Data Manager
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: Custom view data
                  properties:
                    filters:
                      type: object
                      properties:
                        conjunction:
                          type: string
                          enum:
                          - or
                          - and
                          description: Logical conjunction for the filters. This conjunction
                            (either "or" or "and") will be applied to all items in
                            the filters list. It is not possible to combine "or" and
                            "and" within one list of filters. All filters will be
                            either combined with "or" or with "and", but not a mix
                            of both.
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              filter:
                                type: string
                                enum:
                                - filter:tasks:agreement
                                - filter:tasks:annotations_results
                                - filter:tasks:annotators
                                - filter:tasks:cancelled_annotations
                                - filter:tasks:comments
                                - filter:tasks:completed_at
                                - filter:tasks:created_at
                                - filter:tasks:file_upload
                                - filter:tasks:ground_truth
                                - filter:tasks:id
                                - filter:tasks:inner_id
                                - filter:tasks:predictions_model_versions
                                - filter:tasks:predictions_results
                                - filter:tasks:predictions_score
                                - filter:tasks:reviewed
                                - filter:tasks:reviewers
                                - filter:tasks:reviews_accepted
                                - filter:tasks:reviews_rejected
                                - filter:tasks:total_annotations
                                - filter:tasks:total_predictions
                                - filter:tasks:unresolved_comment_count
                                - filter:tasks:updated_at
                                description: 'Filter identifier, it should start with
                                  `filter:tasks:` prefix, e.g. `filter:tasks:agreement`.
                                  For `task.data` fields it may look like `filter:tasks:data.field_name`.
                                  If you need more info about columns, check the [Get
                                  data manager columns](#tag/Data-Manager/operation/api_dm_columns_list)
                                  API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br>
                                  (Number) Agreement for annotation results for a
                                  specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br>
                                  (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br>
                                  (List) Annotators that completed the task (Community).
                                  Can include assigned annotators (Enterprise only).
                                  Important note: the filter `type` should be List,
                                  but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br>
                                  (Number) Number of cancelled or skipped annotations
                                  for the task</li><br><li>`filter:tasks:comments`<br>
                                  (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br>
                                  (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br>
                                  (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br>
                                  (String) Name of the file uploaded to create the
                                  tasks</li><br><li>`filter:tasks:ground_truth`<br>
                                  (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br>
                                  (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br>
                                  (Number) Task Inner ID, it starts from 1 for all
                                  projects</li><br><li>`filter:tasks:predictions_model_versions`<br>
                                  (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br>
                                  (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br>
                                  (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br>
                                  (Boolean) Whether the tasks have been reviewed (Enterprise
                                  only)</li><br><li>`filter:tasks:reviewers`<br> (String)
                                  Reviewers that reviewed the task, or assigned reviewers
                                  (Enterprise only). Important note: the filter `type`
                                  should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br>
                                  (Number) Number of annotations accepted for a task
                                  in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br>
                                  (Number) Number of annotations rejected for a task
                                  in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br>
                                  (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br>
                                  (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br>
                                  (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br>
                                  (Datetime) Time the task was updated at (e.g. new
                                  annotation was created, review added, etc)</li>'
                              operator:
                                type: string
                                enum:
                                - contains
                                - ends_with
                                - equal
                                - exists
                                - greater
                                - greater_or_equal
                                - in
                                - less
                                - less_or_equal
                                - not_contains
                                - not_equal
                                - not_exists
                                - not_in
                                - starts_with
                                description: 'Filter operator. Possible values:<br><li>`contains`<br>
                                  Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br>
                                  Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br>
                                  Greater than</li><br><li>`greater_or_equal`<br>
                                  Greater than or equal to</li><br><li>`in`<br> Is
                                  between min and max values, so the filter `value`
                                  should be e.g. `{"min": 1, "max": 7}`</li><br><li>`less`<br>
                                  Less than</li><br><li>`less_or_equal`<br> Less than
                                  or equal to</li><br><li>`not_contains`<br> Does
                                  not contain</li><br><li>`not_equal`<br> Not equal
                                  to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br>
                                  Is not between min and max values, so the filter
                                  `value` should be e.g. `{"min": 1, "max": 7}`</li><br><li>`starts_with`<br>
                                  Starts with</li>'
                              type:
                                type: string
                                description: Type of the filter value. Possible values:<br><li>`Boolean`<br>
                                  Boolean</li><br><li>`Datetime`<br> Datetime string
                                  in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br>
                                  List of items</li><br><li>`Number`<br> Float or
                                  Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br>
                                  Unknown is explicitly converted to string format</li>
                              value:
                                type: object
                                oneOf:
                                - type: string
                                  title: String
                                  description: String
                                - type: integer
                                  title: Integer
                                  description: Integer
                                - type: number
                                  title: Float
                                  format: float
                                  description: Float
                                - type: boolean
                                  title: Boolean
                                  description: Boolean
                                - type: object
                                  title: Dictionary
                                  description: Dictionary is used for some operator
                                    types, e.g. `in` and `not_in`
                                - type: object
                                  title: List
                                  description: List of strings or integers
                                description: Value to filter by
                            required:
                            - filter
                            - operator
                            - type
                            - value
                            example:
                              filter: filter:tasks:id
                              operator: greater
                              type: Number
                              value: 123
                          description: List of filter items
                      required:
                      - conjunction
                      - items
                      description: 'Filters to apply on tasks. You can use [the helper
                        class `Filters` from this page](https://labelstud.io/sdk/data_manager.html)
                        to create Data Manager Filters.<br>Example: `{"conjunction":
                        "or", "items": [{"filter": "filter:tasks:completed_at", "operator":
                        "greater", "type": "Datetime", "value": "2021-01-01T00:00:00.000Z"}]}`'
                    ordering:
                      type: array
                      items:
                        type: string
                        enum:
                        - tasks:agreement
                        - tasks:annotations_results
                        - tasks:annotators
                        - tasks:cancelled_annotations
                        - tasks:comments
                        - tasks:completed_at
                        - tasks:created_at
                        - tasks:file_upload
                        - tasks:ground_truth
                        - tasks:id
                        - tasks:inner_id
                        - tasks:predictions_model_versions
                        - tasks:predictions_results
                        - tasks:predictions_score
                        - tasks:reviewed
                        - tasks:reviewers
                        - tasks:reviews_accepted
                        - tasks:reviews_rejected
                        - tasks:total_annotations
                        - tasks:total_predictions
                        - tasks:unresolved_comment_count
                        - tasks:updated_at
                      description: List of fields to order by. Fields are similar
                        to filters but without the `filter:` prefix. To reverse the
                        order, add a minus sign before the field name, e.g. `-tasks:created_at`.
                project:
                  type: integer
                  description: Project ID
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: ''
      x-fern-audiences:
      - internal
    patch:
      operationId: api_dm_views_partial_update
      description: Update view data with additional filters and other information
        for a specific project.
      summary: Update view
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Data Manager
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: Custom view data
                  properties:
                    filters:
                      type: object
                      properties:
                        conjunction:
                          type: string
                          enum:
                          - or
                          - and
                          description: Logical conjunction for the filters. This conjunction
                            (either "or" or "and") will be applied to all items in
                            the filters list. It is not possible to combine "or" and
                            "and" within one list of filters. All filters will be
                            either combined with "or" or with "and", but not a mix
                            of both.
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              filter:
                                type: string
                                enum:
                                - filter:tasks:agreement
                                - filter:tasks:annotations_results
                                - filter:tasks:annotators
                                - filter:tasks:cancelled_annotations
                                - filter:tasks:comments
                                - filter:tasks:completed_at
                                - filter:tasks:created_at
                                - filter:tasks:file_upload
                                - filter:tasks:ground_truth
                                - filter:tasks:id
                                - filter:tasks:inner_id
                                - filter:tasks:predictions_model_versions
                                - filter:tasks:predictions_results
                                - filter:tasks:predictions_score
                                - filter:tasks:reviewed
                                - filter:tasks:reviewers
                                - filter:tasks:reviews_accepted
                                - filter:tasks:reviews_rejected
                                - filter:tasks:total_annotations
                                - filter:tasks:total_predictions
                                - filter:tasks:unresolved_comment_count
                                - filter:tasks:updated_at
                                description: 'Filter identifier, it should start with
                                  `filter:tasks:` prefix, e.g. `filter:tasks:agreement`.
                                  For `task.data` fields it may look like `filter:tasks:data.field_name`.
                                  If you need more info about columns, check the [Get
                                  data manager columns](#tag/Data-Manager/operation/api_dm_columns_list)
                                  API endpoint. Possible values:<br><li>`filter:tasks:agreement`<br>
                                  (Number) Agreement for annotation results for a
                                  specific task (Enterprise only)</li><br><li>`filter:tasks:annotations_results`<br>
                                  (String) Annotation results for the tasks</li><br><li>`filter:tasks:annotators`<br>
                                  (List) Annotators that completed the task (Community).
                                  Can include assigned annotators (Enterprise only).
                                  Important note: the filter `type` should be List,
                                  but the filter `value` is integer</li><br><li>`filter:tasks:cancelled_annotations`<br>
                                  (Number) Number of cancelled or skipped annotations
                                  for the task</li><br><li>`filter:tasks:comments`<br>
                                  (Number) Number of comments in a task</li><br><li>`filter:tasks:completed_at`<br>
                                  (Datetime) Time when a task was fully annotated</li><br><li>`filter:tasks:created_at`<br>
                                  (Datetime) Time the task was created at</li><br><li>`filter:tasks:file_upload`<br>
                                  (String) Name of the file uploaded to create the
                                  tasks</li><br><li>`filter:tasks:ground_truth`<br>
                                  (Boolean) Ground truth status of the tasks</li><br><li>`filter:tasks:id`<br>
                                  (Number) Task ID</li><br><li>`filter:tasks:inner_id`<br>
                                  (Number) Task Inner ID, it starts from 1 for all
                                  projects</li><br><li>`filter:tasks:predictions_model_versions`<br>
                                  (String) Model version used for the predictions</li><br><li>`filter:tasks:predictions_results`<br>
                                  (String) Prediction results for the tasks</li><br><li>`filter:tasks:predictions_score`<br>
                                  (Number) Prediction score for the task</li><br><li>`filter:tasks:reviewed`<br>
                                  (Boolean) Whether the tasks have been reviewed (Enterprise
                                  only)</li><br><li>`filter:tasks:reviewers`<br> (String)
                                  Reviewers that reviewed the task, or assigned reviewers
                                  (Enterprise only). Important note: the filter `type`
                                  should be List, but the filter `value` is integer</li><br><li>`filter:tasks:reviews_accepted`<br>
                                  (Number) Number of annotations accepted for a task
                                  in review (Enterprise only)</li><br><li>`filter:tasks:reviews_rejected`<br>
                                  (Number) Number of annotations rejected for a task
                                  in review (Enterprise only)</li><br><li>`filter:tasks:total_annotations`<br>
                                  (Number) Total number of annotations on a task</li><br><li>`filter:tasks:total_predictions`<br>
                                  (Number) Total number of predictions for the task</li><br><li>`filter:tasks:unresolved_comment_count`<br>
                                  (Number) Number of unresolved comments in a task</li><br><li>`filter:tasks:updated_at`<br>
                                  (Datetime) Time the task was updated at (e.g. new
                                  annotation was created, review added, etc)</li>'
                              operator:
                                type: string
                                enum:
                                - contains
                                - ends_with
                                - equal
                                - exists
                                - greater
                                - greater_or_equal
                                - in
                                - less
                                - less_or_equal
                                - not_contains
                                - not_equal
                                - not_exists
                                - not_in
                                - starts_with
                                description: 'Filter operator. Possible values:<br><li>`contains`<br>
                                  Contains</li><br><li>`ends_with`<br> Ends with</li><br><li>`equal`<br>
                                  Equal to</li><br><li>`exists`<br> Exists</li><br><li>`greater`<br>
                                  Greater than</li><br><li>`greater_or_equal`<br>
                                  Greater than or equal to</li><br><li>`in`<br> Is
                                  between min and max values, so the filter `value`
                                  should be e.g. `{"min": 1, "max": 7}`</li><br><li>`less`<br>
                                  Less than</li><br><li>`less_or_equal`<br> Less than
                                  or equal to</li><br><li>`not_contains`<br> Does
                                  not contain</li><br><li>`not_equal`<br> Not equal
                                  to</li><br><li>`not_exists`<br> Does not exist</li><br><li>`not_in`<br>
                                  Is not between min and max values, so the filter
                                  `value` should be e.g. `{"min": 1, "max": 7}`</li><br><li>`starts_with`<br>
                                  Starts with</li>'
                              type:
                                type: string
                                description: Type of the filter value. Possible values:<br><li>`Boolean`<br>
                                  Boolean</li><br><li>`Datetime`<br> Datetime string
                                  in `strftime('%Y-%m-%dT%H:%M:%S.%fZ')` format</li><br><li>`List`<br>
                                  List of items</li><br><li>`Number`<br> Float or
                                  Integer</li><br><li>`String`<br> String</li><br><li>`Unknown`<br>
                                  Unknown is explicitly converted to string format</li>
                              value:
                                type: object
                                oneOf:
                                - type: string
                                  title: String
                                  description: String
                                - type: integer
                                  title: Integer
                                  description: Integer
                                - type: number
                                  title: Float
                                  format: float
                                  description: Float
                                - type: boolean
                                  title: Boolean
                                  description: Boolean
                                - type: object
                                  title: Dictionary
                                  description: Dictionary is used for some operator
                                    types, e.g. `in` and `not_in`
                                - type: object
                                  title: List
                                  description: List of strings or integers
                                description: Value to filter by
                            required:
                            - filter
                            - operator
                            - type
                            - value
                            example:
                              filter: filter:tasks:id
                              operator: greater
                              type: Number
                              value: 123
                          description: List of filter items
                      required:
                      - conjunction
                      - items
                      description: 'Filters to apply on tasks. You can use [the helper
                        class `Filters` from this page](https://labelstud.io/sdk/data_manager.html)
                        to create Data Manager Filters.<br>Example: `{"conjunction":
                        "or", "items": [{"filter": "filter:tasks:completed_at", "operator":
                        "greater", "type": "Datetime", "value": "2021-01-01T00:00:00.000Z"}]}`'
                    ordering:
                      type: array
                      items:
                        type: string
                        enum:
                        - tasks:agreement
                        - tasks:annotations_results
                        - tasks:annotators
                        - tasks:cancelled_annotations
                        - tasks:comments
                        - tasks:completed_at
                        - tasks:created_at
                        - tasks:file_upload
                        - tasks:ground_truth
                        - tasks:id
                        - tasks:inner_id
                        - tasks:predictions_model_versions
                        - tasks:predictions_results
                        - tasks:predictions_score
                        - tasks:reviewed
                        - tasks:reviewers
                        - tasks:reviews_accepted
                        - tasks:reviews_rejected
                        - tasks:total_annotations
                        - tasks:total_predictions
                        - tasks:unresolved_comment_count
                        - tasks:updated_at
                      description: List of fields to order by. Fields are similar
                        to filters but without the `filter:` prefix. To reverse the
                        order, add a minus sign before the field name, e.g. `-tasks:created_at`.
                project:
                  type: integer
                  description: Project ID
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: ''
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_dm_views_destroy
      description: Delete a specific view by ID.
      summary: Delete view
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: View ID
        required: true
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/dm/views/order/:
    post:
      operationId: api_dm_views_order_create
      description: Update the order field of views based on the provided list of view
        IDs
      summary: Update order of views
      tags:
      - Data Manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewOrderRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: ''
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: update_order
      x-fern-audiences:
      - public
  /api/dm/views/reset/:
    delete:
      operationId: api_dm_views_reset_destroy
      description: 'Delete all views for a specific project. Request body example:
        `{"project": 1}`.'
      summary: Delete all project views
      tags:
      - Data Manager
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: views
      x-fern-sdk-method-name: delete_all
      x-fern-audiences:
      - public
  /api/import/file-upload/{id}:
    get:
      operationId: api_import_file_upload_retrieve
      description: Retrieve details about a specific uploaded file.
      summary: Get file upload
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Import
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - file_uploads
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_import_file_upload_partial_update
      description: Update a specific uploaded file.
      summary: Update file upload
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - file_uploads
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_import_file_upload_destroy
      description: Delete a specific uploaded file.
      summary: Delete file upload
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Import
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - file_uploads
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/invite:
    get:
      operationId: api_invite_retrieve
      description: Get invite link for organization
      summary: Invite people
      tags:
      - Invites
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/invite/reset-token:
    post:
      operationId: api_invite_reset_token_create
      description: Reset the token used in the invitation link to invite someone to
        an organization.
      summary: Reset organization token
      tags:
      - Invites
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
          description: ''
      x-fern-sdk-group-name: organizations
      x-fern-sdk-method-name: reset_token
      x-fern-audiences:
      - public
  /api/invite/revoke:
    post:
      operationId: api_invite_revoke_create
      description: Revoke invite
      summary: Revoke invite
      tags:
      - Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeInviteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RevokeInviteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RevokeInviteRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/invite/send-email:
    post:
      operationId: api_invite_send_email_create
      description: Send email with invite to organization
      summary: Send email with invite
      tags:
      - Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendInviteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendInviteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendInviteRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/jwt/settings:
    get:
      operationId: api_jwt_settings_retrieve
      description: Retrieve JWT settings for the currently active organization.
      summary: Retrieve JWT Settings
      tags:
      - JWT
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LSEJWTSettings'
          description: ''
      x-fern-sdk-group-name: jwt_settings
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    post:
      operationId: api_jwt_settings_create
      description: Update JWT settings for the currently active organization.
      summary: Update JWT Settings
      tags:
      - JWT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LSEJWTSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LSEJWTSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LSEJWTSettingsRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LSEJWTSettings'
          description: ''
      x-fern-sdk-group-name: jwt_settings
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
  /api/label_links/:
    get:
      operationId: api_label_links_list
      description: List label links for a specific label and project.
      summary: List label links
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelLinkList'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - labels
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - internal
    post:
      operationId: api_label_links_create
      description: Create label links to link new custom labels to your project labeling
        configuration.
      summary: Create label links
      tags:
      - Labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelLinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelLinkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelLinkRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelLink'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - labels
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - internal
  /api/label_links/{id}/:
    get:
      operationId: api_label_links_retrieve
      description: 'Get label links for a specific project configuration. '
      summary: Get label link
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelLink'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - labels
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - internal
    patch:
      operationId: api_label_links_partial_update
      description: "\n        Update a label link that links custom labels to a project\
        \ labeling configuration, for example if the fromName,  \n        toName,\
        \ or name parameters for a tag in the labeling configuration change. \n  \
        \      "
      summary: Update label link
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabelLinkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabelLinkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabelLinkRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelLink'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - labels
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - internal
    delete:
      operationId: api_label_links_destroy
      description: "\n        Remove a label link that links custom labels to your\
        \ project labeling configuration. If you remove a label link,\n        the\
        \ label stops being available for the project it was linked to. You can add\
        \ a new label link at any time. \n        "
      summary: Remove label link
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - labels
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - internal
  /api/labels/:
    get:
      operationId: api_labels_list
      description: List all custom labels added to your project separately from the
        labeling configuration.
      summary: List labels
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelList'
          description: ''
      x-fern-sdk-group-name: labels
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - internal
    post:
      operationId: api_labels_create
      description: Add labels to your project without updating the labeling configuration.
      summary: Create labels
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Labels
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LabelCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LabelCreateRequest'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LabelCreateRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelCreateList'
          description: ''
      x-fern-sdk-group-name: labels
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - internal
  /api/labels/{id}/:
    get:
      operationId: api_labels_retrieve
      description: "\n        Retrieve a specific custom label used for your project\
        \ by its ID.\n        "
      summary: Get label
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
      x-fern-sdk-group-name: labels
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - internal
    patch:
      operationId: api_labels_partial_update
      description: Update labels used for your project without updating the labeling
        configuration.
      summary: Update labels
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabelRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
      x-fern-sdk-group-name: labels
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - internal
    delete:
      operationId: api_labels_destroy
      description: Remove labels from your project without updating the labeling configuration.
      summary: Remove labels
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: labels
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - internal
  /api/labels/bulk:
    post:
      operationId: api_labels_bulk_create
      description: "\n        If you want to update the labels in saved annotations,\
        \ use this endpoint.\n        "
      summary: Bulk update labels
      tags:
      - Labels
      security:
      - Token: []
      responses:
        '200':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - labels
      x-fern-sdk-method-name: update_many
      x-fern-audiences:
      - internal
  /api/ml/:
    get:
      operationId: api_ml_list
      description: "\n    List all configured ML backends for a specific project by\
        \ ID.\n    Use the following cURL command:\n    ```bash\n    curl http://localhost:8000/api/ml?project={project_id}\
        \ -H 'Authorization: Token abc123'\n    "
      summary: List ML backends
      parameters:
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - Machine Learning
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MLBackend'
          description: ''
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_ml_create
      description: "\n    Add an ML backend to a project using the Label Studio UI\
        \ or by sending a POST request using the following cURL \n    command:\n \
        \   ```bash\n    curl -X POST -H 'Content-type: application/json' http://localhost:8000/api/ml\
        \ -H 'Authorization: Token abc123'\\\n    --data '{\"url\": \"http://localhost:9090\"\
        , \"project\": {project_id}}' \n    "
      summary: Add ML Backend
      tags:
      - Machine Learning
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ML backend URL
                project:
                  type: integer
                  description: Project ID
                is_interactive:
                  type: boolean
                  description: Is interactive
                title:
                  type: string
                  description: Title
                description:
                  type: string
                  description: Description
                auth_method:
                  type: string
                  description: Auth method
                  enum:
                  - NONE
                  - BASIC_AUTH
                basic_auth_user:
                  type: string
                  description: Basic auth user
                basic_auth_pass:
                  type: string
                  description: Basic auth password
                extra_params:
                  type: object
                  description: Extra parameters
                timeout:
                  type: integer
                  description: Response model timeout
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLBackend'
          description: ''
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/ml/{id}:
    get:
      operationId: api_ml_retrieve
      description: "\n    Get details about a specific ML backend connection by ID.\
        \ For example, make a GET request using the\n    following cURL command:\n\
        \    ```bash\n    curl http://localhost:8000/api/ml/{ml_backend_ID} -H 'Authorization:\
        \ Token abc123'\n    "
      summary: Get ML Backend
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Machine Learning
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLBackend'
          description: ''
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_ml_partial_update
      description: "\n    Update ML backend parameters using the Label Studio UI or\
        \ by sending a PATCH request using the following cURL command:\n    ```bash\n\
        \    curl -X PATCH -H 'Content-type: application/json' http://localhost:8000/api/ml/{ml_backend_ID}\
        \ -H 'Authorization: Token abc123'\\\n    --data '{\"url\": \"http://localhost:9091\"\
        }' \n    "
      summary: Update ML Backend
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Machine Learning
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ML backend URL
                project:
                  type: integer
                  description: Project ID
                is_interactive:
                  type: boolean
                  description: Is interactive
                title:
                  type: string
                  description: Title
                description:
                  type: string
                  description: Description
                auth_method:
                  type: string
                  description: Auth method
                  enum:
                  - NONE
                  - BASIC_AUTH
                basic_auth_user:
                  type: string
                  description: Basic auth user
                basic_auth_pass:
                  type: string
                  description: Basic auth password
                extra_params:
                  type: object
                  description: Extra parameters
                timeout:
                  type: integer
                  description: Response model timeout
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLBackend'
          description: ''
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_ml_destroy
      description: "\n    Remove an existing ML backend connection by ID. For example,\
        \ use the\n    following cURL command:\n    ```bash\n    curl -X DELETE http://localhost:8000/api/ml/{ml_backend_ID}\
        \ -H 'Authorization: Token abc123'\n    "
      summary: Remove ML Backend
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Machine Learning
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/ml/{id}/interactive-annotating:
    post:
      operationId: api_ml_interactive_annotating_create
      description: "\n        Send a request to the machine learning backend set up\
        \ to be used for interactive preannotations to retrieve a\n        predicted\
        \ region based on annotator input. \n        See [set up machine learning](https://labelstud.io/guide/ml.html#Get-interactive-preannotations)\
        \ for more.\n        "
      summary: Request Interactive Annotation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ML backend.
        required: true
      tags:
      - Machine Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLInteractiveAnnotatingRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MLInteractiveAnnotatingRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MLInteractiveAnnotatingRequestRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          description: Interactive annotation has succeeded.
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: predict_interactive
      x-fern-audiences:
      - public
  /api/ml/{id}/predict:
    post:
      operationId: api_ml_predict_create
      description: "\n        Create predictions for all tasks using a specific ML\
        \ backend so that you can set up an active learning strategy\n        based\
        \ on the confidence or uncertainty scores associated with the predictions.\
        \ Creating predictions requires \n        a Label Studio ML backend set up\
        \ and configured for your project. \n\n        See [Set up machine learning](https://labelstud.io/guide/ml.html)\
        \ for more details \n        about a Label Studio ML backend.\n\n        Reference\
        \ the ML backend ID in the path of this API call. Get the ML backend ID by\
        \ \n        [listing the ML backends for a project](https://labelstud.io/api/#operation/api_ml_list).\n\
        \        "
      summary: Create predictions
      parameters:
      - in: query
        name: batch_size
        schema:
          type: integer
        description: Computed number of tasks without predictions that the ML backend
          needs to predict.
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ML backend.
        required: true
      tags:
      - Machine Learning
      security:
      - Token: []
      responses:
        '200':
          description: Predictions have successfully started.
  /api/ml/{id}/predict/test:
    post:
      operationId: api_ml_predict_test_create
      description: "\n        After you add an ML backend, call this API with the\
        \ ML backend ID to run a test prediction on specific task data           \
        \    \n        "
      summary: Test prediction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ML backend.
        required: true
      tags:
      - Machine Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLBackendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MLBackendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MLBackendRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          description: Predicting has successfully started.
        '500':
          content:
            application/json:
              schema:
                description: Error message
                type: string
                example: Server responded with an error.
          description: Predicting error
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: test_predict
      x-fern-audiences:
      - internal
  /api/ml/{id}/train:
    post:
      operationId: api_ml_train_create
      description: "\n        After you add an ML backend, call this API with the\
        \ ML backend ID to start training with \n        already-labeled tasks. \n\
        \        \n        Get the ML backend ID by [listing the ML backends for a\
        \ project](https://labelstud.io/api/#operation/api_ml_list).\n        "
      summary: Train
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ML backend.
        required: true
      tags:
      - Machine Learning
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                use_ground_truth:
                  type: boolean
                  description: Whether to include ground truth annotations in training
      security:
      - Token: []
      responses:
        '200':
          description: Training has successfully started.
        '500':
          content:
            application/json:
              schema:
                description: Error message
                type: string
                example: Server responded with an error.
          description: Training error
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: train
      x-fern-audiences:
      - public
  /api/ml/{id}/versions:
    get:
      operationId: api_ml_versions_retrieve
      description: Get available versions of the model.
      summary: Get model versions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Machine Learning
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-fern-sdk-group-name: ml
      x-fern-sdk-method-name: list_model_versions
      x-fern-audiences:
      - public
  /api/model-provider-connections/:
    get:
      operationId: api_model_provider_connections_list
      description: List all model provider connections.
      summary: List model provider connections
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Model Provider Connection
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelProviderConnection'
          description: ''
    post:
      operationId: api_model_provider_connections_create
      description: Create a new model provider connection.
      summary: Create model provider connection
      tags:
      - Model Provider Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelProviderConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelProviderConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelProviderConnectionRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProviderConnection'
          description: ''
  /api/model-provider-connections/{id}/:
    get:
      operationId: api_model_provider_connections_retrieve
      description: Retrieve a specific model provider connection.
      summary: Get model provider connection
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Model Provider Connection
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProviderConnection'
          description: ''
    put:
      operationId: api_model_provider_connections_update
      description: Overwrite a specific model provider connection by ID.
      summary: Put model provider connection
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Model Provider Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelProviderConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelProviderConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelProviderConnectionRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProviderConnection'
          description: ''
    patch:
      operationId: api_model_provider_connections_partial_update
      description: Update a specific model provider connection by ID.
      summary: Update model provider connection
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Model Provider Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedModelProviderConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedModelProviderConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedModelProviderConnectionRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProviderConnection'
          description: ''
    delete:
      operationId: api_model_provider_connections_destroy
      description: Delete a model provider connection by ID
      summary: Delete model provider connection
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Model Provider Connection
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/model-provider-connections/provider-choices:
    get:
      operationId: api_model_provider_connections_provider_choices_retrieve
      description: List all possible model provider choices
      summary: List model provider choices
      tags:
      - Model Provider Connection
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/organizations/:
    get:
      operationId: api_organizations_list
      description: "\n        Return a list of the organizations you've created or\
        \ that you have access to.\n        "
      summary: List your organizations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Organizations
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationId'
          description: ''
      x-fern-sdk-group-name: organizations
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
  /api/organizations/{id}:
    get:
      operationId: api_organizations_retrieve
      description: Retrieve the settings for a specific organization by ID.
      summary: Get organization settings
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Organizations
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseOrganization'
          description: ''
      x-fern-sdk-group-name: organizations
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_organizations_partial_update
      description: Update organization details including title, embed domains, and
        custom scripts settings.
      summary: Update organization
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLseOrganizationSerializerUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLseOrganizationSerializerUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLseOrganizationSerializerUpdateRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseOrganization'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/organizations/{id}/memberships:
    get:
      operationId: api_organizations_memberships_list
      description: Retrieve a list of all users and roles in a specific organization.
      summary: Get organization members/roles
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Organizations
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLseOrganizationMemberListList'
          description: ''
    post:
      operationId: api_organizations_memberships_create
      description: "\n    Assign a role to a user in an organization. To do so, make\
        \ the following cURL request:\n\n    ```bash\n    curl -H 'Content-Type: application/json'\
        \ -H 'Authorization: Token abc123' \\\n    -X POST 'https://label-studio-host/api/organizations/{{id}}/memberships'\
        \ --data '[{{\"user_id\": Int, \"role\": \"NO|DI|OW|AD|MA|AN|RE\" }}]'\n \
        \   ```\n    \n    Enumerate a role with one of the following abbreviations:\n\
        \n    | Role | Full Role Name |\n    | --- | --- |\n    | NO | Not Activated\
        \ |\n    | DI | Deactivated |\n    | OW | Owner |\n    | AD | Administrator\
        \ |\n    | MA | Manager |\n    | AN | Annotator |\n    | RE | Reviewer |\n\
        \n    For example, to set a user with an ID of 9 as an annotator, make the\
        \ following cURL request:\n    ```bash\n    curl -H 'Content-Type: application/json'\
        \ -H 'Authorization: Token abc123' \\\n    -X POST 'https://label-studio-host/api/organizations/{{id}}/memberships'\
        \ --data '[{{\"user_id\": 9, \"role\": \"AN\" }}]'\n    ```\n    "
      summary: Create organization member/role
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMemberCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMemberCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMemberCreateUpdateRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseOrganizationMemberList'
          description: ''
    patch:
      operationId: api_organizations_memberships_partial_update
      description: "\n    Update organization membership or role for a specific user\
        \ ID.\n\n    **User Rotation Best Practices for API Usage**\n    \n    To\
        \ maintain compliance with our licensing terms and ensure optimal performance\
        \ of HumanSignal's APIs, please consider the following guidelines when managing\
        \ user assignments:\n    \n    * **Maintain a 7-Day Minimum Assignment**:\
        \ Once a licensed seat is assigned to a user, maintain that assignment for\
        \ at least seven consecutive days before rotating it to another user.\n\n\
        \    * **Automate, Monitor, and Log Rotations**: Implement automated scheduling\
        \ and logging mechanisms to track the timing of user rotations. This helps\
        \ ensure that rotations adhere to the seven-day minimum period.\n\n    * **Adhere\
        \ to API Update Frequency and Wait Periods**: When updating user assignments\
        \ via our APIs, follow the recommended frequency and wait period guidelines\
        \ provided in the HumanSignal API documentation. Avoid sending rapid, successive\
        \ requests that might overload the endpoint. Instead, incorporate appropriate\
        \ delays between calls as specified in the documentation.\n    \n    * **Avoid\
        \ Overloading the API Endpoint**: Design your integration to batch or schedule\
        \ updates where possible, and implement backoff strategies if the API indicates\
        \ rate limiting. This helps prevent service disruptions and ensures a smooth\
        \ operation.\n    "
      summary: Update organization member/role
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMemberCreateUpdateRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseOrganizationMemberList'
          description: ''
  /api/organizations/{id}/memberships/{user_pk}/:
    get:
      operationId: api_organizations_memberships_retrieve
      description: Get organization member details by user ID.
      summary: Get organization member details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        description: A unique integer value identifying the user to get organization
          details for.
        required: true
      tags:
      - Organizations
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ''
      x-fern-sdk-group-name:
      - organizations
      - members
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    delete:
      operationId: api_organizations_memberships_destroy
      description: Soft delete a member from the organization.
      summary: Soft delete an organization member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        description: A unique integer value identifying the user to be deleted from
          the organization.
        required: true
      tags:
      - Organizations
      security:
      - Token: []
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '405':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-fern-sdk-group-name:
      - organizations
      - members
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/organizations/{id}/set-default-role:
    patch:
      operationId: api_organizations_set_default_role_partial_update
      description: Update the default role for members of a specific organization.
      summary: Update default role
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDefaultRoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDefaultRoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDefaultRoleRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultRole'
          description: ''
  /api/predictions/:
    get:
      operationId: api_predictions_list
      description: List all predictions and their IDs.
      summary: List predictions
      parameters:
      - in: query
        name: project
        schema:
          type: integer
        description: Filter predictions by project ID
      - in: query
        name: task
        schema:
          type: integer
        description: Filter predictions by task ID
      tags:
      - Predictions
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prediction'
              examples:
                Response:
                  value:
                  - - id: 1
                      task: 1
                      result:
                      - original_width: 1920
                        original_height: 1080
                        image_rotation: 0
                        from_name: bboxes
                        to_name: image
                        type: rectanglelabels
                        value:
                          x: 20
                          y: 30
                          width: 50
                          height: 60
                          rotation: 0
                          values:
                            rectanglelabels:
                            - Person
                      score: 0.95
                      model_version: yolo-v8
                  summary: response
          description: Predictions list
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_predictions_create
      description: Create a prediction for a specific task.
      summary: Create prediction
      tags:
      - Predictions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: integer
                  description: Task ID for which the prediction is created
                result:
                  type: array
                  items:
                    type: object
                  description: Prediction result in JSON format. Read more about the
                    format in [the Label Studio documentation.](https://labelstud.io/guide/predictions)
                  example:
                  - original_width: 1920
                    original_height: 1080
                    image_rotation: 0
                    from_name: bboxes
                    to_name: image
                    type: rectanglelabels
                    value:
                      x: 20
                      y: 30
                      width: 50
                      height: 60
                      rotation: 0
                      values:
                        rectanglelabels:
                        - Person
                score:
                  type: number
                  description: Prediction score. Can be used in Data Manager to sort
                    task by model confidence. Task with the lowest score will be shown
                    first.
                  example: 0.95
                model_version:
                  type: string
                  description: Model version - tag for predictions that can be used
                    to filter tasks in Data Manager, as well as select specific model
                    version for showing preannotations in the labeling interface
                  example: yolo-v8
              example:
                result:
                - original_width: 1920
                  original_height: 1080
                  image_rotation: 0
                  from_name: bboxes
                  to_name: image
                  type: rectanglelabels
                  value:
                    x: 20
                    y: 30
                    width: 50
                    height: 60
                    rotation: 0
                    values:
                      rectanglelabels:
                      - Person
                score: 0.95
                model_version: yolo-v8
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
              examples:
                Response:
                  value:
                    id: 1
                    task: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    score: 0.95
                    model_version: yolo-v8
                  summary: response
          description: Created prediction
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/predictions/{id}/:
    get:
      operationId: api_predictions_retrieve
      description: Get details about a specific prediction by its ID.
      summary: Get prediction details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Prediction ID
        required: true
      tags:
      - Predictions
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
              examples:
                Response:
                  value:
                    id: 1
                    task: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    score: 0.95
                    model_version: yolo-v8
                  summary: response
          description: Prediction details
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    put:
      operationId: api_predictions_update
      description: Overwrite prediction data by prediction ID.
      summary: Put prediction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Prediction ID
        required: true
      tags:
      - Predictions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: integer
                  description: Task ID for which the prediction is created
                result:
                  type: array
                  items:
                    type: object
                  description: Prediction result in JSON format. Read more about the
                    format in [the Label Studio documentation.](https://labelstud.io/guide/predictions)
                  example:
                  - original_width: 1920
                    original_height: 1080
                    image_rotation: 0
                    from_name: bboxes
                    to_name: image
                    type: rectanglelabels
                    value:
                      x: 20
                      y: 30
                      width: 50
                      height: 60
                      rotation: 0
                      values:
                        rectanglelabels:
                        - Person
                score:
                  type: number
                  description: Prediction score. Can be used in Data Manager to sort
                    task by model confidence. Task with the lowest score will be shown
                    first.
                  example: 0.95
                model_version:
                  type: string
                  description: Model version - tag for predictions that can be used
                    to filter tasks in Data Manager, as well as select specific model
                    version for showing preannotations in the labeling interface
                  example: yolo-v8
              example:
                result:
                - original_width: 1920
                  original_height: 1080
                  image_rotation: 0
                  from_name: bboxes
                  to_name: image
                  type: rectanglelabels
                  value:
                    x: 20
                    y: 30
                    width: 50
                    height: 60
                    rotation: 0
                    values:
                      rectanglelabels:
                      - Person
                score: 0.95
                model_version: yolo-v8
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
              examples:
                Response:
                  value:
                    id: 1
                    task: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    score: 0.95
                    model_version: yolo-v8
                  summary: response
          description: Updated prediction
      x-fern-audiences:
      - internal
    patch:
      operationId: api_predictions_partial_update
      description: Update prediction data by prediction ID.
      summary: Update prediction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Prediction ID
        required: true
      tags:
      - Predictions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: integer
                  description: Task ID for which the prediction is created
                result:
                  type: array
                  items:
                    type: object
                  description: Prediction result in JSON format. Read more about the
                    format in [the Label Studio documentation.](https://labelstud.io/guide/predictions)
                  example:
                  - original_width: 1920
                    original_height: 1080
                    image_rotation: 0
                    from_name: bboxes
                    to_name: image
                    type: rectanglelabels
                    value:
                      x: 20
                      y: 30
                      width: 50
                      height: 60
                      rotation: 0
                      values:
                        rectanglelabels:
                        - Person
                score:
                  type: number
                  description: Prediction score. Can be used in Data Manager to sort
                    task by model confidence. Task with the lowest score will be shown
                    first.
                  example: 0.95
                model_version:
                  type: string
                  description: Model version - tag for predictions that can be used
                    to filter tasks in Data Manager, as well as select specific model
                    version for showing preannotations in the labeling interface
                  example: yolo-v8
              example:
                result:
                - original_width: 1920
                  original_height: 1080
                  image_rotation: 0
                  from_name: bboxes
                  to_name: image
                  type: rectanglelabels
                  value:
                    x: 20
                    y: 30
                    width: 50
                    height: 60
                    rotation: 0
                    values:
                      rectanglelabels:
                      - Person
                score: 0.95
                model_version: yolo-v8
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
              examples:
                Response:
                  value:
                    id: 1
                    task: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    score: 0.95
                    model_version: yolo-v8
                  summary: response
          description: Updated prediction
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_predictions_destroy
      description: Delete a prediction by prediction ID.
      summary: Delete prediction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Prediction ID
        required: true
      tags:
      - Predictions
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: predictions
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/project-templates/:
    get:
      operationId: api_project_templates_list
      description: Get a list of all project templates for an organization.
      summary: Get project templates
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Project Templates
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectTemplate'
          description: ''
    post:
      operationId: api_project_templates_create
      description: Create a project template for an organization.
      summary: Create project template
      tags:
      - Project Templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectTemplateRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTemplate'
          description: ''
  /api/project-templates/{id}:
    get:
      operationId: api_project_templates_retrieve
      description: Get a specific project template by ID for an organization.
      summary: Get a project template
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Project Templates
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTemplate'
          description: ''
    put:
      operationId: api_project_templates_update
      description: Overwrite a specific project template by ID for an organization.
      summary: Overwrite a project template
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Project Templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectTemplateRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTemplate'
          description: ''
    patch:
      operationId: api_project_templates_partial_update
      description: Update the details of a specific project template by ID for an
        organization.
      summary: Update a project template
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Project Templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectTemplateRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTemplate'
          description: ''
    delete:
      operationId: api_project_templates_destroy
      description: Delete a specific project template by ID for an organization.
      summary: Delete a project template
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Project Templates
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/project-templates/{id}/create-project:
    post:
      operationId: api_project_templates_create_project_create
      description: Create a project from a specific project template by ID for an
        organization.
      summary: Create project from template
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Project Templates
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the project to be created from the template.
                description:
                  type: string
                  description: A description for the project.
                workspace_id:
                  type: integer
                  description: A unique integer value identifying the workspace in
                    which to create the project.
              required:
              - title
              - workspace_id
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseProject'
          description: Project created successfully
  /api/projects/:
    get:
      operationId: api_projects_list
      description: Retrieve a list of projects.
      summary: List projects
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllRolesProjectListList'
          description: ''
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
      x-fern-pagination:
        offset: $request.page
        results: $response.results
    post:
      operationId: api_projects_create
      description: Create a project for a specific organization.
      summary: Create a project
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseProjectCreateRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseProjectCreate'
          description: ''
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/projects/{id}/:
    get:
      operationId: api_projects_retrieve
      description: Retrieve information about a project by project ID.
      summary: Get project by ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              examples:
                Response:
                  value:
                    id: 1
                    title: My project
                    description: My first project
                    label_config: <View>[...]</View>
                    expert_instruction: Label all cats
                    show_instruction: true
                    show_skip_button: true
                    enable_empty_annotation: true
                    show_annotation_history: true
                    organization: 1
                    color: '#FF0000'
                    maximum_annotations: 1
                    is_published: true
                    model_version: 1.0.0
                    is_draft: false
                    created_by:
                      id: 1
                      first_name: Jo
                      last_name: Doe
                      email: manager@humansignal.com
                    created_at: '2023-08-24T14:15:22Z'
                    min_annotations_to_start_training: 0
                    start_training_on_annotation_update: true
                    show_collab_predictions: true
                    num_tasks_with_annotations: 10
                    task_number: 100
                    useful_annotation_number: 10
                    ground_truth_number: 5
                    skipped_annotations_number: 0
                    total_annotations_number: 10
                    total_predictions_number: 0
                    sampling: Sequential sampling
                    show_ground_truth_first: true
                    show_overlap_first: true
                    overlap_cohort_percentage: 100
                    task_data_login: user
                    task_data_password: secret
                    control_weights: {}
                    parsed_label_config: '{"tag": {...}}'
                    evaluate_predictions_automatically: false
                    config_has_control_tags: true
                    skip_queue: REQUEUE_FOR_ME
                    reveal_preannotations_interactively: true
                    pinned_at: '2023-08-24T14:15:22Z'
                    finished_task_number: 10
                    queue_total: 10
                    queue_done: 100
                  summary: response
          description: Project information
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_projects_partial_update
      description: Update the details of a specific project.
      summary: Update project details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLseProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLseProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLseProjectRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseProjectUpdate'
          description: ''
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_projects_destroy
      description: Delete a project by specified project ID.
      summary: Delete project
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/projects/{id}/annotation-history/:
    get:
      operationId: api_projects_annotation_history_list
      description: List all annotation history items for the project with pagination.
      summary: List annotation history items for project
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Annotation History
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnotationHistoryList'
          description: ''
  /api/projects/{id}/aws-custom-function-logs:
    get:
      operationId: api_projects_aws_custom_function_logs_retrieve
      description: Get AWS lambda logs for project, including filtering by start and
        end dates
      summary: Get AWS lambda logs for project
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: End date for AWS logs filtering
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date for AWS logs filtering
      tags:
      - AWS
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                title: List of AWS lambda logs
                description: List of AWS lambda logs
                type: object
          description: Successful response returns list of AWS lambda logs
  /api/projects/{id}/dashboard:
    get:
      operationId: api_projects_dashboard_retrieve
      description: Get dashboard data for project, including annotations and tasks
        stats.
      summary: Get dashboard data for project
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Dashboard
      security:
      - Token: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    title: tasks
                    type: integer
                    description: Total number of tasks
                  annotations:
                    title: annotations
                    type: integer
                    description: Total number of annotations
                  annotated_tasks:
                    title: annotated_tasks
                    type: integer
                    description: Number of annotated (completed) tasks
                  skipped_tasks:
                    title: skipped_tasks
                    type: integer
                    description: Number of tasks that have been skipped by at least
                      one annotator
                  reviewed_tasks:
                    title: reviewed_tasks
                    type: integer
                    description: Number of tasks that have been reviewed by at least
                      one reviewer
                  remaining_tasks:
                    title: remaining_tasks
                    type: integer
                    description: Total number of uncompleted tasks
          description: Successful response returns project-related annotation statistics
  /api/projects/{id}/dashboard-members:
    get:
      operationId: api_projects_dashboard_members_retrieve
      description: Get dashboard for members, including similarity matrix, user statistics
        and users list.
      summary: Get dashboard data for members
      parameters:
      - in: query
        name: action
        schema:
          type: string
        description: All data objects will be filtered by updated_at or created_at
          field
      - in: query
        name: end_date
        schema:
          type: string
        description: End date for dashboard stats calculation. UTC timezone by default.
          Use iso format (yyyy-mm-dd-hh-mm) to specify timezone.
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: per_label
        schema:
          type: boolean
        description: Per label calculation
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date for dashboard stats calculation. UTC timezone by default.
          Use iso format (yyyy-mm-dd-hh-mm) to specify timezone.
      - in: query
        name: updated_by
        schema:
          type: string
        description: All task objects will be filtered by updated_by field. Only tasks
          that were updated by concrete user will be taken in account.
      - in: query
        name: use_kappa
        schema:
          type: boolean
        description: Use kappa statistics for calculation
      tags:
      - Dashboard
      security:
      - Token: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Task creation response
                description: Task creation response
                type: object
                properties:
                  users:
                    type: array
                    description: List of users
                    items:
                      title: User data
                      type: object
                  similarity:
                    type: array
                    description: Consensus statistics between different users
                    items:
                      title: Similarities, common tasks
                      type: object
                  stats:
                    type: array
                    description: Number of annotated (completed) tasks
                    items:
                      title: User statistics
                      description: User statistics
                      type: object
                      properties:
                        finished:
                          title: Finished tasks
                          type: integer
                        skipped:
                          title: Skipped tasks
                          type: integer
                        accepted:
                          title: Accepted tasks
                          type: integer
                          description: Number of annotations marked as "Accepted"
                            by reviewer
                        rejected:
                          title: Rejected tasks
                          type: integer
                          description: Number of annotations marked as "Rejected"
                            by reviewer
                        progress:
                          title: Annotation progress
                          type: integer
                          description: Fraction of annotation work done so far
                        mean_time:
                          title: Mean time
                          type: number
                          description: Average mean time spent on annotation
                        median_time:
                          title: Median time
                          type: number
                          description: Average median time spent on annotation
                        gt:
                          title: Ground Truth score
                          type: number
                          description: Average agreement with Ground Truth annotations
                        predictions:
                          title: Predictions score
                          type: number
                          description: Average agreement with predictions
                        review_score:
                          title: Review score
                          type: number
                          description: Average reviewing score, when calling with
                            "per_label=true", returns dictionary with labels to score
                            breakdown
          description: Successful response returns project-related annotation statistics
  /api/projects/{id}/duplicate/:
    post:
      operationId: api_projects_duplicate_create
      description: Make a copy of project.
      summary: Duplicate project
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDuplicateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectDuplicateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectDuplicateRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                id:
                  type: integer
                  description: The ID of the duplicated project.
          description: Project duplicated
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: duplicate
      x-fern-audiences:
      - public
  /api/projects/{id}/export:
    get:
      operationId: api_projects_export_retrieve
      description: "\n        <i>Note: if you have a large project it's recommended\
        \ to use\n        export snapshots, this easy export endpoint might have timeouts.</i><br/><br>\n\
        \        Export annotated tasks as a file in a specific format.\n        For\
        \ example, to export JSON annotations for a project to a file called `annotations.json`,\n\
        \        run the following from the command line:\n        ```bash\n     \
        \   curl -X GET http://localhost:8000/api/projects/{id}/export?exportType=JSON\
        \ -H 'Authorization: Token abc123' --output 'annotations.json'\n        ```\n\
        \        To export all tasks, including skipped tasks and others without annotations,\
        \ run the following from the command line:\n        ```bash\n        curl\
        \ -X GET http://localhost:8000/api/projects/{id}/export?exportType=JSON&download_all_tasks=true\
        \ -H 'Authorization: Token abc123' --output 'annotations.json'\n        ```\n\
        \        To export specific tasks with IDs of 123 and 345, run the following\
        \ from the command line:\n        ```bash\n        curl -X GET 'http://localhost:8000/api/projects/{id}/export?ids[]=123&ids[]=345'\
        \ -H 'Authorization: Token abc123' --output 'annotations.json'\n        ```\n\
        \        "
      summary: Easy export of tasks and annotations
      parameters:
      - in: query
        name: download_all_tasks
        schema:
          type: string
        description: If true, download all tasks regardless of status. If false, download
          only annotated tasks.
      - in: query
        name: download_resources
        schema:
          type: boolean
        description: If true, download all resource files such as images, audio, and
          others relevant to the tasks.
      - in: query
        name: export_type
        schema:
          type: string
        description: Selected export format (JSON by default)
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - in: query
        name: ids
        schema:
          type: array
          items:
            type: string
        description: Specify a list of task IDs to retrieve only the details for those
          tasks.
      tags:
      - Export
      security:
      - Token: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Export file
                description: Export file with results
                type: string
                format: binary
          description: Exported data
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: download_sync
      x-fern-audiences:
      - public
  /api/projects/{id}/export/formats:
    get:
      operationId: api_projects_export_formats_retrieve
      description: Retrieve the available export formats for the current project by
        ID.
      summary: Get export formats
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Export
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  title: Export format
                description: List of available formats
                title: Format list
          description: Export formats
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: list_formats
      x-fern-audiences:
      - public
  /api/projects/{id}/exports/:
    get:
      operationId: api_projects_exports_list
      description: Returns a list of exported files for a specific project by ID.
      summary: List all export snapshots
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Export
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Export'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_projects_exports_create
      description: Create a new export request to start a background task and generate
        an export file for a specific project by ID.
      summary: Create new export snapshot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseExportCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseExportCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseExportCreateRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseExportCreate'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/projects/{id}/exports/{export_pk}:
    get:
      operationId: api_projects_exports_retrieve
      description: Retrieve information about an export file by export ID for a specific
        project.
      summary: Get export snapshot by ID
      parameters:
      - in: path
        name: export_pk
        schema:
          type: string
        description: Primary key identifying the export file.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Export
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    delete:
      operationId: api_projects_exports_destroy
      description: Delete an export file by specified export ID.
      summary: Delete export snapshot
      parameters:
      - in: path
        name: export_pk
        schema:
          type: string
        description: Primary key identifying the export file.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Export
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/projects/{id}/exports/{export_pk}/convert:
    post:
      operationId: api_projects_exports_convert_create
      description: Convert export snapshot to selected format
      summary: Export conversion
      parameters:
      - in: path
        name: export_pk
        schema:
          type: string
        description: Primary key identifying the export file.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportConvertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExportConvertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExportConvertRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: convert
      x-fern-audiences:
      - public
  /api/projects/{id}/exports/{export_pk}/download:
    get:
      operationId: api_projects_exports_download_retrieve
      description: "\n        Download an export file in the specified format for\
        \ a specific project. Specify the project ID with the `id`\n        parameter\
        \ in the path and the ID of the export file you want to download using the\
        \ `export_pk` parameter\n        in the path.\n\n        Get the `export_pk`\
        \ from the response of the request to [Create new export](/api#operation/api_projects_exports_create)\n\
        \        or after [listing export files](/api#operation/api_projects_exports_list).\n\
        \        "
      summary: Download export snapshot as file in specified format
      parameters:
      - in: query
        name: exportType
        schema:
          type: string
        description: Selected export format
      - in: path
        name: export_pk
        schema:
          type: string
        description: Primary key identifying the export file.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Export
      security:
      - Token: []
      responses:
        '200':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - exports
      x-fern-sdk-method-name: download
      x-fern-audiences:
      - public
  /api/projects/{id}/file-uploads:
    get:
      operationId: api_projects_file_uploads_list
      description: "\n        Retrieve the list of uploaded files used to create labeling\
        \ tasks for a specific project.\n        "
      summary: Get files list
      parameters:
      - in: query
        name: all
        schema:
          type: boolean
        description: Set to "true" if you want to retrieve all file uploads
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: ids
        schema:
          type: array
          items:
            type: string
        description: Specify the list of file upload IDs to retrieve, e.g. ids=[1,2,3]
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Import
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUpload'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - file_uploads
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    delete:
      operationId: api_projects_file_uploads_destroy
      description: "\n        Delete uploaded files for a specific project.\n    \
        \    "
      summary: Delete files
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Import
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - file_uploads
      x-fern-sdk-method-name: delete_many
      x-fern-audiences:
      - public
  /api/projects/{id}/import:
    post:
      operationId: api_projects_import_create
      description: "\n            Import data as labeling tasks in bulk using this\
        \ API endpoint. You can use this API endpoint to import multiple tasks.\n\
        \            One POST request is limited at 250K tasks and 200 MB.\n\n   \
        \         **Note:** Imported data is verified against a project *label_config*\
        \ and must\n            include all variables that were used in the *label_config*.\
        \ For example,\n            if the label configuration has a *$text* variable,\
        \ then each item in a data object\n            must include a \"text\" field.\n\
        \            <br>\n\n            ## POST requests\n            <hr style=\"\
        opacity:0.3\">\n\n            There are three possible ways to import tasks\
        \ with this endpoint:\n\n            ### 1. **POST with data**\n         \
        \   Send JSON tasks as POST data. Only JSON is supported for POSTing files\
        \ directly.\n            Update this example to specify your authorization\
        \ token and Label Studio instance host, then run the following from\n    \
        \        the command line.\n\n            ```bash\n            curl -H 'Content-Type:\
        \ application/json' -H 'Authorization: Token abc123' \\\n            -X POST\
        \ 'http://localhost:8000/api/projects/1/import' --data '[{\"text\": \"Some\
        \ text 1\"}, {\"text\": \"Some text 2\"}]'\n            ```\n\n          \
        \  ### 2. **POST with files**\n            Send tasks as files. You can attach\
        \ multiple files with different names.\n\n            - **JSON**: text files\
        \ in JavaScript object notation format\n            - **CSV**: text files\
        \ with tables in Comma Separated Values format\n            - **TSV**: text\
        \ files with tables in Tab Separated Value format\n            - **TXT**:\
        \ simple text files are similar to CSV with one column and no header, supported\
        \ for projects with one source only\n\n            Update this example to\
        \ specify your authorization token, Label Studio instance host, and file name\
        \ and path,\n            then run the following from the command line:\n\n\
        \            ```bash\n            curl -H 'Authorization: Token abc123' \\\
        \n            -X POST 'http://localhost:8000/api/projects/1/import' -F 'file=@path/to/my_file.csv'\n\
        \            ```\n\n            ### 3. **POST with URL**\n            You\
        \ can also provide a URL to a file with labeling tasks. Supported file formats\
        \ are the same as in option 2.\n\n            ```bash\n            curl -H\
        \ 'Content-Type: application/json' -H 'Authorization: Token abc123' \\\n \
        \           -X POST 'http://localhost:8000/api/projects/1/import' \\\n   \
        \         --data '[{\"url\": \"http://example.com/test1.csv\"}, {\"url\":\
        \ \"http://example.com/test2.csv\"}]'\n            ```\n\n            <br>\n\
        \        "
      summary: Import tasks
      parameters:
      - in: query
        name: commit_to_project
        schema:
          type: boolean
          default: true
        description: Set to "true" to immediately commit tasks to the project.
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - in: query
        name: preannotated_from_fields
        schema:
          type: array
          items:
            type: string
        description: 'List of fields to preannotate from the task data. For example,
          if you provide a list of `{"text": "text", "prediction": "label"}` items
          in the request, the system will create a task with the `text` field and
          a prediction with the `label` field when `preannoted_from_fields=["prediction"]`.'
      - in: query
        name: return_task_ids
        schema:
          type: boolean
          default: false
        description: Set to "true" to return task IDs in the response.
      tags:
      - Import
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImportApiRequest'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImportApiRequest'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImportApiRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                title: Task creation response
                description: Task creation response
                type: object
                properties:
                  task_count:
                    title: task_count
                    description: Number of tasks added
                    type: integer
                  annotation_count:
                    title: annotation_count
                    description: Number of annotations added
                    type: integer
                  predictions_count:
                    title: predictions_count
                    description: Number of predictions added
                    type: integer
                  duration:
                    title: duration
                    description: Time in seconds to create
                    type: number
                  file_upload_ids:
                    title: file_upload_ids
                    description: Database IDs of uploaded files
                    type: array
                    items:
                      title: File Upload IDs
                      type: integer
                  could_be_tasks_list:
                    title: could_be_tasks_list
                    description: Whether uploaded files can contain lists of tasks,
                      like CSV/TSV files
                    type: boolean
                  found_formats:
                    title: found_formats
                    description: The list of found file formats
                    type: array
                    items:
                      title: File format
                      type: string
                  data_columns:
                    title: data_columns
                    description: The list of found data columns
                    type: array
                    items:
                      title: Data column name
                      type: string
          description: Tasks successfully imported
        '400':
          content:
            application/json:
              schema:
                title: Incorrect task data
                description: String with error description
                type: string
          description: Bad Request
      x-fern-sdk-group-name: projects
      x-fern-sdk-method-name: import_tasks
      x-fern-audiences:
      - public
  /api/projects/{id}/imports/{import_pk}/:
    get:
      operationId: api_projects_imports_retrieve
      description: Return data related to async project import operation
      summary: Get project import info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project import.
        required: true
      - in: path
        name: import_pk
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectImport'
          description: ''
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: create_many_status
      x-fern-audiences:
      - public
  /api/projects/{id}/members/:
    get:
      operationId: api_projects_members_retrieve
      description: Retrieve the members for a specific project.
      summary: Get project members
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMember'
          description: ''
    post:
      operationId: api_projects_members_create
      description: Add a member to a specific project.
      summary: Add project member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectMemberRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMember'
          description: ''
    delete:
      operationId: api_projects_members_destroy
      description: Remove a member from a specific project.
      summary: Remove member from project
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: project_member
        schema:
          type: integer
        description: A unique integer value identifying this project member.
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/projects/{id}/project-extra-params/:
    get:
      operationId: api_projects_project_extra_params_retrieve
      description: Retrieve the annotator weights for statistics and Cohen's Kappa
        for a specific project.
      summary: Get annotator weights
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Change annotator weights for statistics
                description: Create or change annotator weights for statistics
                type: object
                properties:
                  annotator_params:
                    title: annotator_params
                    description: Dict of users with weights
                    type: array
                    items:
                      title: User_id and weight
                      description: '{user_id: weight}'
                      type: object
                  use_kappa:
                    title: use_kappa
                    description: If project uses Cohen's Kappa in calculation
                    type: boolean
          description: Annotator weights retrieved
        '204':
          description: No annotator weights found
    post:
      operationId: api_projects_project_extra_params_create
      description: Create annotator weights to be used in the annotation statistics
        for a project, such as when calculating kappa metrics for inter-annotator
        agreement.
      summary: Create annotator weights for statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseProjectParamsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseProjectParamsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseProjectParamsRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Change annotator weights for statistics
                description: Create or change annotator weights for statistics
                type: object
                properties:
                  annotator_params:
                    title: annotator_params
                    description: Dict of users with weights
                    type: array
                    items:
                      title: User_id and weight
                      description: '{user_id: weight}'
                      type: object
                  use_kappa:
                    title: use_kappa
                    description: If project uses Cohen's Kappa in calculation
                    type: boolean
          description: Annotator weights created/updated
  /api/projects/{id}/reimports/{reimport_pk}/:
    get:
      operationId: api_projects_reimports_retrieve
      description: Return data related to async project reimport operation
      summary: Get project reimport info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project reimport.
        required: true
      - in: path
        name: reimport_pk
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectReimport'
          description: ''
      x-fern-audiences:
      - internal
  /api/projects/{id}/roles:
    get:
      operationId: api_projects_roles_retrieve
      description: "\n        List users and their project level roles for a given\
        \ project.\n        If user is not listed here and is a member of the project\
        \ then they would behave as assigned role in organization.\n        "
      summary: List project roles
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Project Roles
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
          description: ''
  /api/projects/{id}/stats/IAA:
    get:
      operationId: api_projects_stats_IAA_retrieve
      description: Get Inter-Annotator Agreement (IAA) matrix for a project, showing
        agreement between all annotators.
      summary: Get Inter-Annotator Agreement matrix
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: per_label
        schema:
          type: boolean
          default: false
        description: Calculate IAA per label
      - in: query
        name: std
        schema:
          type: boolean
          default: false
        description: Include standard deviation in results
      - in: query
        name: task
        schema:
          type: string
        description: Comma-separated list of task IDs to filter by
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  IAA:
                    type: array
                    items:
                      type: array
                      items:
                        type: number
                    description: Inter-Annotator Agreement matrix (2D array)
                  users:
                    type: array
                    items:
                      type: object
                    description: List of users in the matrix
                  std:
                    type: number
                    description: Standard deviation (if requested)
          description: Inter-Annotator Agreement matrix
  /api/projects/{id}/stats/agreement_annotator/{user_id}:
    get:
      operationId: api_projects_stats_agreement_annotator_retrieve
      description: Get agreement statistics for a specific annotator within a project.
      summary: Get individual annotator agreement stats
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: per_label
        schema:
          type: boolean
          default: false
        description: Calculate agreement per label
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  Agreement_per_annotator:
                    type: number
                    description: Agreement score for the annotator (0-1)
          description: Individual annotator agreement statistics
  /api/projects/{id}/stats/data_filter:
    get:
      operationId: api_projects_stats_data_filter_retrieve
      description: Get statistics about user data filters and their usage within a
        project.
      summary: Get user data filter statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  filters:
                    type: object
                    description: Data filter statistics by user
          description: User data filter statistics
  /api/projects/{id}/stats/finished:
    get:
      operationId: api_projects_stats_finished_retrieve
      description: Get statistics about finished tasks for a project.
      summary: Get finished tasks statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: user_pk
        schema:
          type: integer
        description: User ID to filter statistics by (optional)
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  finished_tasks:
                    type: integer
                    description: Number of finished tasks
                  progress:
                    type: number
                    description: Progress percentage (0-100)
          description: Finished tasks statistics
  /api/projects/{id}/stats/lead_time:
    get:
      operationId: api_projects_stats_lead_time_retrieve
      description: Get lead time statistics across the project, including average
        annotation time.
      summary: Get lead time statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  lead_time:
                    type: object
                    description: Lead time statistics including mean, median, and
                      distribution
          description: Lead time statistics
  /api/projects/{id}/tasks/:
    get:
      operationId: api_projects_tasks_list
      description: "\n            Retrieve a paginated list of tasks for a specific\
        \ project. For example, use the following cURL command:\n            ```bash\n\
        \            curl -X GET http://localhost:8000/api/projects/{id}/tasks/?page=1&page_size=10\
        \ -H 'Authorization: Token abc123'\n            ```\n        "
      summary: List project tasks
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
        description: '[or "start"] current page'
      - in: query
        name: page_size
        schema:
          type: integer
        description: '[or "length"] tasks per page, use -1 to obtain all tasks (in
          this case "page" has no effect and this operation might be slow)'
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskSimple'
          description: ''
      x-fern-audiences:
      - internal
    delete:
      operationId: api_projects_tasks_destroy
      description: Delete all tasks from a specific project.
      summary: Delete all tasks
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: delete_all_tasks
      x-fern-audiences:
      - public
  /api/projects/{id}/tasks/{task_pk}/assignees:
    get:
      operationId: api_projects_tasks_assignees_retrieve
      description: Retrieve a list of tasks and assignees for those tasks for a specific
        project.
      summary: Get assigned tasks and assignees
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - in: path
        name: task_pk
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - Tasks
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignment'
          description: ''
    post:
      operationId: api_projects_tasks_assignees_create_2
      description: Assign a user to a task in a specific project.
      summary: Create task assignee
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - in: path
        name: task_pk
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskAssignmentRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignment'
          description: ''
    patch:
      operationId: api_projects_tasks_assignees_partial_update
      description: Update the assignee for a task in a specific project.
      summary: Update task assignee
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - in: path
        name: task_pk
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskAssignmentRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignment'
          description: ''
    delete:
      operationId: api_projects_tasks_assignees_destroy
      description: Remove the assignee for a task for a specific project.
      summary: Delete task assignee
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      - in: path
        name: task_pk
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - Tasks
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/projects/{id}/tasks/assignees:
    post:
      operationId: api_projects_tasks_assignees_create
      description: Assign multiple tasks to a specific user for a specific project.
      summary: Bulk assign tasks
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: selected_items
        schema:
          type: boolean
        description: Selected items
      - in: query
        name: type
        schema:
          type: string
        description: Assignment type
      - in: query
        name: users
        schema:
          type: string
        description: Assignees
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAssignmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskAssignmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskAssignmentRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignments:
                    type: array
                    items:
                      type: object
          description: Success
        '400':
          description: Can't assign tasks
  /api/projects/{id}/update-stats:
    get:
      operationId: api_projects_update_stats_retrieve
      description: Start stats recalculation for given project
      summary: Start stats recalculation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: stat_type
        schema:
          type: string
        description: 'Stat type to recalculate. Possible values: label, stats'
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Stat recalculation job
                description: Stat recalculation job
                type: object
          description: Successful response returns job id
  /api/projects/{id}/user-stats/{user_pk}/prediction:
    get:
      operationId: api_projects_user_stats_prediction_retrieve
      description: Get prediction agreement statistics for a specific user within
        a project.
      summary: Get individual user prediction agreement
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  average_prediction_agreement_per_user:
                    type: number
                    description: Average prediction agreement score for the user (0-1)
          description: Individual user prediction agreement statistics
  /api/projects/{id}/user-stats/{user_pk}/review_score:
    get:
      operationId: api_projects_user_stats_review_score_retrieve
      description: Get review score statistics for a specific user within a project.
      summary: Get individual user review scores
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  review_score:
                    type: number
                    description: Average review score for the user
          description: Individual user review score statistics
  /api/projects/{id}/users/{user_pk}/stats/agreement-groundtruth:
    get:
      operationId: api_projects_users_stats_agreement_groundtruth_retrieve
      description: Get ground truth agreement statistics for a specific user within
        a project.
      summary: Get individual user ground truth agreement
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Stats
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  agreement:
                    type: number
                    description: Ground truth agreement score for the user (0-1)
          description: Individual user ground truth agreement statistics
  /api/projects/{id}/validate/:
    post:
      operationId: api_projects_validate_label_config
      description: "\n        Determine whether the label configuration for a specific\
        \ project is valid.\n        "
      summary: Validate project label config
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfigRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLabelConfig'
          description: ''
  /api/projects/{project_pk}/members/{user_pk}/pauses/:
    get:
      operationId: api_projects_members_pauses_list
      description: Retrieve a list of all pauses.
      summary: List pauses
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Pauses
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pause'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - pauses
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_projects_members_pauses_create
      description: Create a new pause entry.
      summary: Create pause
      parameters:
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Pauses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PauseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PauseRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pause'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - pauses
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/projects/{project_pk}/members/{user_pk}/pauses/{id}/:
    get:
      operationId: api_projects_members_pauses_retrieve
      description: Retrieve a specific pause by ID.
      summary: Get pause
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Pauses
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pause'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - pauses
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    put:
      operationId: api_projects_members_pauses_update
      description: Overwrite a pause entry by ID.
      summary: Put pause
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Pauses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PauseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PauseRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pause'
          description: ''
      x-fern-audiences:
      - internal
    patch:
      operationId: api_projects_members_pauses_partial_update
      description: Partially update a pause entry by ID.
      summary: Update pause
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Pauses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPauseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPauseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPauseRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pause'
          description: ''
      x-fern-sdk-group-name:
      - projects
      - pauses
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_projects_members_pauses_destroy
      description: Delete a specific pause by ID.
      summary: Delete pause
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: path
        name: user_pk
        schema:
          type: integer
        required: true
      tags:
      - Pauses
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - projects
      - pauses
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/projects/{project_pk}/subset-tasks:
    get:
      operationId: api_projects_subset_tasks_list
      description: "\n        Provides list of tasks, based on project subset. Includes\
        \ predictions for tasks. For the 'HasGT' subset, accuracy metrics will also\
        \ be provided.\n        "
      summary: Get Project Subset Task List with Predictions and Accuracy details
      parameters:
      - in: query
        name: model_run
        schema:
          type: integer
        description: A unique ID of a ModelRun
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      - in: query
        name: project_subset
        schema:
          type: string
        description: The project subset to retrieve tasks for
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          description: Project subset task list
        '400':
          description: Bad request - missing parent_model
  /api/projects/{project_pk}/subsets:
    get:
      operationId: api_projects_subsets_retrieve
      description: "\n        Provides list of available subsets for a project along\
        \ with count of tasks in each subset\n        "
      summary: Get available subsets of a project (for prompts usage)
      parameters:
      - in: path
        name: project_pk
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/projects/counts/:
    get:
      operationId: api_projects_counts_list
      description: Returns a list of projects with their counts. For example, task_number
        which is the total task number in project
      summary: List project's counts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Projects
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLseProjectCountsList'
          description: ''
  /api/projects/roles/:
    get:
      operationId: api_projects_roles_list
      description: "\n        List project roles for requested IDs for the current\
        \ user\n        "
      summary: List project roles for current user
      parameters:
      - in: query
        name: ids
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Project Roles
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRole'
          description: ''
    post:
      operationId: api_projects_roles_create
      description: "\n        Create project role for user allowing the user the same\
        \ access level provided by organization role.\n        "
      summary: Create project role for user
      tags:
      - Project Roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRoleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRoleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRoleRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
          description: ''
  /api/projects/roles/{id}/:
    delete:
      operationId: api_projects_roles_destroy
      description: "\n        Remove project role for user allowing the user the same\
        \ access level provided by organization role.\n        "
      summary: Remove project role for user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project role.
        required: true
      tags:
      - Project Roles
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/projects/validate/:
    post:
      operationId: api_projects_validate_create
      description: Validate an arbitrary labeling configuration.
      summary: Validate label config
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectLabelConfigRequest'
        required: true
      security:
      - Token: []
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-fern-audiences:
      - internal
  /api/prompts/:
    get:
      operationId: api_prompts_list
      description: List all prompts.
      summary: List prompts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelInterfaceSerializerGET'
          description: ''
    post:
      operationId: api_prompts_create
      description: Create a new promt.
      summary: Create prompt
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInterfaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelInterfaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelInterfaceRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInterface'
          description: ''
  /api/prompts/{id}/:
    get:
      operationId: api_prompts_retrieve
      description: Retrieve a specific prompt.
      summary: Get prompt
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInterfaceSerializerGET'
          description: ''
    put:
      operationId: api_prompts_update
      description: Overwrite a specific prompt by ID.
      summary: Put prompt
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInterfaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelInterfaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelInterfaceRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInterface'
          description: ''
    patch:
      operationId: api_prompts_partial_update
      description: Update a specific prompt by ID.
      summary: Update prompt
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedModelInterfaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedModelInterfaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedModelInterfaceRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInterface'
          description: ''
    delete:
      operationId: api_prompts_destroy
      description: Delete a prompt by ID
      summary: Delete prompt
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/prompts/{id}/get-default-version-name:
    get:
      operationId: api_prompts_get_default_version_name_retrieve
      description: Get default prompt version name
      summary: Get default prompt version name
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/prompts/{prompt_id}/versions:
    get:
      operationId: api_prompts_versions_list
      description: List all third-party versions of a prompt.
      summary: List third-party prompt versions
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: query
        name: prompt_id
        schema:
          type: integer
        description: A unique integer value identifying the model ID to list versions
          for.
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdPartyModelVersion'
          description: ''
    post:
      operationId: api_prompts_versions_create
      description: Create a new third-party version of a prompt.
      summary: Create third-party prompt version
      parameters:
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyModelVersionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ThirdPartyModelVersionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ThirdPartyModelVersionRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyModelVersion'
          description: ''
  /api/prompts/{prompt_id}/versions/{id}:
    get:
      operationId: api_prompts_versions_retrieve
      description: Retrieve a specific third-party prompt of a model.
      summary: Get third-party prompt version
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyModelVersion'
          description: ''
    put:
      operationId: api_prompts_versions_update
      description: Overwrite a specific third-party prompt version by ID.
      summary: Put third-party prompt version
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyModelVersionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ThirdPartyModelVersionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ThirdPartyModelVersionRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyModelVersion'
          description: ''
    patch:
      operationId: api_prompts_versions_partial_update
      description: Update a specific third-party prompt version by ID.
      summary: Update third-party prompt version
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedThirdPartyModelVersionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedThirdPartyModelVersionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedThirdPartyModelVersionRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyModelVersion'
          description: ''
    delete:
      operationId: api_prompts_versions_destroy
      description: Delete a third-party prompt version by ID
      summary: Delete third-party prompt version
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/prompts/{prompt_id}/versions/{version_id}/cost-estimate:
    get:
      operationId: api_prompts_versions_cost_estimate_retrieve
      description: Get an estimate of the cost for making an inference run on the
        selected Prompt Version and Project/ProjectSubset
      summary: Get an estimate of the cost for making an inference run
      parameters:
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: path
        name: version_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRun'
          description: ''
  /api/prompts/{prompt_id}/versions/{version_id}/inference-runs:
    get:
      operationId: api_prompts_versions_inference_runs_list
      description: Get list of inference runs for the organization, query parameters
        project, model_version, project_subset can be added to the api to further
        narrow down results
      summary: Get list of inference runs
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: path
        name: version_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelRun'
          description: ''
    post:
      operationId: api_prompts_versions_inference_runs_create
      description: Create a new model run for given project_id, model_version_id and
        project_subset if it does not exist. If it exists, delete the record and create
        new
      summary: Create inference run object
      parameters:
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: path
        name: version_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRunRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelRunRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelRunRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRun'
          description: ''
  /api/prompts/{prompt_id}/versions/{version_id}/inference-runs/{inference_run_id}/cancel:
    post:
      operationId: api_prompts_versions_inference_runs_cancel_create
      description: Cancel the inference run for the given api
      summary: Cancel Inference Run API
      parameters:
      - in: path
        name: inference_run_id
        schema:
          type: integer
        required: true
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: path
        name: version_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '201':
          description: No response body
  /api/prompts/{prompt_id}/versions/{version_id}/refine:
    get:
      operationId: api_prompts_versions_refine_retrieve
      description: Get the status of a prompt refinement job.
      summary: Get prompt refinement status
      parameters:
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: path
        name: version_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_prompts_versions_refine_create
      description: Refine a prompt without using ground truth tasks
      summary: Refine a prompt without using ground truth tasks
      parameters:
      - in: path
        name: prompt_id
        schema:
          type: integer
        required: true
      - in: path
        name: version_id
        schema:
          type: integer
        required: true
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          description: No response body
  /api/prompts/compatible-projects:
    get:
      operationId: api_prompts_compatible_projects_list
      description: Retrieve a list of compatible project for prompt.
      summary: List projects compatible with prompt
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project_type
        schema:
          type: string
          enum:
          - NamedEntityRecognition
          - TextClassification
          default: TextClassification
        description: Skill to filter by
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllRolesProjectListList'
          description: ''
      x-fern-sdk-group-name: prompts
      x-fern-sdk-method-name: compatible-projects
      x-fern-audiences:
      - public
  /api/prompts/inference-runs:
    get:
      operationId: api_prompts_inference_runs_list
      description: Get list of inference runs for the organization, query parameters
        project, model_version, project_subset can be added to the api to further
        narrow down results
      summary: Get list of inference runs
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Prompts
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelRun'
          description: ''
    post:
      operationId: api_prompts_inference_runs_create
      description: Create a new model run for given project_id, model_version_id and
        project_subset if it does not exist. If it exists, delete the record and create
        new
      summary: Create inference run object
      tags:
      - Prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRunRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelRunRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelRunRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRun'
          description: ''
  /api/saml/settings:
    get:
      operationId: api_saml_settings_retrieve
      description: Retrieve SAML2 settings for the currently active organization.
      summary: Retrieve SAML2 Settings
      tags:
      - SSO
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlSettings'
          description: ''
    post:
      operationId: api_saml_settings_create
      description: Update SAML2 settings for the currently active organization.
      summary: Update SAML2 Settings
      tags:
      - SSO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlSettingsUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SamlSettingsUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SamlSettingsUpdateRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlSettingsUpdate'
          description: ''
  /api/scim/settings:
    get:
      operationId: api_scim_settings_retrieve
      description: Retrieve SCIM settings for the currently active organization.
      summary: Retrieve SCIM Settings
      tags:
      - SSO
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimSettings'
          description: ''
    post:
      operationId: api_scim_settings_create
      description: Update SCIM settings for the currently active organization.
      summary: Update SCIM Settings
      tags:
      - SSO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScimSettingsUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScimSettingsUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScimSettingsUpdateRequest'
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScimSettingsUpdate'
          description: ''
  /api/session-policy/:
    get:
      operationId: api_session_policy_retrieve
      description: Retrieve session timeout policy for the currently active organization.
      summary: Retrieve Session Policy
      tags:
      - Session Policy
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionTimeoutPolicy'
          description: ''
    patch:
      operationId: api_session_policy_partial_update
      description: Update session timeout policy for the currently active organization.
      summary: Update Session Policy
      tags:
      - Session Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSessionTimeoutPolicyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSessionTimeoutPolicyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSessionTimeoutPolicyRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionTimeoutPolicy'
          description: ''
  /api/storages/:
    get:
      operationId: api_storages_list
      description: Retrieve a list of the import storages of all types with their
        IDs.
      summary: List all import storages from the project
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Storage
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: {}
                  description: Unspecified response body
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - internal
  /api/storages/azure/:
    get:
      operationId: api_storages_azure_list
      description: Get list of all Azure import storage connections.
      summary: Get all import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureBlobImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_azure_create
      description: Create new Azure import storage
      summary: Create new storage
      tags:
      - 'Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for direct download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                container:
                  type: string
                  description: Azure blob container
                prefix:
                  type: string
                  description: Azure blob prefix name
                account_name:
                  type: string
                  description: Azure Blob account name
                account_key:
                  type: string
                  description: Azure Blob account key
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/azure/{id}:
    get:
      operationId: api_storages_azure_retrieve
      description: Get a specific Azure import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_azure_partial_update
      description: Update a specific Azure import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for direct download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                container:
                  type: string
                  description: Azure blob container
                prefix:
                  type: string
                  description: Azure blob prefix name
                account_name:
                  type: string
                  description: Azure Blob account name
                account_key:
                  type: string
                  description: Azure Blob account key
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_azure_destroy
      description: Delete a specific Azure import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/azure/{id}/sync:
    post:
      operationId: api_storages_azure_sync_create
      description: Sync tasks from an Azure import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Storage ID
        required: true
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/azure/validate:
    post:
      operationId: api_storages_azure_validate_create
      description: Validate a specific Azure import storage connection.
      summary: Validate import storage
      tags:
      - 'Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for direct download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                container:
                  type: string
                  description: Azure blob container
                prefix:
                  type: string
                  description: Azure blob prefix name
                account_name:
                  type: string
                  description: Azure Blob account name
                account_key:
                  type: string
                  description: Azure Blob account key
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - import_storage
      - azure
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/export:
    get:
      operationId: api_storages_export_list
      description: Retrieve a list of the export storages of all types with their
        IDs.
      summary: List all export storages from the project
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Storage
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: {}
                  description: Unspecified response body
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - internal
  /api/storages/export/azure:
    get:
      operationId: api_storages_export_azure_list
      description: Get a list of all Azure export storage connections.
      summary: Get all export storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AzureBlobExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_export_azure_create
      description: Create a new Azure export storage connection to store annotations.
      summary: Create export storage
      tags:
      - 'Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                container:
                  type: string
                  description: Azure blob container
                prefix:
                  type: string
                  description: Azure blob prefix name
                account_name:
                  type: string
                  description: Azure Blob account name
                account_key:
                  type: string
                  description: Azure Blob account key
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/export/azure/{id}:
    get:
      operationId: api_storages_export_azure_retrieve
      description: Get a specific Azure export storage connection.
      summary: Get export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_export_azure_partial_update
      description: Update a specific Azure export storage connection.
      summary: Update export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                container:
                  type: string
                  description: Azure blob container
                prefix:
                  type: string
                  description: Azure blob prefix name
                account_name:
                  type: string
                  description: Azure Blob account name
                account_key:
                  type: string
                  description: Azure Blob account key
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_export_azure_destroy
      description: Delete a specific Azure export storage connection.
      summary: Delete export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/export/azure/{id}/sync:
    post:
      operationId: api_storages_export_azure_sync_create
      description: Sync tasks from an Azure export storage connection.
      summary: Sync export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Azure'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureBlobExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/export/azure/validate:
    post:
      operationId: api_storages_export_azure_validate_create
      description: Validate a specific Azure export storage connection.
      summary: Validate export storage
      tags:
      - 'Storage: Azure'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                container:
                  type: string
                  description: Azure blob container
                prefix:
                  type: string
                  description: Azure blob prefix name
                account_name:
                  type: string
                  description: Azure Blob account name
                account_key:
                  type: string
                  description: Azure Blob account key
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - export_storage
      - azure
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/export/gcs:
    get:
      operationId: api_storages_export_gcs_list
      description: Get a list of all GCS export storage connections.
      summary: Get all export storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_export_gcs_create
      description: Create a new GCS export storage connection to store annotations.
      summary: Create export storage
      tags:
      - 'Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: GCS bucket name
                prefix:
                  type: string
                  description: GCS bucket prefix
                google_application_credentials:
                  type: string
                  description: The content of GOOGLE_APPLICATION_CREDENTIALS json
                    file. Check official Google Cloud Authentication documentation
                    for more details.
                google_project_id:
                  type: string
                  description: Google project ID
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/export/gcs/{id}:
    get:
      operationId: api_storages_export_gcs_retrieve
      description: Get a specific GCS export storage connection.
      summary: Get export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_export_gcs_partial_update
      description: Update a specific GCS export storage connection.
      summary: Update export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: GCS bucket name
                prefix:
                  type: string
                  description: GCS bucket prefix
                google_application_credentials:
                  type: string
                  description: The content of GOOGLE_APPLICATION_CREDENTIALS json
                    file. Check official Google Cloud Authentication documentation
                    for more details.
                google_project_id:
                  type: string
                  description: Google project ID
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_export_gcs_destroy
      description: Delete a specific GCS export storage connection.
      summary: Delete export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/export/gcs/{id}/sync:
    post:
      operationId: api_storages_export_gcs_sync_create
      description: Sync tasks from an GCS export storage connection.
      summary: Sync export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/export/gcs/validate:
    post:
      operationId: api_storages_export_gcs_validate_create
      description: Validate a specific GCS export storage connection.
      summary: Validate export storage
      tags:
      - 'Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: GCS bucket name
                prefix:
                  type: string
                  description: GCS bucket prefix
                google_application_credentials:
                  type: string
                  description: The content of GOOGLE_APPLICATION_CREDENTIALS json
                    file. Check official Google Cloud Authentication documentation
                    for more details.
                google_project_id:
                  type: string
                  description: Google project ID
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - export_storage
      - gcs
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/export/gcswif:
    get:
      operationId: api_storages_export_gcswif_list
      description: Get a list of all GCS export storage connections that were set
        up with WIF authentication.
      summary: Get all GCS WIF export storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Storage: GCS WIF'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSWIFExportStorage'
          description: ''
    post:
      operationId: api_storages_export_gcswif_create
      description: Create an GCS export storage connection with WIF authentication
        to store annotations.
      summary: Create GCS export storage with WIF authentication
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFExportStorage'
          description: ''
  /api/storages/export/gcswif/{id}:
    get:
      operationId: api_storages_export_gcswif_retrieve
      description: Get a specific GCS export storage connection that was set up with
        WIF authentication.
      summary: Get GCS WIF export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFExportStorage'
          description: ''
    patch:
      operationId: api_storages_export_gcswif_partial_update
      description: Update a specific GCS export storage connection that was set up
        with WIF authentication.
      summary: Update GCS WIF export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGCSWIFExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGCSWIFExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGCSWIFExportStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFExportStorage'
          description: ''
    delete:
      operationId: api_storages_export_gcswif_destroy
      description: Delete a specific GCS export storage connection that was set up
        with WIF authentication.
      summary: Delete GCS WIF export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/storages/export/gcswif/{id}/sync:
    post:
      operationId: api_storages_export_gcswif_sync_create
      description: Sync tasks from an GCS WIF export storage.
      summary: Sync GCS WIF export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFExportStorage'
          description: ''
  /api/storages/export/gcswif/validate:
    post:
      operationId: api_storages_export_gcswif_validate_create
      description: Validate a specific GCS export storage connection that was set
        up with WIF authentication.
      summary: Validate GCS WIF export storage
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSWIFExportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFExportStorage'
          description: ''
  /api/storages/export/localfiles:
    get:
      operationId: api_storages_export_localfiles_list
      description: Get a list of all local file export storage connections.
      summary: Get all export storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalFilesExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_export_localfiles_create
      description: Create a new local file export storage connection to store annotations.
      summary: Create export storage
      tags:
      - 'Storage: Local'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Path to local directory
                regex_filter:
                  type: string
                  description: Regex for filtering objects
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your directory contains images, you can use this option to
                    generate URLs for these images. If set to False, it will read
                    the content of the file and load it into Label Studio.
                  default: false
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/export/localfiles/{id}:
    get:
      operationId: api_storages_export_localfiles_retrieve
      description: Get a specific local file export storage connection.
      summary: Get export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_export_localfiles_partial_update
      description: Update a specific local file export storage connection.
      summary: Update export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Path to local directory
                regex_filter:
                  type: string
                  description: Regex for filtering objects
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your directory contains images, you can use this option to
                    generate URLs for these images. If set to False, it will read
                    the content of the file and load it into Label Studio.
                  default: false
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_export_localfiles_destroy
      description: Delete a specific local file export storage connection.
      summary: Delete export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/export/localfiles/{id}/sync:
    post:
      operationId: api_storages_export_localfiles_sync_create
      description: Sync tasks from a local file export storage connection.
      summary: Sync export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/export/localfiles/validate:
    post:
      operationId: api_storages_export_localfiles_validate_create
      description: Validate a specific local file export storage connection.
      summary: Validate export storage
      tags:
      - 'Storage: Local'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Path to local directory
                regex_filter:
                  type: string
                  description: Regex for filtering objects
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your directory contains images, you can use this option to
                    generate URLs for these images. If set to False, it will read
                    the content of the file and load it into Label Studio.
                  default: false
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - export_storage
      - local
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/export/redis:
    get:
      operationId: api_storages_export_redis_list
      description: Get a list of all Redis export storage connections.
      summary: Get all export storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RedisExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_export_redis_create
      description: Create a new Redis export storage connection to store annotations.
      summary: Create export storage
      tags:
      - 'Storage: Redis'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                db:
                  type: integer
                  description: Database ID of database to use
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Storage prefix (optional)
                host:
                  type: string
                  description: Server Host IP (optional)
                port:
                  type: string
                  description: Server Port (optional)
                password:
                  type: string
                  description: Server Password (optional)
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/export/redis/{id}:
    get:
      operationId: api_storages_export_redis_retrieve
      description: Get a specific Redis export storage connection.
      summary: Get export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_export_redis_partial_update
      description: Update a specific Redis export storage connection.
      summary: Update export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                db:
                  type: integer
                  description: Database ID of database to use
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Storage prefix (optional)
                host:
                  type: string
                  description: Server Host IP (optional)
                port:
                  type: string
                  description: Server Port (optional)
                password:
                  type: string
                  description: Server Password (optional)
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_export_redis_destroy
      description: Delete a specific Redis export storage connection.
      summary: Delete export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/export/redis/{id}/sync:
    post:
      operationId: api_storages_export_redis_sync_create
      description: Sync tasks from a Redis export storage connection.
      summary: Sync export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/export/redis/validate:
    post:
      operationId: api_storages_export_redis_validate_create
      description: Validate a specific Redis export storage connection.
      summary: Validate export storage
      tags:
      - 'Storage: Redis'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                db:
                  type: integer
                  description: Database ID of database to use
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Storage prefix (optional)
                host:
                  type: string
                  description: Server Host IP (optional)
                port:
                  type: string
                  description: Server Port (optional)
                password:
                  type: string
                  description: Server Password (optional)
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - export_storage
      - redis
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/export/s3:
    get:
      operationId: api_storages_export_s3_list
      description: Get a list of all S3 export storage connections.
      summary: Get all export storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/S3ExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_export_s3_create
      description: Create a new S3 export storage connection to store annotations.
      summary: Create export storage
      tags:
      - 'Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: S3 bucket name
                prefix:
                  type: string
                  description: S3 bucket prefix
                aws_access_key_id:
                  type: string
                  description: AWS_ACCESS_KEY_ID
                aws_secret_access_key:
                  type: string
                  description: AWS_SECRET_ACCESS_KEY
                aws_session_token:
                  type: string
                  description: AWS_SESSION_TOKEN
                aws_sse_kms_key_id:
                  type: string
                  description: AWS SSE KMS Key ID
                region_name:
                  type: string
                  description: AWS Region
                s3_endpoint:
                  type: string
                  description: S3 Endpoint
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/export/s3/{id}:
    get:
      operationId: api_storages_export_s3_retrieve
      description: Get a specific S3 export storage connection.
      summary: Get export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_export_s3_partial_update
      description: Update a specific S3 export storage connection.
      summary: Update export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: S3 bucket name
                prefix:
                  type: string
                  description: S3 bucket prefix
                aws_access_key_id:
                  type: string
                  description: AWS_ACCESS_KEY_ID
                aws_secret_access_key:
                  type: string
                  description: AWS_SECRET_ACCESS_KEY
                aws_session_token:
                  type: string
                  description: AWS_SESSION_TOKEN
                aws_sse_kms_key_id:
                  type: string
                  description: AWS SSE KMS Key ID
                region_name:
                  type: string
                  description: AWS Region
                s3_endpoint:
                  type: string
                  description: S3 Endpoint
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_export_s3_destroy
      description: Delete a specific S3 export storage connection.
      summary: Delete export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/export/s3/{id}/sync:
    post:
      operationId: api_storages_export_s3_sync_create
      description: Sync tasks from an S3 export storage connection.
      summary: Sync export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ExportStorage'
          description: ''
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/export/s3/validate:
    post:
      operationId: api_storages_export_s3_validate_create
      description: Validate a specific S3 export storage connection.
      summary: Validate export storage
      tags:
      - 'Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                can_delete_objects:
                  type: boolean
                  description: Deletion from storage enabled.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: S3 bucket name
                prefix:
                  type: string
                  description: S3 bucket prefix
                aws_access_key_id:
                  type: string
                  description: AWS_ACCESS_KEY_ID
                aws_secret_access_key:
                  type: string
                  description: AWS_SECRET_ACCESS_KEY
                aws_session_token:
                  type: string
                  description: AWS_SESSION_TOKEN
                aws_sse_kms_key_id:
                  type: string
                  description: AWS SSE KMS Key ID
                region_name:
                  type: string
                  description: AWS Region
                s3_endpoint:
                  type: string
                  description: S3 Endpoint
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - export_storage
      - s3
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/export/s3s:
    get:
      operationId: api_storages_export_s3s_list
      description: Get a list of all S3 export storage connections that were set up
        with IAM role access.
      summary: Get all export storage with IAM roles
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Storage: S3 Roles'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LseS3ExportStorage'
          description: ''
    post:
      operationId: api_storages_export_s3s_create
      description: Create an S3 export storage connection with IAM role access to
        store annotations.
      summary: Create export storage with IAM roles
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ExportStorage'
          description: ''
  /api/storages/export/s3s/{id}:
    get:
      operationId: api_storages_export_s3s_retrieve
      description: Get a specific S3 export storage connection that was set up with
        IAM role access.
      summary: Get IAM role export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ExportStorage'
          description: ''
    patch:
      operationId: api_storages_export_s3s_partial_update
      description: Update a specific S3 export storage connection that was set up
        with IAM role access.
      summary: Update IAM role export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLseS3ExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLseS3ExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLseS3ExportStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ExportStorage'
          description: ''
    delete:
      operationId: api_storages_export_s3s_destroy
      description: Delete a specific S3 export storage connection that was set up
        with IAM role access.
      summary: Delete IAM role export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/storages/export/s3s/{id}/sync:
    post:
      operationId: api_storages_export_s3s_sync_create
      description: Sync tasks from an S3 export storage.
      summary: Sync IAM role export storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ExportStorage'
          description: ''
  /api/storages/export/s3s/validate:
    post:
      operationId: api_storages_export_s3s_validate_create
      description: Validate a specific S3 export storage connection that was set up
        with IAM role access.
      summary: Validate IAM role export storage
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseS3ExportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ExportStorage'
          description: ''
  /api/storages/export/types:
    get:
      operationId: api_storages_export_types_retrieve
      description: Retrieve a list of the export storages types.
      summary: List all export storages types
      tags:
      - Storage
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    title:
                      type: string
          description: List of export storage types
      x-fern-sdk-group-name:
      - export_storage
      x-fern-sdk-method-name: list_types
      x-fern-audiences:
      - public
  /api/storages/gcs/:
    get:
      operationId: api_storages_gcs_list
      description: Get a list of all GCS import storage connections.
      summary: Get all import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_gcs_create
      description: Create a new GCS import storage connection.
      summary: Create import storage
      tags:
      - 'Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for direct download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: GCS bucket name
                prefix:
                  type: string
                  description: GCS bucket prefix
                google_application_credentials:
                  type: string
                  description: The content of GOOGLE_APPLICATION_CREDENTIALS json
                    file. Check official Google Cloud Authentication documentation
                    for more details.
                google_project_id:
                  type: string
                  description: Google project ID
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/gcs/{id}:
    get:
      operationId: api_storages_gcs_retrieve
      description: Get a specific GCS import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_gcs_partial_update
      description: Update a specific GCS import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for direct download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: GCS bucket name
                prefix:
                  type: string
                  description: GCS bucket prefix
                google_application_credentials:
                  type: string
                  description: The content of GOOGLE_APPLICATION_CREDENTIALS json
                    file. Check official Google Cloud Authentication documentation
                    for more details.
                google_project_id:
                  type: string
                  description: Google project ID
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_gcs_destroy
      description: Delete a specific GCS import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/gcs/{id}/sync:
    post:
      operationId: api_storages_gcs_sync_create
      description: Sync tasks from a GCS import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Storage ID
        required: true
      tags:
      - 'Storage: GCS'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/gcs/validate:
    post:
      operationId: api_storages_gcs_validate_create
      description: Validate a specific GCS import storage connection.
      summary: Validate import storage
      tags:
      - 'Storage: GCS'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for direct download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: GCS bucket name
                prefix:
                  type: string
                  description: GCS bucket prefix
                google_application_credentials:
                  type: string
                  description: The content of GOOGLE_APPLICATION_CREDENTIALS json
                    file. Check official Google Cloud Authentication documentation
                    for more details.
                google_project_id:
                  type: string
                  description: Google project ID
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - import_storage
      - gcs
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/gcswif/:
    get:
      operationId: api_storages_gcswif_list
      description: Get list of all GCS import storage connections set up with WIF
        authentication.
      summary: Get GCS WIF import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Storage: GCS WIF'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GCSWIFImportStorage'
          description: ''
    post:
      operationId: api_storages_gcswif_create
      description: Create GCS import storage with WIF.
      summary: Create GCS import storage with WIF
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFImportStorage'
          description: ''
  /api/storages/gcswif/{id}:
    get:
      operationId: api_storages_gcswif_retrieve
      description: Get a specific GCS import storage connection that was set up with
        WIF.
      summary: Get GCS WIF import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFImportStorage'
          description: ''
    patch:
      operationId: api_storages_gcswif_partial_update
      description: Update a specific GCS import storage connection that was set up
        with WIF authentication.
      summary: Update GCS WIF import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGCSWIFImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGCSWIFImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGCSWIFImportStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFImportStorage'
          description: ''
    delete:
      operationId: api_storages_gcswif_destroy
      description: Delete a specific GCS import storage connection that was set up
        with WIF authentication.
      summary: Delete GCS WIF import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/storages/gcswif/{id}/sync:
    post:
      operationId: api_storages_gcswif_sync_create
      description: Sync tasks from an GCS import storage connection that was set up
        with WIF authentication.
      summary: Sync GCS WIF import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFImportStorage'
          description: ''
  /api/storages/gcswif/validate:
    post:
      operationId: api_storages_gcswif_validate_create
      description: Validate a specific GCS import storage connection that was set
        up with WIF authentication.
      summary: Validate GCS WIF import storage
      tags:
      - 'Storage: GCS WIF'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GCSWIFImportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCSWIFImportStorage'
          description: ''
  /api/storages/localfiles/:
    get:
      operationId: api_storages_localfiles_list
      description: Get a list of all local file import storage connections.
      summary: Get all import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalFilesImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_localfiles_create
      description: Create a new local file import storage connection.
      summary: Create import storage
      tags:
      - 'Storage: Local'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Path to local directory
                regex_filter:
                  type: string
                  description: Regex for filtering objects
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your directory contains images, you can use this option to
                    generate URLs for these images. If set to False, it will read
                    the content of the file and load it into Label Studio.
                  default: false
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/localfiles/{id}:
    get:
      operationId: api_storages_localfiles_retrieve
      description: Get a specific local file import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_localfiles_partial_update
      description: Update a specific local file import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Path to local directory
                regex_filter:
                  type: string
                  description: Regex for filtering objects
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your directory contains images, you can use this option to
                    generate URLs for these images. If set to False, it will read
                    the content of the file and load it into Label Studio.
                  default: false
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_localfiles_destroy
      description: Delete a specific local file import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/localfiles/{id}/sync:
    post:
      operationId: api_storages_localfiles_sync_create
      description: Sync tasks from a local file import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Storage ID
        required: true
      tags:
      - 'Storage: Local'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalFilesImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/localfiles/validate:
    post:
      operationId: api_storages_localfiles_validate_create
      description: Validate a specific local file import storage connection.
      summary: Validate import storage
      tags:
      - 'Storage: Local'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Path to local directory
                regex_filter:
                  type: string
                  description: Regex for filtering objects
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your directory contains images, you can use this option to
                    generate URLs for these images. If set to False, it will read
                    the content of the file and load it into Label Studio.
                  default: false
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - import_storage
      - local
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/redis/:
    get:
      operationId: api_storages_redis_list
      description: Get a list of all Redis import storage connections.
      summary: Get all import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RedisImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_redis_create
      description: Create a new Redis import storage connection.
      summary: Create import storage
      tags:
      - 'Storage: Redis'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Storage prefix (optional)
                host:
                  type: string
                  description: Server Host IP (optional)
                port:
                  type: string
                  description: Server Port (optional)
                password:
                  type: string
                  description: Server Password (optional)
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/redis/{id}:
    get:
      operationId: api_storages_redis_retrieve
      description: Get a specific Redis import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_redis_partial_update
      description: Update a specific Redis import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Storage prefix (optional)
                host:
                  type: string
                  description: Server Host IP (optional)
                port:
                  type: string
                  description: Server Port (optional)
                password:
                  type: string
                  description: Server Password (optional)
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_redis_destroy
      description: Delete a specific Redis import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/redis/{id}/sync:
    post:
      operationId: api_storages_redis_sync_create
      description: Sync tasks from a Redis import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Storage ID
        required: true
      tags:
      - 'Storage: Redis'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/redis/validate:
    post:
      operationId: api_storages_redis_validate_create
      description: Validate a specific Redis import storage connection.
      summary: Validate import storage
      tags:
      - 'Storage: Redis'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                path:
                  type: string
                  description: Storage prefix (optional)
                host:
                  type: string
                  description: Server Host IP (optional)
                port:
                  type: string
                  description: Server Port (optional)
                password:
                  type: string
                  description: Server Password (optional)
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - import_storage
      - redis
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/s3/:
    get:
      operationId: api_storages_s3_list
      description: Get a list of all S3 import storage connections.
      summary: List S3 import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/S3ImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_storages_s3_create
      description: Create new S3 import storage
      summary: Create new S3 storage
      tags:
      - 'Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                recursive_scan:
                  type: boolean
                  description: Scan recursively
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: S3 bucket name
                prefix:
                  type: string
                  description: S3 bucket prefix
                aws_access_key_id:
                  type: string
                  description: AWS_ACCESS_KEY_ID
                aws_secret_access_key:
                  type: string
                  description: AWS_SECRET_ACCESS_KEY
                aws_session_token:
                  type: string
                  description: AWS_SESSION_TOKEN
                aws_sse_kms_key_id:
                  type: string
                  description: AWS SSE KMS Key ID
                region_name:
                  type: string
                  description: AWS Region
                s3_endpoint:
                  type: string
                  description: S3 Endpoint
              required: []
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/storages/s3/{id}:
    get:
      operationId: api_storages_s3_retrieve
      description: Get a specific S3 import storage connection.
      summary: Get import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_storages_s3_partial_update
      description: Update a specific S3 import storage connection.
      summary: Update import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                recursive_scan:
                  type: boolean
                  description: Scan recursively
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: S3 bucket name
                prefix:
                  type: string
                  description: S3 bucket prefix
                aws_access_key_id:
                  type: string
                  description: AWS_ACCESS_KEY_ID
                aws_secret_access_key:
                  type: string
                  description: AWS_SECRET_ACCESS_KEY
                aws_session_token:
                  type: string
                  description: AWS_SESSION_TOKEN
                aws_sse_kms_key_id:
                  type: string
                  description: AWS SSE KMS Key ID
                region_name:
                  type: string
                  description: AWS Region
                s3_endpoint:
                  type: string
                  description: S3 Endpoint
              required: []
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_storages_s3_destroy
      description: Delete a specific S3 import storage connection.
      summary: Delete import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/storages/s3/{id}/sync:
    post:
      operationId: api_storages_s3_sync_create
      description: Sync tasks from an S3 import storage connection.
      summary: Sync import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Storage ID
        required: true
      tags:
      - 'Storage: S3'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ImportStorage'
          description: ''
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: sync
      x-fern-audiences:
      - public
  /api/storages/s3/validate:
    post:
      operationId: api_storages_s3_validate_create
      description: Validate a specific S3 import storage connection.
      summary: Validate import storage
      tags:
      - 'Storage: S3'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Storage ID. If set, storage with specified ID will
                    be updated
                regex_filter:
                  type: string
                  description: Cloud storage regex for filtering objects. You must
                    specify it otherwise no objects will be imported.
                use_blob_urls:
                  type: boolean
                  description: Interpret objects as BLOBs and generate URLs. For example,
                    if your bucket contains images, you can use this option to generate
                    URLs for these images. If set to False, it will read the content
                    of the file and load it into Label Studio.
                  default: false
                presign:
                  type: boolean
                  description: Presign URLs for download
                  default: true
                presign_ttl:
                  type: integer
                  description: Presign TTL in minutes
                  default: 1
                recursive_scan:
                  type: boolean
                  description: Scan recursively
                title:
                  type: string
                  description: Storage title
                  maxLength: 2048
                description:
                  type: string
                  description: Storage description
                project:
                  type: integer
                  description: Project ID
                bucket:
                  type: string
                  description: S3 bucket name
                prefix:
                  type: string
                  description: S3 bucket prefix
                aws_access_key_id:
                  type: string
                  description: AWS_ACCESS_KEY_ID
                aws_secret_access_key:
                  type: string
                  description: AWS_SECRET_ACCESS_KEY
                aws_session_token:
                  type: string
                  description: AWS_SESSION_TOKEN
                aws_sse_kms_key_id:
                  type: string
                  description: AWS SSE KMS Key ID
                region_name:
                  type: string
                  description: AWS Region
                s3_endpoint:
                  type: string
                  description: S3 Endpoint
              required: []
      security:
      - Token: []
      responses:
        '200':
          description: Validation successful
      x-fern-sdk-group-name:
      - import_storage
      - s3
      x-fern-sdk-method-name: validate
      x-fern-audiences:
      - public
  /api/storages/s3s/:
    get:
      operationId: api_storages_s3s_list
      description: Get list of all S3 import storage connections set up with IAM role
        access.
      summary: Get IAM role import storage
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - 'Storage: S3 Roles'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LseS3ImportStorage'
          description: ''
    post:
      operationId: api_storages_s3s_create
      description: Create S3 import storage with IAM role access.
      summary: Create import storage with IAM roles
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ImportStorage'
          description: ''
  /api/storages/s3s/{id}:
    get:
      operationId: api_storages_s3s_retrieve
      description: Get a specific S3 import storage connection that was set up with
        IAM role access.
      summary: Get IAM role import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ImportStorage'
          description: ''
    patch:
      operationId: api_storages_s3s_partial_update
      description: Update a specific S3 import storage connection that was set up
        with IAM role access.
      summary: Update IAM role import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLseS3ImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLseS3ImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLseS3ImportStorageRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ImportStorage'
          description: ''
    delete:
      operationId: api_storages_s3s_destroy
      description: Delete a specific S3 import storage connection that was set up
        with IAM role access.
      summary: Delete IAM role import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /api/storages/s3s/{id}/sync:
    post:
      operationId: api_storages_s3s_sync_create
      description: Sync tasks from an S3 import storage connection that was set up
        with IAM role access.
      summary: Sync IAM role import storage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ImportStorage'
          description: ''
  /api/storages/s3s/validate:
    post:
      operationId: api_storages_s3s_validate_create
      description: Validate a specific S3 import storage connection that was set up
        with IAM role access.
      summary: Validate IAM role import storage
      tags:
      - 'Storage: S3 Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseS3ImportStorageRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseS3ImportStorage'
          description: ''
  /api/storages/types:
    get:
      operationId: api_storages_types_retrieve
      description: Retrieve a list of the import storages types.
      summary: List all import storages types
      tags:
      - Storage
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    title:
                      type: string
          description: List of import storage types
      x-fern-sdk-group-name:
      - import_storage
      x-fern-sdk-method-name: list_types
      x-fern-audiences:
      - public
  /api/tasks/:
    get:
      operationId: api_tasks_list
      description: |-
        Retrieve a paginated list of tasks. The response format varies based on the user's role in the organization:
        - **Admin/Owner**: Full task details with all annotations, reviews, and metadata
        - **Reviewer**: Task details optimized for review workflow
        - **Annotator**: Task details filtered to show only user's own annotations and assignments
      summary: List tasks with role-based serialization
      parameters:
      - in: query
        name: fields
        schema:
          type: string
          enum:
          - all
          - task_only
        description: Set to "all" if you want to include annotations and predictions
          in the response. Defaults to task_only
      - in: query
        name: include
        schema:
          type: string
        description: Specify which fields to include in the response
      - in: query
        name: only_annotated
        schema:
          type: boolean
        description: Filter to show only tasks that have annotations
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: integer
        description: Project ID
      - in: query
        name: query
        schema:
          type: string
        description: |-
          Additional query to filter tasks. It must be JSON encoded string of dict containing one of the following parameters: {"filters": ..., "selectedItems": ..., "ordering": ...}. Check Data Manager > Create View > see data field for more details about filters, selectedItems and ordering.

          filters: dict with "conjunction" string ("or" or "and") and list of filters in "items" array. Each filter is a dictionary with keys: "filter", "operator", "type", "value". Read more about available filters
          Example: {"conjunction": "or", "items": [{"filter": "filter:tasks:completed_at", "operator": "greater", "type": "Datetime", "value": "2021-01-01T00:00:00.000Z"}]}
          selectedItems: dictionary with keys: "all", "included", "excluded". If "all" is false, "included" must be used. If "all" is true, "excluded" must be used.
          Examples: {"all": false, "included": [1, 2, 3]} or {"all": true, "excluded": [4, 5]}
          ordering: list of fields to order by. Currently, ordering is supported by only one parameter.
          Example: ["completed_at"]
      - in: query
        name: resolve_uri
        schema:
          type: boolean
        description: Resolve task data URIs using Cloud Storage
      - in: query
        name: review
        schema:
          type: boolean
        description: Get tasks for review
      - in: query
        name: selectedItems
        schema:
          type: string
        description: JSON string of selected task IDs for review workflow
      - in: query
        name: view
        schema:
          type: integer
        description: View ID
      tags:
      - Tasks
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleBasedTaskList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request - invalid parameters
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: Unauthorized - authentication required
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Forbidden - insufficient permissions
          description: ''
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
      x-fern-pagination:
        offset: $request.page
        results: $response.tasks
    post:
      operationId: api_tasks_create
      description: Create a new task
      summary: Create a new task
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LseTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LseTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LseTaskRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseTask'
          description: ''
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/tasks/{id}/:
    get:
      operationId: api_tasks_retrieve
      description: Get task data, metadata, annotations and other attributes for a
        specific labeling task by task ID.
      summary: Get task
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Task ID
        required: true
      tags:
      - Tasks
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBasedTask'
          description: ''
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_tasks_partial_update
      description: Update the attributes of an existing labeling task.
      summary: Update task
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Task ID
        required: true
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLseTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLseTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLseTaskRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBasedTask'
          description: ''
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_tasks_destroy
      description: Delete a task in Label Studio. This action cannot be undone!
      summary: Delete task
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Task ID
        required: true
      tags:
      - Tasks
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBasedTask'
          description: ''
      x-fern-sdk-group-name: tasks
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/tasks/{id}/annotations/:
    get:
      operationId: api_tasks_annotations_list
      description: List all annotations for a task.
      summary: Get all task annotations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Task ID
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Annotations
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
              examples:
                Response:
                  value:
                  - - id: 1
                      result:
                      - original_width: 1920
                        original_height: 1080
                        image_rotation: 0
                        from_name: bboxes
                        to_name: image
                        type: rectanglelabels
                        value:
                          x: 20
                          y: 30
                          width: 50
                          height: 60
                          rotation: 0
                          values:
                            rectanglelabels:
                            - Person
                      task: 1
                      project: 1
                      completed_by: 1
                      updated_by: 1
                      was_cancelled: false
                      ground_truth: false
                      lead_time: 10
                  summary: response
          description: Annotation
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_tasks_annotations_create
      description: "\n        Add annotations to a task like an annotator does. The\
        \ content of the result field depends on your \n        labeling configuration.\
        \ For example, send the following data as part of your POST \n        request\
        \ to send an empty annotation with the ID of the user who completed the task:\n\
        \        \n        ```json\n        {\n        \"result\": {},\n        \"\
        was_cancelled\": true,\n        \"ground_truth\": true,\n        \"lead_time\"\
        : 0,\n        \"task\": 0\n        \"completed_by\": 123\n        } \n   \
        \     ```\n        "
      summary: Create annotation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Task ID
        required: true
      tags:
      - Annotations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: array
                  items:
                    type: object
                  description: Labeling result in JSON format. Read more about the
                    format in [the Label Studio documentation.](https://labelstud.io/guide/task_format)
                  example:
                  - original_width: 1920
                    original_height: 1080
                    image_rotation: 0
                    from_name: bboxes
                    to_name: image
                    type: rectanglelabels
                    value:
                      x: 20
                      y: 30
                      width: 50
                      height: 60
                      rotation: 0
                      values:
                        rectanglelabels:
                        - Person
                task:
                  type: integer
                  description: Corresponding task for this annotation
                project:
                  type: integer
                  description: Project ID for this annotation
                completed_by:
                  type: integer
                  description: User ID of the person who created this annotation
                updated_by:
                  type: integer
                  description: Last user who updated this annotation
                was_cancelled:
                  type: boolean
                  description: User skipped the task
                ground_truth:
                  type: boolean
                  description: This annotation is a Ground Truth
                lead_time:
                  type: number
                  description: How much time it took to annotate the task (in seconds)
                  example: 100.5
              required: []
              example:
                result:
                - original_width: 1920
                  original_height: 1080
                  image_rotation: 0
                  from_name: bboxes
                  to_name: image
                  type: rectanglelabels
                  value:
                    x: 20
                    y: 30
                    width: 50
                    height: 60
                    rotation: 0
                    values:
                      rectanglelabels:
                      - Person
                was_cancelled: false
                ground_truth: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
              examples:
                Response:
                  value:
                    id: 1
                    result:
                    - original_width: 1920
                      original_height: 1080
                      image_rotation: 0
                      from_name: bboxes
                      to_name: image
                      type: rectanglelabels
                      value:
                        x: 20
                        y: 30
                        width: 50
                        height: 60
                        rotation: 0
                        values:
                          rectanglelabels:
                          - Person
                    task: 1
                    project: 1
                    completed_by: 1
                    updated_by: 1
                    was_cancelled: false
                    ground_truth: false
                    lead_time: 10
                  summary: response
          description: Created annotation
      x-fern-sdk-group-name: annotations
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/token/:
    get:
      operationId: api_token_list
      description: List all API tokens for the current user.
      summary: List API tokens
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - JWT
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LSEAPITokenList'
          description: ''
      x-fern-sdk-group-name: tokens
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_token_create
      description: Create a new API token for the current user.
      summary: Create API token
      tags:
      - JWT
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LSEAPITokenCreate'
          description: ''
      x-fern-sdk-group-name: tokens
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/token/blacklist/:
    post:
      operationId: api_token_blacklist_create
      description: Adds a JWT refresh token to the blacklist, preventing it from being
        used to obtain new access tokens.
      summary: Blacklist a JWT refresh token
      tags:
      - JWT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LSAPITokenBlacklistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LSAPITokenBlacklistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LSAPITokenBlacklistRequest'
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-fern-sdk-group-name: tokens
      x-fern-sdk-method-name: blacklist
      x-fern-audiences:
      - public
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: Get a new access token, using a refresh token.
      summary: Refresh JWT token
      tags:
      - JWT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshResponse'
          description: ''
      x-fern-sdk-group-name: tokens
      x-fern-sdk-method-name: refresh
      x-fern-audiences:
      - public
  /api/token/rotate/:
    post:
      operationId: api_token_rotate_create
      description: Creates a new JWT refresh token and blacklists the current one.
      summary: Rotate JWT refresh token
      tags:
      - JWT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LSAPITokenRotateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LSAPITokenRotateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LSAPITokenRotateRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRotateResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-fern-sdk-group-name: tokens
      x-fern-sdk-method-name: rotate
      x-fern-audiences:
      - public
  /api/users/:
    get:
      operationId: api_users_list
      description: List the users that exist on the Label Studio server.
      summary: List users
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Users
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LseUserAPI'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_users_create
      description: Create a user in Label Studio.
      summary: Create new user
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: User ID
                first_name:
                  type: string
                  description: First name of the user
                last_name:
                  type: string
                  description: Last name of the user
                username:
                  type: string
                  description: Username of the user
                email:
                  type: string
                  description: Email of the user
                avatar:
                  type: string
                  description: Avatar URL of the user
                initials:
                  type: string
                  description: Initials of the user
                phone:
                  type: string
                  description: Phone number of the user
                allow_newsletters:
                  type: boolean
                  description: Whether the user allows newsletters
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseUser'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: Get info about a specific Label Studio user, based on the user
        ID.
      summary: Get user info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: User ID
        required: true
      tags:
      - Users
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseUser'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    patch:
      operationId: api_users_partial_update
      description: "\n        Update details for a specific user, such as their name\
        \ or contact information, in Label Studio.\n        "
      summary: Update user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: User ID
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: User ID
                first_name:
                  type: string
                  description: First name of the user
                last_name:
                  type: string
                  description: Last name of the user
                username:
                  type: string
                  description: Username of the user
                email:
                  type: string
                  description: Email of the user
                avatar:
                  type: string
                  description: Avatar URL of the user
                initials:
                  type: string
                  description: Initials of the user
                phone:
                  type: string
                  description: Phone number of the user
                allow_newsletters:
                  type: boolean
                  description: Whether the user allows newsletters
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LseUser'
          description: ''
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_users_destroy
      description: |-
        Delete a specific Label Studio user. Only available in community edition.

        <Warning>Use caution when deleting a user, as this can cause issues such as breaking the "Annotated by" filter or leaving orphaned records.</Warning>
      summary: Delete user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: User ID
        required: true
      tags:
      - Users
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: users
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/version/:
    get:
      operationId: api_version_retrieve
      description: Get version information about the Label Studio instance.
      summary: Get version information
      tags:
      - Versions
      security:
      - Token: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: ''
      x-fern-sdk-group-name: versions
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
  /api/webhooks/:
    get:
      operationId: api_webhooks_list
      description: List all webhooks set up for your organization.
      summary: List all webhooks
      parameters:
      - in: query
        name: project
        schema:
          type: string
        description: Project ID
      tags:
      - Webhooks
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
          description: ''
      x-fern-sdk-group-name: webhooks
      x-fern-sdk-method-name: list
      x-fern-audiences:
      - public
    post:
      operationId: api_webhooks_create
      description: Create a webhook for your organization.
      summary: Create a webhook
      tags:
      - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: ''
      x-fern-sdk-group-name: webhooks
      x-fern-sdk-method-name: create
      x-fern-audiences:
      - public
  /api/webhooks/{id}/:
    get:
      operationId: api_webhooks_retrieve
      summary: Get webhook info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: ''
      x-fern-sdk-group-name: webhooks
      x-fern-sdk-method-name: get
      x-fern-audiences:
      - public
    put:
      operationId: api_webhooks_update
      summary: Save webhook info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSerializerForUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebhookSerializerForUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookSerializerForUpdateRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSerializerForUpdate'
          description: ''
      x-fern-audiences:
      - internal
    patch:
      operationId: api_webhooks_partial_update
      summary: Update webhook info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebhookSerializerForUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWebhookSerializerForUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWebhookSerializerForUpdateRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSerializerForUpdate'
          description: ''
      x-fern-sdk-group-name: webhooks
      x-fern-sdk-method-name: update
      x-fern-audiences:
      - public
    delete:
      operationId: api_webhooks_destroy
      summary: Delete webhook info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - Token: []
      responses:
        '204':
          description: No response body
      x-fern-sdk-group-name: webhooks
      x-fern-sdk-method-name: delete
      x-fern-audiences:
      - public
  /api/webhooks/info/:
    get:
      operationId: api_webhooks_info_retrieve
      description: Get descriptions of all available webhook actions to set up webhooks.
      summary: Get all webhook actions
      parameters:
      - in: query
        name: organization-only
        schema:
          type: boolean
        description: organization-only or not
      tags:
      - Webhooks
      security:
      - Token: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-fern-sdk-group-name: webhooks
      x-fern-sdk-method-name: info
      x-fern-audiences:
      - public
  /api/workspaces/:
    get:
      operationId: api_workspaces_list
      description: Get all workspaces for specified organization.
      summary: Get all workspaces
      parameters:
      - in: query
        name: is_personal
        schema:
          type: boolean
        description: Workspace is a personal user workspace.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Workspaces
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
          description: ''
    post:
      operationId: api_workspaces_create
      description: Create a workspace.
      summary: Create workspace
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      security:
      - Token: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
  /api/workspaces/{id}/:
    get:
      operationId: api_workspaces_retrieve
      description: Retrieve details for a specific workspace by ID.
      summary: Get workspace
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    patch:
      operationId: api_workspaces_partial_update
      description: Update settings for a specific workspace by ID.
      summary: Update workspace
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
  /api/workspaces/{id}/memberships/:
    get:
      operationId: api_workspaces_memberships_retrieve
      description: Get a list of all members in a specific workspace.
      summary: List workspace members
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMemberCreate'
          description: ''
    post:
      operationId: api_workspaces_memberships_create
      description: Add a new workspace member by user ID.
      summary: Add workspace member
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceMemberCreateRequest'
        required: true
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMemberCreate'
          description: ''
  /api/workspaces/{id}/projects/:
    get:
      operationId: api_workspaces_projects_retrieve
      description: Retrieve a list of all projects in a specific workspace.
      summary: List workspace projects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: api_workspaces_projects_create
      description: Create a project in a specific workspace.
      summary: Create workspace project
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      security:
      - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: api_workspaces_projects_destroy
      description: Delete projects from a specific workspace.
      summary: Remove workspace projects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Workspaces
      security:
      - Token: []
      responses:
        '204':
          description: No response body
  /data/upload/{filename}:
    get:
      operationId: data_upload_retrieve
      description: Download a specific uploaded file.
      summary: Download file
      parameters:
      - in: path
        name: filename
        schema:
          type: string
        required: true
      tags:
      - Import
      security:
      - Token: []
      responses:
        '200':
          description: File downloaded successfully
      x-fern-sdk-group-name:
      - projects
      - file_uploads
      x-fern-sdk-method-name: download
      x-fern-audiences:
      - public
components:
  schemas:
    ActionEnum:
      enum:
      - prediction
      - propagated_annotation
      - imported
      - submitted
      - updated
      - skipped
      - accepted
      - rejected
      - fixed_and_accepted
      - deleted_review
      type: string
      description: |-
        * `prediction` - Created from prediction
        * `propagated_annotation` - Created from another annotation
        * `imported` - Imported
        * `submitted` - Submitted
        * `updated` - Updated
        * `skipped` - Skipped
        * `accepted` - Accepted
        * `rejected` - Rejected
        * `fixed_and_accepted` - Fixed and accepted
        * `deleted_review` - Deleted review
    ActionsEnum:
      enum:
      - PROJECT_CREATED
      - PROJECT_UPDATED
      - PROJECT_DELETED
      - TASKS_CREATED
      - TASKS_DELETED
      - ANNOTATION_CREATED
      - ANNOTATIONS_CREATED
      - ANNOTATION_UPDATED
      - ANNOTATIONS_DELETED
      - LABEL_LINK_CREATED
      - LABEL_LINK_UPDATED
      - LABEL_LINK_DELETED
      - REVIEW_CREATED
      - REVIEW_UPDATED
      - REVIEWS_DELETED
      type: string
      description: |-
        * `PROJECT_CREATED` - PROJECT_CREATED
        * `PROJECT_UPDATED` - PROJECT_UPDATED
        * `PROJECT_DELETED` - PROJECT_DELETED
        * `TASKS_CREATED` - TASKS_CREATED
        * `TASKS_DELETED` - TASKS_DELETED
        * `ANNOTATION_CREATED` - ANNOTATION_CREATED
        * `ANNOTATIONS_CREATED` - ANNOTATIONS_CREATED
        * `ANNOTATION_UPDATED` - ANNOTATION_UPDATED
        * `ANNOTATIONS_DELETED` - ANNOTATIONS_DELETED
        * `LABEL_LINK_CREATED` - LABEL_LINK_CREATED
        * `LABEL_LINK_UPDATED` - LABEL_LINK_UPDATED
        * `LABEL_LINK_DELETED` - LABEL_LINK_DELETED
        * `REVIEW_CREATED` - REVIEW_CREATED
        * `REVIEW_UPDATED` - REVIEW_UPDATED
        * `REVIEWS_DELETED` - REVIEWS_DELETED
    ActivityLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        email:
          type: string
          maxLength: 256
        user_agent:
          type: string
          maxLength: 1024
        http_referer:
          type: string
          maxLength: 1024
        request_url:
          type: string
          title: Url
          maxLength: 256
        request_method:
          type: string
          title: Http method
          maxLength: 10
        response_code:
          type: string
          maxLength: 3
        datetime:
          type: string
          format: date-time
          readOnly: true
        ip_address:
          type: string
          nullable: true
          title: IP
        extra_data:
          nullable: true
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Duration of response generation in ms
        project_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Project id if request has it
        workspace_owner_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Owner id of workspace where action performed
        organization_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Active organization id
          description: Organization id
      required:
      - datetime
      - email
      - id
      - request_method
      - request_url
      - response_code
      - user_id
    ActivityLogResponse:
      type: object
      description: Serializer for ActivityLogAPI response.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLog'
        recordsTotal:
          type: integer
        recordsFiltered:
          type: integer
      required:
      - data
      - recordsFiltered
      - recordsTotal
    AllRolesProjectList:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        workspace:
          type: string
          readOnly: true
        skipped_annotations_number:
          type: string
          readOnly: true
        annotator_evaluation_minimum_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          default: '95.00'
        config_has_control_tags:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for labeling
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        show_ground_truth_first:
          type: boolean
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        require_comment_on_skip:
          type: boolean
          default: false
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        pause_on_failed_annotator_evaluation:
          type: boolean
          nullable: true
          default: false
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        task_number:
          type: integer
          readOnly: true
          description: Total task number in project
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        custom_script:
          type: string
        queue_left:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        show_overlap_first:
          type: boolean
        review_total_tasks:
          type: string
          readOnly: true
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        useful_annotation_number:
          type: string
          readOnly: true
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        ready:
          type: string
          readOnly: true
        annotation_limit_count:
          type: integer
          minimum: 1
          nullable: true
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        duplication_done:
          type: boolean
          default: false
        annotator_evaluation_minimum_tasks:
          type: integer
          minimum: 0
          nullable: true
          default: 10
        workspace_title:
          type: string
          readOnly: true
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        total_annotations_number:
          type: string
          readOnly: true
        num_tasks_with_annotations:
          type: string
          readOnly: true
        comment_classification_config:
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: Project owner
        ground_truth_number:
          type: integer
          readOnly: true
          description: Honeypot annotation number in project
        blueprints:
          type: array
          items:
            $ref: '#/components/schemas/BlueprintList'
          readOnly: true
        queue_done:
          type: string
          readOnly: true
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        annotation_limit_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        reviewed_number:
          type: string
          readOnly: true
        color:
          type: string
          nullable: true
          maxLength: 16
        assignment_settings:
          $ref: '#/components/schemas/AssignmentSettings'
        review_settings:
          $ref: '#/components/schemas/ReviewSettings'
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        finished_task_number:
          type: integer
          readOnly: true
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        parsed_label_config:
          readOnly: true
          description: JSON-formatted labeling configuration
        data_types:
          readOnly: true
          nullable: true
        reviewer_queue_total:
          type: string
          readOnly: true
        config_suitable_for_bulk_annotation:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for bulk annotation
        members_count:
          type: string
          readOnly: true
        organization:
          type: integer
          nullable: true
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        allow_stream:
          type: string
          readOnly: true
        prompts:
          type: string
          readOnly: true
        total_predictions_number:
          type: integer
          readOnly: true
        custom_task_lock_ttl:
          type: integer
          maximum: 86400
          minimum: 1
          nullable: true
          description: TTL in seconds for task reservations, on new and existing tasks
        start_training_on_annotation_update:
          type: boolean
          readOnly: true
          description: Start model training after any annotations are submitted or
            updated
        members:
          type: string
          readOnly: true
        rejected:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          description: Project description
        queue_total:
          type: string
          readOnly: true
      required:
      - allow_stream
      - assignment_settings
      - blueprints
      - config_has_control_tags
      - config_suitable_for_bulk_annotation
      - created_at
      - data_types
      - finished_task_number
      - ground_truth_number
      - id
      - members
      - members_count
      - num_tasks_with_annotations
      - parsed_label_config
      - prompts
      - queue_done
      - queue_left
      - queue_total
      - ready
      - rejected
      - review_settings
      - review_total_tasks
      - reviewed_number
      - reviewer_queue_total
      - skipped_annotations_number
      - start_training_on_annotation_update
      - task_number
      - total_annotations_number
      - total_predictions_number
      - useful_annotation_number
      - workspace
      - workspace_title
    AnnotatedEnum:
      enum:
      - only
      - exclude
      description: |-
        * `only` - only
        * `exclude` - exclude
        * `None` - None
    Annotation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        result:
          type: array
          title: Annotation result list
          description: List of annotation results for the task
          items:
            type: object
            title: Annotation result items (regions)
            description: List of annotated regions for the task
        created_username:
          type: string
          readOnly: true
          default: ''
          description: Username string
        created_ago:
          type: string
          readOnly: true
          default: ''
          description: Time delta from creation time
        completed_by:
          type: integer
        was_cancelled:
          type: boolean
          description: User skipped the task
        ground_truth:
          type: boolean
          description: This annotation is a Ground Truth (ground_truth)
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last updated time
        draft_created_at:
          type: string
          format: date-time
          nullable: true
          description: Draft creation time
        lead_time:
          type: number
          format: double
          nullable: true
          description: How much time it took to annotate the task
        import_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Original annotation ID that was at the import step or NULL
            if this annotation wasn't imported
        last_action:
          nullable: true
          description: |-
            Action which was performed in the last annotation history item

            * `prediction` - Created from prediction
            * `propagated_annotation` - Created from another annotation
            * `imported` - Imported
            * `submitted` - Submitted
            * `updated` - Updated
            * `skipped` - Skipped
            * `accepted` - Accepted
            * `rejected` - Rejected
            * `fixed_and_accepted` - Fixed and accepted
            * `deleted_review` - Deleted review
          oneOf:
          - $ref: '#/components/schemas/LastActionEnum'
          - $ref: '#/components/schemas/NullEnum'
        bulk_created:
          type: boolean
          nullable: true
          description: Annotation was created in bulk mode
        task:
          type: integer
          nullable: true
          description: Corresponding task for this annotation
        project:
          type: integer
          nullable: true
          description: Project ID for this annotation
        updated_by:
          type: integer
          nullable: true
          description: Last user who updated this annotation
        parent_prediction:
          type: integer
          nullable: true
          description: Points to the prediction from which this annotation was created
        parent_annotation:
          type: integer
          nullable: true
          description: Points to the parent annotation from which this annotation
            was created
        last_created_by:
          type: integer
          nullable: true
          description: User who created the last annotation history item
      required:
      - created_ago
      - created_at
      - created_username
      - id
      - updated_at
    AnnotationBulkRequest:
      type: object
      properties:
        result:
          type: array
          title: Annotation result list
          description: List of annotation results for the task
          items:
            type: object
            title: Annotation result items (regions)
            description: List of annotated regions for the task
        completed_by:
          type: integer
        unique_id:
          type: string
          writeOnly: true
          minLength: 1
        tasks:
          type: array
          items:
            type: integer
        was_cancelled:
          type: boolean
          description: User skipped the task
        ground_truth:
          type: boolean
          description: This annotation is a Ground Truth (ground_truth)
        draft_created_at:
          type: string
          format: date-time
          nullable: true
          description: Draft creation time
        lead_time:
          type: number
          format: double
          nullable: true
          description: How much time it took to annotate the task
        import_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Original annotation ID that was at the import step or NULL
            if this annotation wasn't imported
        last_action:
          nullable: true
          description: |-
            Action which was performed in the last annotation history item

            * `prediction` - Created from prediction
            * `propagated_annotation` - Created from another annotation
            * `imported` - Imported
            * `submitted` - Submitted
            * `updated` - Updated
            * `skipped` - Skipped
            * `accepted` - Accepted
            * `rejected` - Rejected
            * `fixed_and_accepted` - Fixed and accepted
            * `deleted_review` - Deleted review
          oneOf:
          - $ref: '#/components/schemas/LastActionEnum'
          - $ref: '#/components/schemas/NullEnum'
        bulk_created:
          type: boolean
          nullable: true
          description: Annotation was created in bulk mode
        task:
          type: integer
          nullable: true
          description: Corresponding task for this annotation
        project:
          type: integer
          nullable: true
          description: Project ID for this annotation
        updated_by:
          type: integer
          nullable: true
          description: Last user who updated this annotation
        parent_prediction:
          type: integer
          nullable: true
          description: Points to the prediction from which this annotation was created
        parent_annotation:
          type: integer
          nullable: true
          description: Points to the parent annotation from which this annotation
            was created
        last_created_by:
          type: integer
          nullable: true
          description: User who created the last annotation history item
    AnnotationHistory:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
          readOnly: true
          nullable: true
        organization_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Organization for this annotation history
        project_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Project for this annotation history
        annotation_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Corresponding annotation for this historical annotation
        draft_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Corresponding draft for this historical annotation
        review_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: AnnotationReview ID, using with review field
        task_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Task id
        result:
          nullable: true
          description: Labeling result
        lead_time:
          type: number
          format: double
          nullable: true
          description: How much time it took to annotate the task
        action:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ActionEnum'
          - $ref: '#/components/schemas/NullEnum'
        started_at:
          type: string
          format: date-time
          nullable: true
          description: The time that a user started working on this revision of the
            annotation
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Created by user id
        comment_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Comment id sent with result
      required:
      - comment
      - created_at
      - id
    AnnotationRequest:
      type: object
      properties:
        result:
          type: array
          title: Annotation result list
          description: List of annotation results for the task
          items:
            type: object
            title: Annotation result items (regions)
            description: List of annotated regions for the task
        completed_by:
          type: integer
        unique_id:
          type: string
          writeOnly: true
          minLength: 1
        was_cancelled:
          type: boolean
          description: User skipped the task
        ground_truth:
          type: boolean
          description: This annotation is a Ground Truth (ground_truth)
        draft_created_at:
          type: string
          format: date-time
          nullable: true
          description: Draft creation time
        lead_time:
          type: number
          format: double
          nullable: true
          description: How much time it took to annotate the task
        import_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Original annotation ID that was at the import step or NULL
            if this annotation wasn't imported
        last_action:
          nullable: true
          description: |-
            Action which was performed in the last annotation history item

            * `prediction` - Created from prediction
            * `propagated_annotation` - Created from another annotation
            * `imported` - Imported
            * `submitted` - Submitted
            * `updated` - Updated
            * `skipped` - Skipped
            * `accepted` - Accepted
            * `rejected` - Rejected
            * `fixed_and_accepted` - Fixed and accepted
            * `deleted_review` - Deleted review
          oneOf:
          - $ref: '#/components/schemas/LastActionEnum'
          - $ref: '#/components/schemas/NullEnum'
        bulk_created:
          type: boolean
          nullable: true
          description: Annotation was created in bulk mode
        task:
          type: integer
          nullable: true
          description: Corresponding task for this annotation
        project:
          type: integer
          nullable: true
          description: Project ID for this annotation
        updated_by:
          type: integer
          nullable: true
          description: Last user who updated this annotation
        parent_prediction:
          type: integer
          nullable: true
          description: Points to the prediction from which this annotation was created
        parent_annotation:
          type: integer
          nullable: true
          description: Points to the parent annotation from which this annotation
            was created
        last_created_by:
          type: integer
          nullable: true
          description: User who created the last annotation history item
    AnnotationReview:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          description: User who made this review
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        accepted:
          type: boolean
          description: Accepted or rejected (if false) flag
        result:
          nullable: true
        annotation:
          type: integer
          description: Corresponding annotation
        fixed_annotation_history:
          type: integer
          readOnly: true
          nullable: true
          description: Fixed annotation history item by the reviewer
        previous_annotation_history:
          type: integer
          readOnly: true
          nullable: true
          description: Previous annotation history item by the annotator
        last_annotation_history:
          type: integer
          nullable: true
        remove_from_queue:
          type: boolean
          nullable: true
        started_at:
          type: string
          format: date-time
          nullable: true
      required:
      - annotation
      - created_at
      - created_by
      - fixed_annotation_history
      - id
      - previous_annotation_history
    AnnotationReviewRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        accepted:
          type: boolean
          description: Accepted or rejected (if false) flag
        result:
          nullable: true
        annotation:
          type: integer
          description: Corresponding annotation
        last_annotation_history:
          type: integer
          nullable: true
        comment:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
        remove_from_queue:
          type: boolean
          nullable: true
        started_at:
          type: string
          format: date-time
          nullable: true
      required:
      - annotation
    AssignmentSettings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        label_stream_task_distribution:
          nullable: true
          description: |-
            Modes for distributing tasks to annotators

            * `auto_distribution` - Label Stream distributes tasks automatically to annotators
            * `assigned_only` - Label Stream shows tasks only to assigned users
          oneOf:
          - $ref: '#/components/schemas/LabelStreamTaskDistributionEnum'
          - $ref: '#/components/schemas/NullEnum'
        project:
          type: integer
          nullable: true
      required:
      - id
    AssignmentSettingsRequest:
      type: object
      properties:
        label_stream_task_distribution:
          nullable: true
          description: |-
            Modes for distributing tasks to annotators

            * `auto_distribution` - Label Stream distributes tasks automatically to annotators
            * `assigned_only` - Label Stream shows tasks only to assigned users
          oneOf:
          - $ref: '#/components/schemas/LabelStreamTaskDistributionEnum'
          - $ref: '#/components/schemas/NullEnum'
        project:
          type: integer
          nullable: true
    AssociatedProject:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
      required:
      - id
    AuthMethodEnum:
      enum:
      - NONE
      - BASIC_AUTH
      type: string
      description: |-
        * `NONE` - None
        * `BASIC_AUTH` - Basic Auth
    AzureBlobExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: azure
        synchronizable:
          type: boolean
          default: true
        container:
          type: string
          nullable: true
          description: Azure blob container
        prefix:
          type: string
          nullable: true
          description: Azure blob prefix name
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          type: string
          nullable: true
          description: Azure Blob account name
        account_key:
          type: string
          nullable: true
          description: Azure Blob account key
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    AzureBlobImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: azure
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        container:
          type: string
          nullable: true
          description: Azure blob container
        prefix:
          type: string
          nullable: true
          description: Azure blob prefix name
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          type: string
          nullable: true
          description: Azure Blob account name
        account_key:
          type: string
          nullable: true
          description: Azure Blob account key
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    AzureDatasetStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: azure
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        container:
          type: string
          nullable: true
          description: Azure blob container
        prefix:
          type: string
          nullable: true
          description: Azure blob prefix name
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          type: string
          nullable: true
          description: Azure Blob account name
        account_key:
          type: string
          nullable: true
          description: Azure Blob account key
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        job_id:
          type: string
          readOnly: true
          nullable: true
          title: The Job ID for the GCP Dataproc job that will import the records
            of this dataset into the vector db
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
      required:
      - created_at
      - dataset
      - id
      - job_id
      - type
    AzureDatasetStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        container:
          type: string
          nullable: true
          description: Azure blob container
        prefix:
          type: string
          nullable: true
          description: Azure blob prefix name
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          type: string
          nullable: true
          description: Azure Blob account name
        account_key:
          type: string
          nullable: true
          description: Azure Blob account key
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
      required:
      - dataset
    BlankEnum:
      enum:
      - ''
    Blueprint:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        share_id:
          type: string
          readOnly: true
        short_url:
          type: string
          readOnly: true
        project:
          type: integer
          readOnly: true
        created_by:
          type: integer
          nullable: true
        title:
          type: string
          nullable: true
          description: Blueprint name. Must be between 3 and 50 characters long.
          maxLength: 50
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Labeling configuration in XML format
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - project
      - share_id
      - short_url
      - updated_at
    BlueprintList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        share_id:
          type: string
          readOnly: true
        short_url:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          description: Blueprint name. Must be between 3 and 50 characters long.
          maxLength: 50
        description:
          type: string
          nullable: true
          description: Project description
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - share_id
      - short_url
    BlueprintRequest:
      type: object
      properties:
        created_by:
          type: integer
          nullable: true
        title:
          type: string
          nullable: true
          description: Blueprint name. Must be between 3 and 50 characters long.
          maxLength: 50
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Labeling configuration in XML format
    BudgetResetPeriodEnum:
      enum:
      - Monthly
      - Yearly
      type: string
      description: |-
        * `Monthly` - Monthly
        * `Yearly` - Yearly
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        region_ref:
          nullable: true
          description: Set if this comment is related to a specific part of the annotation.
            Normally contains region ID and control name.
        classifications:
          nullable: true
          description: Classifications applied by a reviewer or annotator
        text:
          type: string
          nullable: true
          description: Reviewer or annotator comment
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last updated time
        is_resolved:
          type: boolean
          description: True if the comment is resolved
        resolved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Resolving time
        project:
          type: integer
          readOnly: true
          nullable: true
        task:
          type: integer
          readOnly: true
          nullable: true
        draft:
          type: integer
          nullable: true
        annotation:
          type: integer
          nullable: true
        created_by:
          type: integer
          readOnly: true
          description: User who made this comment
      required:
      - created_at
      - created_by
      - id
      - project
      - resolved_at
      - task
      - updated_at
    CommentRequest:
      type: object
      properties:
        region_ref:
          nullable: true
          description: Set if this comment is related to a specific part of the annotation.
            Normally contains region ID and control name.
        classifications:
          nullable: true
          description: Classifications applied by a reviewer or annotator
        text:
          type: string
          nullable: true
          description: Reviewer or annotator comment
        is_resolved:
          type: boolean
          description: True if the comment is resolved
        draft:
          type: integer
          nullable: true
        annotation:
          type: integer
          nullable: true
    ConvertedFormat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/Status7bfEnum'
        export_type:
          type: string
          maxLength: 64
        traceback:
          type: string
          nullable: true
          description: Traceback report in case of errors
      required:
      - export_type
      - id
    ConvertedFormatRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status7bfEnum'
        export_type:
          type: string
          minLength: 1
          maxLength: 64
        traceback:
          type: string
          nullable: true
          description: Traceback report in case of errors
      required:
      - export_type
    CustomScriptsEditableByEnum:
      enum:
      - AD
      - MA
      type: string
      description: |-
        * `AD` - Administrator
        * `MA` - Manager
    Dataset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: User who created Dataset
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last updated time
        title:
          type: string
          description: Dataset title
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Dataset description
        columns:
          nullable: true
          description: All data columns found in Dataset tasks
        total_entities:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: The number of entities in the dataset
        vector_db_dataset_name:
          type: string
          description: Dataset name for weaviate schema
          maxLength: 37
        organization:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - title
      - updated_at
    DatasetMember:
      type: object
      properties:
        user:
          type: integer
      required:
      - user
    DatasetMemberRequest:
      type: object
      properties:
        user:
          type: integer
      required:
      - user
    DatasetRequest:
      type: object
      properties:
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: User who created Dataset
        title:
          type: string
          minLength: 1
          description: Dataset title
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Dataset description
        columns:
          nullable: true
          description: All data columns found in Dataset tasks
        total_entities:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: The number of entities in the dataset
        vector_db_dataset_name:
          type: string
          minLength: 1
          description: Dataset name for weaviate schema
          maxLength: 37
        organization:
          type: integer
          nullable: true
      required:
      - title
    DatasetView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filter_group:
          $ref: '#/components/schemas/FilterGroup'
        data:
          nullable: true
          description: Custom view data
        ordering:
          nullable: true
          description: Ordering parameters
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Position of the tab, starting at the left in data manager and
            increasing as the tabs go left to right
        selected_items:
          nullable: true
          description: Selected items
        user:
          type: integer
          nullable: true
          description: User who made this view
        dataset:
          type: integer
          description: Dataset ID
      required:
      - dataset
      - id
    DatasetViewRequest:
      type: object
      properties:
        filter_group:
          $ref: '#/components/schemas/FilterGroupRequest'
        data:
          nullable: true
          description: Custom view data
        ordering:
          nullable: true
          description: Ordering parameters
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Position of the tab, starting at the left in data manager and
            increasing as the tabs go left to right
        selected_items:
          nullable: true
          description: Selected items
        user:
          type: integer
          nullable: true
          description: User who made this view
        dataset:
          type: integer
          description: Dataset ID
      required:
      - dataset
    DefaultRole:
      type: object
      properties:
        organization:
          type: integer
          description: A unique integer value identifying this organization.
        default_role:
          allOf:
          - $ref: '#/components/schemas/DefaultRoleEnum'
          description: |-
            Default membership role for invited users

            * `OW` - Owner
            * `AD` - Administrator
            * `MA` - Manager
            * `RE` - Reviewer
            * `AN` - Annotator
            * `DI` - Deactivated
            * `NO` - Not Activated
        external_id:
          type: string
          nullable: true
          description: External ID to uniquely identify this organization
        embed_domains:
          nullable: true
          description: 'List of objects: {"domain": "example.com"}. Used for CSP header
            on /embed routes.'
        embed_settings:
          nullable: true
          description: Embed settings for this organization
        extra_data_on_activity_logs:
          type: boolean
        custom_scripts_enabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to enabled custom scripts for this organization.
            Can only be enabled if no organization members are active members of any
            other organizations; otherwise an error will be raised. If this occurs,
            contact the LEAP team for assistance with enabling custom scripts.
        custom_scripts_editable_by:
          nullable: true
          description: |-
            Set the minimum user role that can edit custom scripts in the UI.

            * `AD` - Administrator
            * `MA` - Manager
          oneOf:
          - $ref: '#/components/schemas/CustomScriptsEditableByEnum'
          - $ref: '#/components/schemas/NullEnum'
        annotator_reviewer_firewall_enabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to restrict data sharing between annotators
            and reviewers in the label stream, review stream, and notifications (which
            will be disabled). In these settings, information about annotator and
            reviewer identity is suppressed in the UI.
        read_only_quick_view_enabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to prevent creating or editing annotations
            in quick view.
        label_stream_navigation_disabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to disable the label stream navigation
            for this organization. This will prevent users from going back in the
            label stream to view previous labels.
      required:
      - organization
    DefaultRoleEnum:
      enum:
      - OW
      - AD
      - MA
      - RE
      - AN
      - DI
      - 'NO'
      type: string
      description: |-
        * `OW` - Owner
        * `AD` - Administrator
        * `MA` - Manager
        * `RE` - Reviewer
        * `AN` - Annotator
        * `DI` - Deactivated
        * `NO` - Not Activated
    EditionEnum:
      enum:
      - Community
      - Enterprise
      type: string
      description: |-
        * `Community` - Community
        * `Enterprise` - Enterprise
    Export:
      type: object
      properties:
        title:
          type: string
          maxLength: 2048
        id:
          type: integer
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserSimple'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        finished_at:
          type: string
          format: date-time
          nullable: true
          description: Complete or fail time
        status:
          allOf:
          - $ref: '#/components/schemas/Status7bfEnum'
          title: Export status
        md5:
          type: string
          title: Md5 of file
          maxLength: 128
        counters:
          title: Exporting meta data
        converted_formats:
          type: array
          items:
            $ref: '#/components/schemas/ConvertedFormat'
      required:
      - created_at
      - id
    ExportConvertRequest:
      type: object
      properties:
        export_type:
          type: string
          minLength: 1
          description: Export file format.
        download_resources:
          type: boolean
          description: Download resources in converter.
      required:
      - export_type
    FileUpload:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
      required:
      - file
      - id
    Filter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: To keep filter order
        column:
          type: string
          description: Field name
          maxLength: 1024
        type:
          type: string
          description: Field type
          maxLength: 1024
        operator:
          type: string
          description: Filter operator
          maxLength: 1024
        value:
          nullable: true
          description: Filter value
      required:
      - column
      - id
      - operator
      - type
    FilterGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        conjunction:
          type: string
          description: Type of conjunction
          maxLength: 1024
      required:
      - conjunction
      - filters
      - id
    FilterGroupRequest:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterRequest'
        conjunction:
          type: string
          minLength: 1
          description: Type of conjunction
          maxLength: 1024
      required:
      - conjunction
      - filters
    FilterRequest:
      type: object
      properties:
        index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: To keep filter order
        column:
          type: string
          minLength: 1
          description: Field name
          maxLength: 1024
        type:
          type: string
          minLength: 1
          description: Field type
          maxLength: 1024
        operator:
          type: string
          minLength: 1
          description: Filter operator
          maxLength: 1024
        value:
          nullable: true
          description: Filter value
      required:
      - column
      - operator
      - type
    FinishedEnum:
      enum:
      - only
      - exclude
      description: |-
        * `only` - only
        * `exclude` - exclude
        * `None` - None
    GCSDatasetStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        job_id:
          type: string
          readOnly: true
          nullable: true
          title: The Job ID for the GCP Dataproc job that will import the records
            of this dataset into the vector db
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
      required:
      - created_at
      - dataset
      - id
      - job_id
      - type
    GCSDatasetStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
      required:
      - dataset
    GCSExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    GCSImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: gcs
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    GCSWIFExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: gcswif
        synchronizable:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        google_project_number:
          type: string
          nullable: true
          description: Google project number
        google_wif_pool_id:
          type: string
          nullable: true
          description: Google WIF pool ID
        google_wif_provider_id:
          type: string
          nullable: true
          title: Google wif provider
          description: Google WIF provider ID
        google_service_account_email:
          type: string
          nullable: true
          description: Google service account email
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    GCSWIFExportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        google_project_number:
          type: string
          nullable: true
          description: Google project number
        google_wif_pool_id:
          type: string
          nullable: true
          description: Google WIF pool ID
        google_wif_provider_id:
          type: string
          nullable: true
          title: Google wif provider
          description: Google WIF provider ID
        google_service_account_email:
          type: string
          nullable: true
          description: Google service account email
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - project
    GCSWIFImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: gcswif
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        google_project_number:
          type: string
          nullable: true
          description: Google project number
        google_wif_pool_id:
          type: string
          nullable: true
          description: Google WIF pool ID
        google_wif_provider_id:
          type: string
          nullable: true
          title: Google wif provider
          description: Google WIF provider ID
        google_service_account_email:
          type: string
          nullable: true
          description: Google service account email
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    GCSWIFImportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        google_project_number:
          type: string
          nullable: true
          description: Google project number
        google_wif_pool_id:
          type: string
          nullable: true
          description: Google WIF pool ID
        google_wif_provider_id:
          type: string
          nullable: true
          title: Google wif provider
          description: Google WIF provider ID
        google_service_account_email:
          type: string
          nullable: true
          description: Google service account email
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - project
    Hotkeys:
      type: object
      properties:
        custom_hotkeys:
          type: object
          additionalProperties: {}
      required:
      - custom_hotkeys
    ImportApiRequest:
      type: object
      description: Tasks serializer for Import API (TaskBulkCreateAPI)
      properties:
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/AnnotationRequest'
          default: []
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/PredictionRequest'
          default: []
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          nullable: true
          description: Meta is user imported (uploaded) data and can be useful as
            input for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
        overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of distinct annotators that processed the current task
        inner_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Internal task ID in the project, starts with 1
        total_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total annotations for the current task except cancelled
            annotations
        cancelled_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total cancelled annotations for the current task
        total_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total predictions for the current task
        comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the last comment was updated
        updated_by:
          type: integer
          nullable: true
          description: Last annotator or reviewer who updated this task
        file_upload:
          type: integer
          nullable: true
          description: Uploaded file used as data source for this task
        comment_authors:
          type: array
          items:
            type: integer
          description: Users who wrote comments
      required:
      - data
    LSAPITokenBlacklistRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    LSAPITokenRotateRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    LSEAPITokenCreate:
      type: object
      properties:
        token:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
        expires_at:
          type: string
          readOnly: true
      required:
      - created_at
      - expires_at
      - token
    LSEAPITokenList:
      type: object
      properties:
        token:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
        expires_at:
          type: string
          readOnly: true
      required:
      - created_at
      - expires_at
      - token
    LSEJWTSettings:
      type: object
      properties:
        api_tokens_enabled:
          type: boolean
          title: JWT API tokens enabled
          description: Enable JWT API token authentication for this organization
        legacy_api_tokens_enabled:
          type: boolean
          description: Enable legacy API token authentication for this organization
        api_token_ttl_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: JWT API token time to live (days)
          description: Number of days before JWT API tokens expire
    LSEJWTSettingsRequest:
      type: object
      properties:
        api_tokens_enabled:
          type: boolean
          title: JWT API tokens enabled
          description: Enable JWT API token authentication for this organization
        legacy_api_tokens_enabled:
          type: boolean
          description: Enable legacy API token authentication for this organization
        api_token_ttl_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: JWT API token time to live (days)
          description: Number of days before JWT API tokens expire
    Label:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        links:
          type: array
          items:
            type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time of label creation
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Time of label modification
        value:
          description: Label value
        title:
          type: string
          description: Label title
          maxLength: 2048
        description:
          type: string
          nullable: true
          description: Label description
        approved:
          type: boolean
          description: Status of label
        created_by:
          type: integer
          description: User who made this label
        approved_by:
          type: integer
          nullable: true
          description: User who approved this label
        organization:
          type: integer
        projects:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - links
      - organization
      - projects
      - title
      - updated_at
      - value
    LabelCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        organization:
          type: integer
          readOnly: true
        project:
          type: integer
        from_name:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time of label creation
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Time of label modification
        value:
          description: Label value
        title:
          type: string
          description: Label title
          maxLength: 2048
        description:
          type: string
          nullable: true
          description: Label description
        approved:
          type: boolean
          description: Status of label
        approved_by:
          type: integer
          nullable: true
          description: User who approved this label
        projects:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_at
      - created_by
      - from_name
      - id
      - organization
      - project
      - projects
      - title
      - updated_at
      - value
    LabelCreateRequest:
      type: object
      properties:
        project:
          type: integer
        from_name:
          type: string
          minLength: 1
        value:
          description: Label value
        title:
          type: string
          minLength: 1
          description: Label title
          maxLength: 2048
        description:
          type: string
          nullable: true
          description: Label description
        approved:
          type: boolean
          description: Status of label
        approved_by:
          type: integer
          nullable: true
          description: User who approved this label
      required:
      - from_name
      - project
      - title
      - value
    LabelLink:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        annotations_count:
          type: integer
          readOnly: true
        from_name:
          type: string
          title: Tag name
          description: Tag name
          maxLength: 2048
        project:
          type: integer
        label:
          type: integer
      required:
      - annotations_count
      - from_name
      - id
      - label
      - project
    LabelLinkRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        from_name:
          type: string
          minLength: 1
          title: Tag name
          description: Tag name
          maxLength: 2048
        project:
          type: integer
        label:
          type: integer
      required:
      - from_name
      - label
      - project
    LabelStreamTaskDistributionEnum:
      enum:
      - auto_distribution
      - assigned_only
      type: string
      description: |-
        * `auto_distribution` - Label Stream distributes tasks automatically to annotators
        * `assigned_only` - Label Stream shows tasks only to assigned users
    LastActionEnum:
      enum:
      - prediction
      - propagated_annotation
      - imported
      - submitted
      - updated
      - skipped
      - accepted
      - rejected
      - fixed_and_accepted
      - deleted_review
      type: string
      description: |-
        * `prediction` - Created from prediction
        * `propagated_annotation` - Created from another annotation
        * `imported` - Imported
        * `submitted` - Submitted
        * `updated` - Updated
        * `skipped` - Skipped
        * `accepted` - Accepted
        * `rejected` - Rejected
        * `fixed_and_accepted` - Fixed and accepted
        * `deleted_review` - Deleted review
    LocalFilesExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: localfiles
        synchronizable:
          type: boolean
          default: true
        path:
          type: string
          nullable: true
          description: Local path
        regex_filter:
          type: string
          nullable: true
          description: Regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    LocalFilesImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: localfiles
        synchronizable:
          type: boolean
          default: true
        path:
          type: string
          nullable: true
          description: Local path
        regex_filter:
          type: string
          nullable: true
          description: Regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    LseAnnotationFilterOptions:
      type: object
      properties:
        usual:
          type: boolean
          nullable: true
          default: true
          description: Include not skipped and not ground truth annotations
        ground_truth:
          type: boolean
          nullable: true
          description: Include ground truth annotations
        skipped:
          type: boolean
          nullable: true
          description: Include skipped annotations
        reviewed:
          nullable: true
          description: |-
            `only` - include all tasks with at least one not reviewed annotation<br>`exclude` - exclude with at least one not reviewed annotation

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/ReviewedEnum'
          - $ref: '#/components/schemas/NullEnum'
    LseAnnotationFilterOptionsRequest:
      type: object
      properties:
        usual:
          type: boolean
          nullable: true
          default: true
          description: Include not skipped and not ground truth annotations
        ground_truth:
          type: boolean
          nullable: true
          description: Include ground truth annotations
        skipped:
          type: boolean
          nullable: true
          description: Include skipped annotations
        reviewed:
          nullable: true
          description: |-
            `only` - include all tasks with at least one not reviewed annotation<br>`exclude` - exclude with at least one not reviewed annotation

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/ReviewedEnum'
          - $ref: '#/components/schemas/NullEnum'
    LseExportCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 2048
        id:
          type: integer
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserSimple'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        finished_at:
          type: string
          format: date-time
          nullable: true
          description: Complete or fail time
        status:
          allOf:
          - $ref: '#/components/schemas/Status7bfEnum'
          title: Export status
        md5:
          type: string
          title: Md5 of file
          maxLength: 128
        counters:
          title: Exporting meta data
        converted_formats:
          type: array
          items:
            $ref: '#/components/schemas/ConvertedFormat'
        task_filter_options:
          $ref: '#/components/schemas/LseTaskFilterOptions'
        annotation_filter_options:
          $ref: '#/components/schemas/LseAnnotationFilterOptions'
        serialization_options:
          $ref: '#/components/schemas/SerializationOptions'
      required:
      - created_at
      - id
    LseExportCreateRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 2048
        created_by:
          $ref: '#/components/schemas/UserSimpleRequest'
        finished_at:
          type: string
          format: date-time
          nullable: true
          description: Complete or fail time
        status:
          allOf:
          - $ref: '#/components/schemas/Status7bfEnum'
          title: Export status
        md5:
          type: string
          minLength: 1
          title: Md5 of file
          maxLength: 128
        counters:
          title: Exporting meta data
        converted_formats:
          type: array
          items:
            $ref: '#/components/schemas/ConvertedFormatRequest'
        task_filter_options:
          $ref: '#/components/schemas/LseTaskFilterOptionsRequest'
        annotation_filter_options:
          $ref: '#/components/schemas/LseAnnotationFilterOptionsRequest'
        serialization_options:
          $ref: '#/components/schemas/SerializationOptionsRequest'
    LseFields:
      type: object
      properties:
        invite_expired:
          type: string
          readOnly: true
        invite_expired_at:
          type: string
          readOnly: true
        invited_at:
          type: string
          format: date-time
          nullable: true
        invite_activated:
          type: boolean
          nullable: true
        trial_company:
          type: string
          nullable: true
          maxLength: 1000
        trial_role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TrialRoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        trial_models_in_production:
          type: string
          nullable: true
          maxLength: 1000
        trial_experience_labeling:
          type: string
          nullable: true
          maxLength: 1000
        trial_license_enterprise:
          type: boolean
          nullable: true
        social_auth_finished:
          type: boolean
          nullable: true
          description: Is user finished social authentication
        invited_by:
          type: integer
          nullable: true
        onboarding_state:
          nullable: true
          description: |-
            The current stage of user onboarding

            * `not_started` - Not Started
            * `signup` - Signup
            * `trial_signup` - Trial Signup
            * `first_tutorial` - First Tutorial
            * `in_app_guidance` - In App Guidance
            * `complete` - Complete
          oneOf:
          - $ref: '#/components/schemas/OnboardingStateEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        email_notification_settings:
          type: string
          readOnly: true
      required:
      - email_notification_settings
      - invite_expired
      - invite_expired_at
    LseFieldsRequest:
      type: object
      properties:
        invited_at:
          type: string
          format: date-time
          nullable: true
        invite_activated:
          type: boolean
          nullable: true
        trial_company:
          type: string
          nullable: true
          maxLength: 1000
        trial_role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TrialRoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        trial_models_in_production:
          type: string
          nullable: true
          maxLength: 1000
        trial_experience_labeling:
          type: string
          nullable: true
          maxLength: 1000
        trial_license_enterprise:
          type: boolean
          nullable: true
        social_auth_finished:
          type: boolean
          nullable: true
          description: Is user finished social authentication
        invited_by:
          type: integer
          nullable: true
        onboarding_state:
          nullable: true
          description: |-
            The current stage of user onboarding

            * `not_started` - Not Started
            * `signup` - Signup
            * `trial_signup` - Trial Signup
            * `first_tutorial` - First Tutorial
            * `in_app_guidance` - In App Guidance
            * `complete` - Complete
          oneOf:
          - $ref: '#/components/schemas/OnboardingStateEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    LseOrganization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        external_id:
          type: string
          nullable: true
          description: External ID to uniquely identify this organization
        title:
          type: string
          readOnly: true
        token:
          type: string
          readOnly: true
        default_role:
          allOf:
          - $ref: '#/components/schemas/DefaultRoleEnum'
          description: |-
            Default membership role for invited users

            * `OW` - Owner
            * `AD` - Administrator
            * `MA` - Manager
            * `RE` - Reviewer
            * `AN` - Annotator
            * `DI` - Deactivated
            * `NO` - Not Activated
        created_at:
          type: string
          format: date-time
          readOnly: true
        billing:
          $ref: '#/components/schemas/OrganizationBilling'
        embed_domains:
          nullable: true
          description: 'List of objects: {"domain": "example.com"}. Used for CSP header
            on /embed routes.'
        embed_settings:
          nullable: true
          description: Embed settings for this organization
        custom_scripts_enabled:
          type: string
          readOnly: true
        custom_scripts_editable_by:
          nullable: true
          description: |-
            Set the minimum user role that can edit custom scripts in the UI.

            * `AD` - Administrator
            * `MA` - Manager
          oneOf:
          - $ref: '#/components/schemas/CustomScriptsEditableByEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - billing
      - created_at
      - custom_scripts_enabled
      - id
      - title
      - token
    LseOrganizationMemberList:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          type: integer
          description: Organization ID
        user:
          $ref: '#/components/schemas/LseUserOrganizationMemberList'
        role:
          type: string
          readOnly: true
      required:
      - id
      - organization
      - role
      - user
    LseProject:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: Project owner
        created_at:
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        start_training_on_annotation_update:
          type: boolean
          readOnly: true
          description: Start model training after any annotations are submitted or
            updated
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        num_tasks_with_annotations:
          type: integer
          readOnly: true
          description: Tasks with annotations count
        task_number:
          type: integer
          readOnly: true
          description: Total task number in project
        useful_annotation_number:
          type: integer
          readOnly: true
          description: Useful annotation number in project not including skipped_annotations_number
            and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number
            + ground_truth_number
        ground_truth_number:
          type: integer
          readOnly: true
          description: Honeypot annotation number in project
        skipped_annotations_number:
          type: integer
          readOnly: true
          description: Skipped by collaborators annotation number in project
        total_annotations_number:
          type: integer
          readOnly: true
          description: Total annotations number in project including skipped_annotations_number
            and ground_truth_number.
        total_predictions_number:
          type: integer
          readOnly: true
          description: Total predictions number in project including skipped_annotations_number,
            ground_truth_number, and useful_annotation_number.
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        parsed_label_config:
          readOnly: true
          description: JSON-formatted labeling configuration
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        config_has_control_tags:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for labeling
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        finished_task_number:
          type: integer
          readOnly: true
          description: Finished tasks
        queue_total:
          type: string
          readOnly: true
        queue_done:
          type: string
          readOnly: true
        config_suitable_for_bulk_annotation:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for bulk annotation
        workspace:
          type: string
          readOnly: true
        review_settings:
          $ref: '#/components/schemas/ReviewSettings'
        assignment_settings:
          $ref: '#/components/schemas/AssignmentSettings'
        members:
          type: string
          readOnly: true
        custom_script:
          type: string
        comment_classification_config:
          type: string
        duplication_done:
          type: boolean
          default: false
        require_comment_on_skip:
          type: boolean
          default: false
        data_types:
          readOnly: true
          nullable: true
        reviewer_queue_total:
          type: string
          readOnly: true
        queue_left:
          type: string
          readOnly: true
        members_count:
          type: string
          readOnly: true
        custom_task_lock_ttl:
          type: integer
          maximum: 86400
          minimum: 1
          nullable: true
          description: TTL in seconds for task reservations, on new and existing tasks
        prompts:
          type: string
          readOnly: true
        annotation_limit_count:
          type: integer
          minimum: 1
          nullable: true
        annotation_limit_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        pause_on_failed_annotator_evaluation:
          type: boolean
          nullable: true
          default: false
        annotator_evaluation_minimum_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          default: '95.00'
        annotator_evaluation_minimum_tasks:
          type: integer
          minimum: 0
          nullable: true
          default: 10
        workspace_title:
          type: string
          readOnly: true
      required:
      - assignment_settings
      - config_has_control_tags
      - config_suitable_for_bulk_annotation
      - created_at
      - data_types
      - finished_task_number
      - ground_truth_number
      - id
      - members
      - members_count
      - num_tasks_with_annotations
      - parsed_label_config
      - prompts
      - queue_done
      - queue_left
      - queue_total
      - review_settings
      - reviewer_queue_total
      - skipped_annotations_number
      - start_training_on_annotation_update
      - task_number
      - total_annotations_number
      - total_predictions_number
      - useful_annotation_number
      - workspace
      - workspace_title
    LseProjectCounts:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        id:
          type: integer
          readOnly: true
        task_number:
          type: integer
          readOnly: true
          description: Total task number in project
        finished_task_number:
          type: integer
          readOnly: true
        total_predictions_number:
          type: integer
          readOnly: true
        total_annotations_number:
          type: string
          readOnly: true
        num_tasks_with_annotations:
          type: string
          readOnly: true
        useful_annotation_number:
          type: string
          readOnly: true
        ground_truth_number:
          type: integer
          readOnly: true
          description: Honeypot annotation number in project
        skipped_annotations_number:
          type: string
          readOnly: true
        rejected:
          type: string
          readOnly: true
        queue_total:
          type: string
          readOnly: true
        queue_done:
          type: string
          readOnly: true
        queue_left:
          type: string
          readOnly: true
        reviewed_number:
          type: string
          readOnly: true
        review_total_tasks:
          type: string
          readOnly: true
      required:
      - finished_task_number
      - ground_truth_number
      - id
      - num_tasks_with_annotations
      - queue_done
      - queue_left
      - queue_total
      - rejected
      - review_total_tasks
      - reviewed_number
      - skipped_annotations_number
      - task_number
      - total_annotations_number
      - total_predictions_number
      - useful_annotation_number
    LseProjectCreate:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: Project owner
        created_at:
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        start_training_on_annotation_update:
          type: boolean
          readOnly: true
          description: Start model training after any annotations are submitted or
            updated
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        num_tasks_with_annotations:
          type: integer
          readOnly: true
          description: Tasks with annotations count
        task_number:
          type: integer
          readOnly: true
          description: Total task number in project
        useful_annotation_number:
          type: integer
          readOnly: true
          description: Useful annotation number in project not including skipped_annotations_number
            and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number
            + ground_truth_number
        ground_truth_number:
          type: integer
          readOnly: true
          description: Honeypot annotation number in project
        skipped_annotations_number:
          type: integer
          readOnly: true
          description: Skipped by collaborators annotation number in project
        total_annotations_number:
          type: integer
          readOnly: true
          description: Total annotations number in project including skipped_annotations_number
            and ground_truth_number.
        total_predictions_number:
          type: integer
          readOnly: true
          description: Total predictions number in project including skipped_annotations_number,
            ground_truth_number, and useful_annotation_number.
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        parsed_label_config:
          readOnly: true
          description: JSON-formatted labeling configuration
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        config_has_control_tags:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for labeling
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        finished_task_number:
          type: integer
          readOnly: true
          description: Finished tasks
        queue_total:
          type: integer
          readOnly: true
        queue_done:
          type: integer
          readOnly: true
        config_suitable_for_bulk_annotation:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for bulk annotation
        workspace:
          type: integer
      required:
      - config_has_control_tags
      - config_suitable_for_bulk_annotation
      - created_at
      - finished_task_number
      - ground_truth_number
      - id
      - num_tasks_with_annotations
      - parsed_label_config
      - queue_done
      - queue_total
      - skipped_annotations_number
      - start_training_on_annotation_update
      - task_number
      - total_annotations_number
      - total_predictions_number
      - useful_annotation_number
    LseProjectCreateRequest:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: Project owner
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        workspace:
          type: integer
    LseProjectParamsRequest:
      type: object
      properties:
        use_kappa:
          type: boolean
          description: If categorical variables are used in labeling (e.g. choices),
            Cohen's Kappa statistic is computed to measure inter-rater reliability
            instead of basic agreement
        annotator_params:
          nullable: true
          description: 'user ID and user weight in score calculation. Format {user_id[int]:
            weight[Float[0..1]]}'
    LseProjectUpdate:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: Project owner
        created_at:
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        start_training_on_annotation_update:
          type: boolean
          readOnly: true
          description: Start model training after any annotations are submitted or
            updated
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        num_tasks_with_annotations:
          type: integer
          readOnly: true
          description: Tasks with annotations count
        task_number:
          type: integer
          readOnly: true
          description: Total task number in project
        useful_annotation_number:
          type: integer
          readOnly: true
          description: Useful annotation number in project not including skipped_annotations_number
            and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number
            + ground_truth_number
        ground_truth_number:
          type: integer
          readOnly: true
          description: Honeypot annotation number in project
        skipped_annotations_number:
          type: integer
          readOnly: true
          description: Skipped by collaborators annotation number in project
        total_annotations_number:
          type: integer
          readOnly: true
          description: Total annotations number in project including skipped_annotations_number
            and ground_truth_number.
        total_predictions_number:
          type: integer
          readOnly: true
          description: Total predictions number in project including skipped_annotations_number,
            ground_truth_number, and useful_annotation_number.
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        parsed_label_config:
          readOnly: true
          description: JSON-formatted labeling configuration
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        config_has_control_tags:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for labeling
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        finished_task_number:
          type: integer
          readOnly: true
          description: Finished tasks
        queue_total:
          type: integer
          readOnly: true
        queue_done:
          type: integer
          readOnly: true
        config_suitable_for_bulk_annotation:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for bulk annotation
        workspace:
          type: integer
        review_settings:
          $ref: '#/components/schemas/ReviewSettings'
        assignment_settings:
          $ref: '#/components/schemas/AssignmentSettings'
        custom_script:
          type: string
        comment_classification_config:
          type: string
        require_comment_on_skip:
          type: boolean
          default: false
        custom_task_lock_ttl:
          type: integer
          maximum: 86400
          minimum: 1
          nullable: true
          description: TTL in seconds for task reservations, on new and existing tasks
        prompts:
          type: string
          readOnly: true
        annotation_limit_count:
          type: integer
          minimum: 1
          nullable: true
        annotation_limit_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        pause_on_failed_annotator_evaluation:
          type: boolean
          nullable: true
          default: false
        annotator_evaluation_minimum_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          default: '95.00'
        annotator_evaluation_minimum_tasks:
          type: integer
          minimum: 0
          nullable: true
          default: 10
      required:
      - assignment_settings
      - config_has_control_tags
      - config_suitable_for_bulk_annotation
      - created_at
      - finished_task_number
      - ground_truth_number
      - id
      - num_tasks_with_annotations
      - parsed_label_config
      - prompts
      - queue_done
      - queue_total
      - review_settings
      - skipped_annotations_number
      - start_training_on_annotation_update
      - task_number
      - total_annotations_number
      - total_predictions_number
      - useful_annotation_number
      - workspace
    LseS3ExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: s3s
        synchronizable:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        external_id:
          type: string
          nullable: true
          title: ExternalID
          description: AWS ExternalId
        role_arn:
          type: string
          description: AWS RoleArn
        legacy_auth:
          type: boolean
          nullable: true
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - role_arn
      - type
    LseS3ExportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        external_id:
          type: string
          nullable: true
          title: ExternalID
          description: AWS ExternalId
        role_arn:
          type: string
          minLength: 1
          description: AWS RoleArn
        legacy_auth:
          type: boolean
          nullable: true
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - project
      - role_arn
    LseS3ImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: s3s
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        external_id:
          type: string
          nullable: true
          title: ExternalID
          description: AWS ExternalId
        role_arn:
          type: string
          description: AWS RoleArn
        legacy_auth:
          type: boolean
          nullable: true
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - role_arn
      - type
    LseS3ImportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        external_id:
          type: string
          nullable: true
          title: ExternalID
          description: AWS ExternalId
        role_arn:
          type: string
          minLength: 1
          description: AWS RoleArn
        legacy_auth:
          type: boolean
          nullable: true
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - project
      - role_arn
    LseTask:
      type: object
      description: Task Serializer with project scheme configs validation
      properties:
        id:
          type: integer
          readOnly: true
        agreement:
          type: string
          readOnly: true
        predictions:
          type: array
          title: Predictions
          description: Predictions for this task
          items:
            type: object
            title: Prediction object
            properties:
              result:
                type: array
                title: Prediction result
                items:
                  type: object
                  title: Prediction result item
              score:
                type: number
                title: Prediction score
              model_version:
                type: string
                title: Model version
              model:
                type: object
                title: ML Backend instance
              model_run:
                type: object
                title: Model Run instance
              task:
                type: integer
                title: Task ID related to the prediction
              project:
                type: integer
                title: Project ID related to the prediction
              created_at:
                type: string
                format: date-time
                title: Creation time
              updated_at:
                type: string
                format: date-time
                title: Last update time
          readOnly: true
        annotations:
          type: string
          readOnly: true
        drafts:
          type: array
          title: Annotation drafts
          description: Drafts for this task
          items:
            type: object
            title: Draft object
            properties:
              result:
                type: array
                title: Draft result
                items:
                  type: object
                  title: Draft result item
              created_at:
                type: string
                format: date-time
                title: Creation time
              updated_at:
                type: string
                format: date-time
                title: Last update time
          readOnly: true
        annotators:
          type: array
          title: Annotators IDs
          description: Annotators IDs who annotated this task
          items:
            type: integer
            title: User IDs
          readOnly: true
        inner_id:
          type: integer
        cancelled_annotations:
          type: integer
        total_annotations:
          type: integer
        total_predictions:
          type: integer
        completed_at:
          type: string
          format: date-time
        annotations_results:
          type: string
          readOnly: true
        predictions_results:
          type: string
          readOnly: true
        predictions_score:
          type: number
          format: double
        file_upload:
          type: string
          readOnly: true
        storage_filename:
          type: string
          readOnly: true
        annotations_ids:
          type: string
          readOnly: true
        predictions_model_versions:
          type: string
          readOnly: true
        avg_lead_time:
          type: number
          format: double
        draft_exists:
          type: boolean
        updated_by:
          type: array
          title: User IDs
          description: User IDs who updated this task
          items:
            type: object
            title: User IDs
          readOnly: true
        reviewers:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
        comment_authors:
          type: string
          readOnly: true
        reviewed:
          type: boolean
        reviews_accepted:
          type: integer
        reviews_rejected:
          type: integer
        ground_truth:
          type: boolean
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          nullable: true
          description: Meta is user imported (uploaded) data and can be useful as
            input for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time a task was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last time a task was updated
        is_labeled:
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of distinct annotators that processed the current task
        comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the last comment was updated
        project:
          type: integer
          nullable: true
          description: Project ID for this task
      required:
      - agreement
      - annotations
      - annotations_ids
      - annotations_results
      - annotators
      - comment_authors
      - comments
      - created_at
      - data
      - drafts
      - file_upload
      - id
      - predictions
      - predictions_model_versions
      - predictions_results
      - reviewers
      - storage_filename
      - updated_at
      - updated_by
    LseTaskFilterOptions:
      type: object
      properties:
        view:
          type: integer
          description: Apply filters from the view ID (a tab from the Data Manager)
        skipped:
          nullable: true
          description: |-
            `only` - include all tasks with skipped annotations<br>`exclude` - exclude all tasks with skipped annotations

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/SkippedEnum'
          - $ref: '#/components/schemas/NullEnum'
        finished:
          nullable: true
          description: |-
            `only` - include all finished tasks (is_labeled = true)<br>`exclude` - exclude all finished tasks

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/FinishedEnum'
          - $ref: '#/components/schemas/NullEnum'
        annotated:
          nullable: true
          description: |-
            `only` - include all tasks with at least one not skipped annotation<br>`exclude` - exclude all tasks with at least one not skipped annotation

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/AnnotatedEnum'
          - $ref: '#/components/schemas/NullEnum'
        only_with_annotations:
          type: boolean
          default: false
        reviewed:
          nullable: true
          description: |-
            `only` - include all reviewed tasks<br>`exclude` - exclude all reviewed tasks

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/ReviewedEnum'
          - $ref: '#/components/schemas/NullEnum'
    LseTaskFilterOptionsRequest:
      type: object
      properties:
        view:
          type: integer
          description: Apply filters from the view ID (a tab from the Data Manager)
        skipped:
          nullable: true
          description: |-
            `only` - include all tasks with skipped annotations<br>`exclude` - exclude all tasks with skipped annotations

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/SkippedEnum'
          - $ref: '#/components/schemas/NullEnum'
        finished:
          nullable: true
          description: |-
            `only` - include all finished tasks (is_labeled = true)<br>`exclude` - exclude all finished tasks

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/FinishedEnum'
          - $ref: '#/components/schemas/NullEnum'
        annotated:
          nullable: true
          description: |-
            `only` - include all tasks with at least one not skipped annotation<br>`exclude` - exclude all tasks with at least one not skipped annotation

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/AnnotatedEnum'
          - $ref: '#/components/schemas/NullEnum'
        only_with_annotations:
          type: boolean
          default: false
        reviewed:
          nullable: true
          description: |-
            `only` - include all reviewed tasks<br>`exclude` - exclude all reviewed tasks

            * `only` - only
            * `exclude` - exclude
            * `None` - None
          oneOf:
          - $ref: '#/components/schemas/ReviewedEnum'
          - $ref: '#/components/schemas/NullEnum'
    LseTaskRequest:
      type: object
      description: Task Serializer with project scheme configs validation
      properties:
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          nullable: true
          description: Meta is user imported (uploaded) data and can be useful as
            input for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
        is_labeled:
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of distinct annotators that processed the current task
        inner_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Internal task ID in the project, starts with 1
        total_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total annotations for the current task except cancelled
            annotations
        cancelled_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total cancelled annotations for the current task
        total_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total predictions for the current task
        comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the last comment was updated
        project:
          type: integer
          nullable: true
          description: Project ID for this task
        updated_by:
          type: integer
          nullable: true
          description: Last annotator or reviewer who updated this task
        file_upload:
          type: integer
          nullable: true
          description: Uploaded file used as data source for this task
        comment_authors:
          type: array
          items:
            type: integer
          description: Users who wrote comments
      required:
      - data
    LseTaskSerializerForAnnotators:
      type: object
      description: Task Serializer with project scheme configs validation
      properties:
        id:
          type: integer
          readOnly: true
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time a task was created
        annotations:
          type: string
          readOnly: true
          default: []
        drafts:
          type: array
          title: Annotation drafts
          description: Drafts for this task
          items:
            type: object
            title: Draft object
            properties:
              result:
                type: array
                title: Draft result
                items:
                  type: object
                  title: Draft result item
              created_at:
                type: string
                format: date-time
                title: Creation time
              updated_at:
                type: string
                format: date-time
                title: Last update time
          readOnly: true
        total_annotations:
          type: integer
        cancelled_annotations:
          type: integer
        annotations_results:
          type: string
          readOnly: true
        predictions:
          type: array
          title: Predictions
          description: Predictions for this task
          items:
            type: object
            title: Prediction object
            properties:
              result:
                type: array
                title: Prediction result
                items:
                  type: object
                  title: Prediction result item
              score:
                type: number
                title: Prediction score
              model_version:
                type: string
                title: Model version
              model:
                type: object
                title: ML Backend instance
              model_run:
                type: object
                title: Model Run instance
              task:
                type: integer
                title: Task ID related to the prediction
              project:
                type: integer
                title: Project ID related to the prediction
              created_at:
                type: string
                format: date-time
                title: Creation time
              updated_at:
                type: string
                format: date-time
                title: Last update time
          readOnly: true
        total_predictions:
          type: integer
        predictions_score:
          type: number
          format: double
        predictions_results:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
        comment_count:
          type: string
          readOnly: true
        unresolved_comment_count:
          type: string
          readOnly: true
        reviews_rejected:
          type: integer
        draft_exists:
          type: boolean
      required:
      - annotations
      - annotations_results
      - comment_count
      - comments
      - created_at
      - data
      - drafts
      - id
      - predictions
      - predictions_results
      - unresolved_comment_count
    LseTaskSerializerForReviewers:
      type: object
      description: Task Serializer with project scheme configs validation
      properties:
        id:
          type: integer
          readOnly: true
        agreement:
          type: string
          readOnly: true
        predictions:
          type: array
          title: Predictions
          description: Predictions for this task
          items:
            type: object
            title: Prediction object
            properties:
              result:
                type: array
                title: Prediction result
                items:
                  type: object
                  title: Prediction result item
              score:
                type: number
                title: Prediction score
              model_version:
                type: string
                title: Model version
              model:
                type: object
                title: ML Backend instance
              model_run:
                type: object
                title: Model Run instance
              task:
                type: integer
                title: Task ID related to the prediction
              project:
                type: integer
                title: Project ID related to the prediction
              created_at:
                type: string
                format: date-time
                title: Creation time
              updated_at:
                type: string
                format: date-time
                title: Last update time
          readOnly: true
        annotations:
          type: string
          readOnly: true
        drafts:
          type: array
          title: Annotation drafts
          description: Drafts for this task
          items:
            type: object
            title: Draft object
            properties:
              result:
                type: array
                title: Draft result
                items:
                  type: object
                  title: Draft result item
              created_at:
                type: string
                format: date-time
                title: Creation time
              updated_at:
                type: string
                format: date-time
                title: Last update time
          readOnly: true
        annotators:
          type: array
          title: Annotators IDs
          description: Annotators IDs who annotated this task
          items:
            type: integer
            title: User IDs
          readOnly: true
        inner_id:
          type: integer
        cancelled_annotations:
          type: integer
        total_annotations:
          type: integer
        total_predictions:
          type: integer
        completed_at:
          type: string
          format: date-time
        annotations_results:
          type: string
          readOnly: true
        predictions_results:
          type: string
          readOnly: true
        predictions_score:
          type: number
          format: double
        file_upload:
          type: string
          readOnly: true
        storage_filename:
          type: string
          readOnly: true
        annotations_ids:
          type: string
          readOnly: true
        predictions_model_versions:
          type: string
          readOnly: true
        avg_lead_time:
          type: number
          format: double
        draft_exists:
          type: boolean
        updated_by:
          type: array
          title: User IDs
          description: User IDs who updated this task
          items:
            type: object
            title: User IDs
          readOnly: true
        reviewers:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
        comment_authors:
          type: string
          readOnly: true
        reviewed:
          type: boolean
        reviews_accepted:
          type: integer
        reviews_rejected:
          type: integer
        ground_truth:
          type: boolean
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          nullable: true
          description: Meta is user imported (uploaded) data and can be useful as
            input for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time a task was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last time a task was updated
        is_labeled:
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of distinct annotators that processed the current task
        comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the last comment was updated
        project:
          type: integer
          nullable: true
          description: Project ID for this task
      required:
      - agreement
      - annotations
      - annotations_ids
      - annotations_results
      - annotators
      - comment_authors
      - comments
      - created_at
      - data
      - drafts
      - file_upload
      - id
      - predictions
      - predictions_model_versions
      - predictions_results
      - reviewers
      - storage_filename
      - updated_at
      - updated_by
    LseUser:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        username:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        last_activity:
          type: string
          format: date-time
          readOnly: true
        custom_hotkeys:
          nullable: true
          description: Custom keyboard shortcuts configuration for the user interface
        avatar:
          type: string
          readOnly: true
        initials:
          type: string
          readOnly: true
          default: '?'
        phone:
          type: string
          maxLength: 256
        active_organization:
          type: integer
          nullable: true
        active_organization_meta:
          type: string
          readOnly: true
        allow_newsletters:
          type: boolean
          nullable: true
          description: Allow sending newsletters to user
        date_joined:
          type: string
          format: date-time
        org_membership:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationMembership'
          readOnly: true
        lse_fields:
          allOf:
          - $ref: '#/components/schemas/LseFields'
          readOnly: true
        pause:
          type: string
          readOnly: true
      required:
      - active_organization_meta
      - avatar
      - id
      - initials
      - last_activity
      - lse_fields
      - org_membership
      - pause
      - username
    LseUserAPI:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        username:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        last_activity:
          type: string
          format: date-time
          readOnly: true
        custom_hotkeys:
          nullable: true
          description: Custom keyboard shortcuts configuration for the user interface
        avatar:
          type: string
          readOnly: true
        initials:
          type: string
          readOnly: true
          default: '?'
        phone:
          type: string
          maxLength: 256
        active_organization:
          type: integer
          nullable: true
        active_organization_meta:
          type: string
          readOnly: true
        allow_newsletters:
          type: boolean
          nullable: true
          description: Allow sending newsletters to user
        date_joined:
          type: string
          format: date-time
        org_membership:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationMembership'
          readOnly: true
      required:
      - active_organization_meta
      - avatar
      - id
      - initials
      - last_activity
      - org_membership
      - username
    LseUserOrganizationMemberList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        username:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        last_activity:
          type: string
          format: date-time
          readOnly: true
        custom_hotkeys:
          nullable: true
          description: Custom keyboard shortcuts configuration for the user interface
        avatar:
          type: string
          readOnly: true
        initials:
          type: string
          readOnly: true
          default: '?'
        phone:
          type: string
          maxLength: 256
        active_organization:
          type: integer
          nullable: true
        allow_newsletters:
          type: boolean
          nullable: true
          description: Allow sending newsletters to user
        date_joined:
          type: string
          format: date-time
        lse_fields:
          allOf:
          - $ref: '#/components/schemas/LseFields'
          readOnly: true
        pause:
          type: string
          readOnly: true
        created_projects:
          type: string
          readOnly: true
        contributed_to_projects:
          type: string
          readOnly: true
      required:
      - avatar
      - contributed_to_projects
      - created_projects
      - id
      - initials
      - last_activity
      - lse_fields
      - pause
      - username
    MLBackend:
      type: object
      description: Serializer for MLBackend model.
      properties:
        id:
          type: integer
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        readable_state:
          type: string
          readOnly: true
        is_interactive:
          type: boolean
          description: Used to interactively annotate tasks. If true, model returns
            one list with results
        url:
          type: string
          description: URL for the machine learning model server
        error_message:
          type: string
          nullable: true
          description: Error message in error state
        title:
          type: string
          nullable: true
          description: Name of the machine learning backend
        auth_method:
          $ref: '#/components/schemas/AuthMethodEnum'
        basic_auth_user:
          type: string
          nullable: true
          description: HTTP Basic Auth user
        basic_auth_pass_is_set:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          description: Description for the machine learning backend
        extra_params:
          nullable: true
          description: Any extra parameters passed to the ML Backend during the setup
        model_version:
          type: string
          nullable: true
          description: Current model version associated with this machine learning
            backend
        timeout:
          type: number
          format: double
          description: Response model timeout
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        auto_update:
          type: boolean
          description: If false, model version is set by the user, if true - getting
            latest version from backend.
        project:
          type: integer
      required:
      - basic_auth_pass_is_set
      - created_at
      - id
      - project
      - readable_state
      - updated_at
      - url
    MLBackendRequest:
      type: object
      description: Serializer for MLBackend model.
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        is_interactive:
          type: boolean
          description: Used to interactively annotate tasks. If true, model returns
            one list with results
        url:
          type: string
          minLength: 1
          description: URL for the machine learning model server
        error_message:
          type: string
          nullable: true
          description: Error message in error state
        title:
          type: string
          nullable: true
          description: Name of the machine learning backend
        auth_method:
          $ref: '#/components/schemas/AuthMethodEnum'
        basic_auth_user:
          type: string
          nullable: true
          description: HTTP Basic Auth user
        basic_auth_pass:
          type: string
          writeOnly: true
          nullable: true
        description:
          type: string
          nullable: true
          description: Description for the machine learning backend
        extra_params:
          nullable: true
          description: Any extra parameters passed to the ML Backend during the setup
        model_version:
          type: string
          nullable: true
          description: Current model version associated with this machine learning
            backend
        timeout:
          type: number
          format: double
          description: Response model timeout
        auto_update:
          type: boolean
          description: If false, model version is set by the user, if true - getting
            latest version from backend.
        project:
          type: integer
      required:
      - project
      - url
    MLInteractiveAnnotatingRequestRequest:
      type: object
      description: Serializer for ML interactive annotating request.
      properties:
        task:
          type: integer
          description: ID of task to annotate
        context:
          nullable: true
          description: Context for ML model
      required:
      - task
    ModeEnum:
      enum:
      - settings
      - settings,data
      type: string
      description: |-
        * `settings` - Only settings
        * `settings,data` - Settings and tasks
    ModelInterface:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: User who created Dataset
        skill_name:
          allOf:
          - $ref: '#/components/schemas/SkillNameEnum'
          default: TextClassification
        title:
          type: string
          description: Model name
          maxLength: 500
        description:
          type: string
          nullable: true
          description: Model description
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        input_fields: {}
        output_classes: {}
        organization:
          type: integer
          nullable: true
        associated_projects:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - title
      - updated_at
    ModelInterfaceRequest:
      type: object
      properties:
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: User who created Dataset
        skill_name:
          allOf:
          - $ref: '#/components/schemas/SkillNameEnum'
          default: TextClassification
        title:
          type: string
          minLength: 1
          description: Model name
          maxLength: 500
        description:
          type: string
          nullable: true
          description: Model description
        input_fields: {}
        output_classes: {}
        organization:
          type: integer
          nullable: true
        associated_projects:
          type: array
          items:
            type: integer
      required:
      - title
    ModelInterfaceSerializerGET:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: User who created Dataset
        skill_name:
          allOf:
          - $ref: '#/components/schemas/SkillNameEnum'
          default: TextClassification
        associated_projects:
          type: array
          items:
            $ref: '#/components/schemas/AssociatedProject'
          default: []
        title:
          type: string
          description: Model name
          maxLength: 500
        description:
          type: string
          nullable: true
          description: Model description
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        input_fields: {}
        output_classes: {}
        organization:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - title
      - updated_at
    ModelProviderConnection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          readOnly: true
        model_params:
          type: string
          readOnly: true
          description: JSON schema for the model parameters available for the provider
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        deployment_name:
          type: string
          nullable: true
          description: Azure OpenAI deployment name
          maxLength: 512
        endpoint:
          type: string
          nullable: true
          description: Azure OpenAI endpoint
          maxLength: 512
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
          maxLength: 255
        google_location:
          type: string
          nullable: true
          description: Google project location
          maxLength: 255
        cached_available_models:
          type: string
          nullable: true
          description: List of available models from the provider
          maxLength: 4096
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_internal:
          type: boolean
          nullable: true
          description: Whether the model provider connection is internal, not visible
            to the user
        budget_limit:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: Budget limit for the model provider connection (null if unlimited)
        budget_last_reset_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Date and time the budget was last reset
        budget_reset_period:
          readOnly: true
          nullable: true
          description: |-
            Budget reset period for the model provider connection (null if not reset)

            * `Monthly` - Monthly
            * `Yearly` - Yearly
          oneOf:
          - $ref: '#/components/schemas/BudgetResetPeriodEnum'
          - $ref: '#/components/schemas/NullEnum'
        budget_total_spent:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: Tracked total budget spent for the given provider connection
            within the current budget period
        budget_alert_threshold:
          type: number
          format: double
          nullable: true
          description: Budget alert threshold for the given provider connection
        organization:
          type: integer
          readOnly: true
          nullable: true
      required:
      - budget_last_reset_date
      - budget_limit
      - budget_reset_period
      - budget_total_spent
      - created_at
      - created_by
      - id
      - model_params
      - organization
      - updated_at
    ModelProviderConnectionRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        api_key:
          type: string
          writeOnly: true
          nullable: true
          description: Model provider API key
        auth_token:
          type: string
          writeOnly: true
          nullable: true
          description: Model provider Auth token
        deployment_name:
          type: string
          nullable: true
          description: Azure OpenAI deployment name
          maxLength: 512
        endpoint:
          type: string
          nullable: true
          description: Azure OpenAI endpoint
          maxLength: 512
        google_application_credentials:
          type: string
          writeOnly: true
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
          maxLength: 255
        google_location:
          type: string
          nullable: true
          description: Google project location
          maxLength: 255
        cached_available_models:
          type: string
          nullable: true
          description: List of available models from the provider
          maxLength: 4096
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        is_internal:
          type: boolean
          nullable: true
          description: Whether the model provider connection is internal, not visible
            to the user
        budget_alert_threshold:
          type: number
          format: double
          nullable: true
          description: Budget alert threshold for the given provider connection
    ModelRun:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parent_model:
          type: integer
          readOnly: true
        project_subset:
          $ref: '#/components/schemas/ProjectSubsetEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/ModelRunStatusEnum'
          readOnly: true
        job_id:
          type: string
          nullable: true
          description: Job ID for inference job for a ModelRun e.g. Adala job ID
          maxLength: 255
        total_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_correct_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_tasks:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        triggered_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        predictions_updated_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        organization:
          type: integer
          nullable: true
        project:
          type: integer
        model_version:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - completed_at
      - created_at
      - created_by
      - id
      - model_version
      - parent_model
      - project
      - status
      - triggered_at
    ModelRunRequest:
      type: object
      properties:
        project_subset:
          $ref: '#/components/schemas/ProjectSubsetEnum'
        job_id:
          type: string
          nullable: true
          description: Job ID for inference job for a ModelRun e.g. Adala job ID
          maxLength: 255
        total_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_correct_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_tasks:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        predictions_updated_at:
          type: string
          format: date-time
          nullable: true
        organization:
          type: integer
          nullable: true
        project:
          type: integer
        model_version:
          type: integer
      required:
      - model_version
      - project
    ModelRunStatusEnum:
      enum:
      - Pending
      - InProgress
      - Completed
      - Failed
      - Canceled
      type: string
      description: |-
        * `Pending` - Pending
        * `InProgress` - InProgress
        * `Completed` - Completed
        * `Failed` - Failed
        * `Canceled` - Canceled
    NullEnum:
      enum:
      - null
    OnboardingStateEnum:
      enum:
      - not_started
      - signup
      - trial_signup
      - first_tutorial
      - in_app_guidance
      - complete
      type: string
      description: |-
        * `not_started` - Not Started
        * `signup` - Signup
        * `trial_signup` - Trial Signup
        * `first_tutorial` - First Tutorial
        * `in_app_guidance` - In App Guidance
        * `complete` - Complete
    OrganizationBilling:
      type: object
      properties:
        manual_workspace_management:
          type: string
          readOnly: true
        manual_role_management:
          type: string
          readOnly: true
      required:
      - manual_role_management
      - manual_workspace_management
    OrganizationId:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Organization title
          maxLength: 1000
        contact_info:
          type: string
          format: email
          nullable: true
          maxLength: 254
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - title
    OrganizationInvite:
      type: object
      properties:
        token:
          type: string
        invite_url:
          type: string
    OrganizationMember:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        user:
          type: integer
          description: User ID
        organization:
          type: integer
          description: Organization ID
        contributed_projects_count:
          type: string
          readOnly: true
        annotations_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - annotations_count
      - contributed_projects_count
      - created_at
      - organization
      - user
    OrganizationMemberCreateUpdateRequest:
      type: object
      properties:
        user_id:
          type: integer
        role:
          $ref: '#/components/schemas/Role9e7Enum'
      required:
      - role
      - user_id
    OrganizationMembership:
      type: object
      properties:
        role:
          type: string
        active:
          type: string
          readOnly: true
        organization_id:
          type: integer
          description: Organization ID
          readOnly: true
      required:
      - active
      - organization_id
      - role
    OrganizationMembershipRequest:
      type: object
      properties:
        role:
          type: string
          minLength: 1
      required:
      - role
    PaginatedAllRolesProjectListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllRolesProjectList'
    PaginatedAnnotationHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnnotationHistory'
    PaginatedLabelCreateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LabelCreate'
    PaginatedLabelLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LabelLink'
    PaginatedLabelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    PaginatedLseOrganizationMemberListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LseOrganizationMemberList'
    PaginatedLseProjectCountsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LseProjectCounts'
    PaginatedRoleBasedTaskList:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/RoleBasedTask'
        total:
          type: integer
          description: Total number of tasks
          example: 123
        total_annotations:
          type: integer
          description: Total number of annotations
          example: 456
        total_predictions:
          type: integer
          description: Total number of predictions
          example: 78
      required:
      - tasks
      - total
      - total_annotations
      - total_predictions
    PatchedAnnotationReviewRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        accepted:
          type: boolean
          description: Accepted or rejected (if false) flag
        result:
          nullable: true
        annotation:
          type: integer
          description: Corresponding annotation
        last_annotation_history:
          type: integer
          nullable: true
        comment:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
        remove_from_queue:
          type: boolean
          nullable: true
        started_at:
          type: string
          format: date-time
          nullable: true
    PatchedAzureDatasetStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        container:
          type: string
          nullable: true
          description: Azure blob container
        prefix:
          type: string
          nullable: true
          description: Azure blob prefix name
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        account_name:
          type: string
          nullable: true
          description: Azure Blob account name
        account_key:
          type: string
          nullable: true
          description: Azure Blob account key
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
    PatchedCommentRequest:
      type: object
      properties:
        region_ref:
          nullable: true
          description: Set if this comment is related to a specific part of the annotation.
            Normally contains region ID and control name.
        classifications:
          nullable: true
          description: Classifications applied by a reviewer or annotator
        text:
          type: string
          nullable: true
          description: Reviewer or annotator comment
        is_resolved:
          type: boolean
          description: True if the comment is resolved
        draft:
          type: integer
          nullable: true
        annotation:
          type: integer
          nullable: true
    PatchedDatasetRequest:
      type: object
      properties:
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: User who created Dataset
        title:
          type: string
          minLength: 1
          description: Dataset title
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Dataset description
        columns:
          nullable: true
          description: All data columns found in Dataset tasks
        total_entities:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: The number of entities in the dataset
        vector_db_dataset_name:
          type: string
          minLength: 1
          description: Dataset name for weaviate schema
          maxLength: 37
        organization:
          type: integer
          nullable: true
    PatchedDatasetViewRequest:
      type: object
      properties:
        filter_group:
          $ref: '#/components/schemas/FilterGroupRequest'
        data:
          nullable: true
          description: Custom view data
        ordering:
          nullable: true
          description: Ordering parameters
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Position of the tab, starting at the left in data manager and
            increasing as the tabs go left to right
        selected_items:
          nullable: true
          description: Selected items
        user:
          type: integer
          nullable: true
          description: User who made this view
        dataset:
          type: integer
          description: Dataset ID
    PatchedDefaultRoleRequest:
      type: object
      properties:
        organization:
          type: integer
          description: A unique integer value identifying this organization.
        default_role:
          allOf:
          - $ref: '#/components/schemas/DefaultRoleEnum'
          description: |-
            Default membership role for invited users

            * `OW` - Owner
            * `AD` - Administrator
            * `MA` - Manager
            * `RE` - Reviewer
            * `AN` - Annotator
            * `DI` - Deactivated
            * `NO` - Not Activated
        external_id:
          type: string
          nullable: true
          description: External ID to uniquely identify this organization
        embed_domains:
          nullable: true
          description: 'List of objects: {"domain": "example.com"}. Used for CSP header
            on /embed routes.'
        embed_settings:
          nullable: true
          description: Embed settings for this organization
        extra_data_on_activity_logs:
          type: boolean
        custom_scripts_enabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to enabled custom scripts for this organization.
            Can only be enabled if no organization members are active members of any
            other organizations; otherwise an error will be raised. If this occurs,
            contact the LEAP team for assistance with enabling custom scripts.
        custom_scripts_editable_by:
          nullable: true
          description: |-
            Set the minimum user role that can edit custom scripts in the UI.

            * `AD` - Administrator
            * `MA` - Manager
          oneOf:
          - $ref: '#/components/schemas/CustomScriptsEditableByEnum'
          - $ref: '#/components/schemas/NullEnum'
        annotator_reviewer_firewall_enabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to restrict data sharing between annotators
            and reviewers in the label stream, review stream, and notifications (which
            will be disabled). In these settings, information about annotator and
            reviewer identity is suppressed in the UI.
        read_only_quick_view_enabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to prevent creating or editing annotations
            in quick view.
        label_stream_navigation_disabled_at:
          type: string
          format: date-time
          nullable: true
          description: Set to current time to disable the label stream navigation
            for this organization. This will prevent users from going back in the
            label stream to view previous labels.
    PatchedFileUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
    PatchedGCSDatasetStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
    PatchedGCSWIFExportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        google_project_number:
          type: string
          nullable: true
          description: Google project number
        google_wif_pool_id:
          type: string
          nullable: true
          description: Google WIF pool ID
        google_wif_provider_id:
          type: string
          nullable: true
          title: Google wif provider
          description: Google WIF provider ID
        google_service_account_email:
          type: string
          nullable: true
          description: Google service account email
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        project:
          type: integer
          description: A unique integer value identifying this project.
    PatchedGCSWIFImportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        bucket:
          type: string
          nullable: true
          description: GCS bucket name
        prefix:
          type: string
          nullable: true
          description: GCS bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        google_application_credentials:
          type: string
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
        google_project_number:
          type: string
          nullable: true
          description: Google project number
        google_wif_pool_id:
          type: string
          nullable: true
          description: Google WIF pool ID
        google_wif_provider_id:
          type: string
          nullable: true
          title: Google wif provider
          description: Google WIF provider ID
        google_service_account_email:
          type: string
          nullable: true
          description: Google service account email
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        project:
          type: integer
          description: A unique integer value identifying this project.
    PatchedHotkeysRequest:
      type: object
      properties:
        custom_hotkeys:
          type: object
          additionalProperties: {}
    PatchedLabelLinkRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        from_name:
          type: string
          minLength: 1
          title: Tag name
          description: Tag name
          maxLength: 2048
        project:
          type: integer
        label:
          type: integer
    PatchedLabelRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        value:
          description: Label value
        title:
          type: string
          minLength: 1
          description: Label title
          maxLength: 2048
        description:
          type: string
          nullable: true
          description: Label description
        approved:
          type: boolean
          description: Status of label
        created_by:
          type: integer
          description: User who made this label
        approved_by:
          type: integer
          nullable: true
          description: User who approved this label
        organization:
          type: integer
    PatchedLseOrganizationSerializerUpdateRequest:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        title:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
        embed_domains:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
              minLength: 1
          writeOnly: true
          nullable: true
        custom_scripts_enabled:
          type: boolean
          writeOnly: true
          nullable: true
        custom_scripts_editable_by:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
        embed_settings:
          writeOnly: true
          nullable: true
        token:
          type: string
          nullable: true
          maxLength: 256
        contact_info:
          type: string
          format: email
          nullable: true
          maxLength: 254
        created_by:
          type: integer
          nullable: true
    PatchedLseProjectRequest:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: Project owner
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        review_settings:
          $ref: '#/components/schemas/ReviewSettingsRequest'
        assignment_settings:
          $ref: '#/components/schemas/AssignmentSettingsRequest'
        custom_script:
          type: string
        comment_classification_config:
          type: string
        duplication_done:
          type: boolean
          default: false
        require_comment_on_skip:
          type: boolean
          default: false
        custom_task_lock_ttl:
          type: integer
          maximum: 86400
          minimum: 1
          nullable: true
          description: TTL in seconds for task reservations, on new and existing tasks
        annotation_limit_count:
          type: integer
          minimum: 1
          nullable: true
        annotation_limit_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        pause_on_failed_annotator_evaluation:
          type: boolean
          nullable: true
          default: false
        annotator_evaluation_minimum_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          default: '95.00'
        annotator_evaluation_minimum_tasks:
          type: integer
          minimum: 0
          nullable: true
          default: 10
    PatchedLseS3ExportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        external_id:
          type: string
          nullable: true
          title: ExternalID
          description: AWS ExternalId
        role_arn:
          type: string
          minLength: 1
          description: AWS RoleArn
        legacy_auth:
          type: boolean
          nullable: true
        project:
          type: integer
          description: A unique integer value identifying this project.
    PatchedLseS3ImportStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        external_id:
          type: string
          nullable: true
          title: ExternalID
          description: AWS ExternalId
        role_arn:
          type: string
          minLength: 1
          description: AWS RoleArn
        legacy_auth:
          type: boolean
          nullable: true
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        project:
          type: integer
          description: A unique integer value identifying this project.
    PatchedLseTaskRequest:
      type: object
      description: Task Serializer with project scheme configs validation
      properties:
        inner_id:
          type: integer
        cancelled_annotations:
          type: integer
        total_annotations:
          type: integer
        total_predictions:
          type: integer
        completed_at:
          type: string
          format: date-time
        predictions_score:
          type: number
          format: double
        avg_lead_time:
          type: number
          format: double
        draft_exists:
          type: boolean
        reviewed:
          type: boolean
        reviews_accepted:
          type: integer
        reviews_rejected:
          type: integer
        ground_truth:
          type: boolean
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          nullable: true
          description: Meta is user imported (uploaded) data and can be useful as
            input for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
        is_labeled:
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of distinct annotators that processed the current task
        comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the last comment was updated
        project:
          type: integer
          nullable: true
          description: Project ID for this task
    PatchedLseUserSerializerUpdateRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        username:
          type: string
          minLength: 1
          maxLength: 256
        custom_hotkeys:
          nullable: true
          description: Custom keyboard shortcuts configuration for the user interface
        phone:
          type: string
          maxLength: 256
        active_organization:
          type: integer
          nullable: true
        allow_newsletters:
          type: boolean
          nullable: true
          description: Allow sending newsletters to user
        date_joined:
          type: string
          format: date-time
        password:
          type: string
          writeOnly: true
          minLength: 1
        onboarding_state:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
        is_email_verified:
          type: boolean
          writeOnly: true
          nullable: true
        email_notification_settings:
          writeOnly: true
    PatchedModelInterfaceRequest:
      type: object
      properties:
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: User who created Dataset
        skill_name:
          allOf:
          - $ref: '#/components/schemas/SkillNameEnum'
          default: TextClassification
        title:
          type: string
          minLength: 1
          description: Model name
          maxLength: 500
        description:
          type: string
          nullable: true
          description: Model description
        input_fields: {}
        output_classes: {}
        organization:
          type: integer
          nullable: true
        associated_projects:
          type: array
          items:
            type: integer
    PatchedModelProviderConnectionRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        api_key:
          type: string
          writeOnly: true
          nullable: true
          description: Model provider API key
        auth_token:
          type: string
          writeOnly: true
          nullable: true
          description: Model provider Auth token
        deployment_name:
          type: string
          nullable: true
          description: Azure OpenAI deployment name
          maxLength: 512
        endpoint:
          type: string
          nullable: true
          description: Azure OpenAI endpoint
          maxLength: 512
        google_application_credentials:
          type: string
          writeOnly: true
          nullable: true
          description: The content of GOOGLE_APPLICATION_CREDENTIALS json file
        google_project_id:
          type: string
          nullable: true
          description: Google project ID
          maxLength: 255
        google_location:
          type: string
          nullable: true
          description: Google project location
          maxLength: 255
        cached_available_models:
          type: string
          nullable: true
          description: List of available models from the provider
          maxLength: 4096
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        is_internal:
          type: boolean
          nullable: true
          description: Whether the model provider connection is internal, not visible
            to the user
        budget_alert_threshold:
          type: number
          format: double
          nullable: true
          description: Budget alert threshold for the given provider connection
    PatchedOrganizationMemberCreateUpdateRequest:
      type: object
      properties:
        user_id:
          type: integer
        role:
          $ref: '#/components/schemas/Role9e7Enum'
    PatchedPauseRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/ReasonEnum'
          description: |-
            Reason for pausing

            * `MANUAL` - Manual
            * `BEHAVIOR_BASED` - Behavior-based
            * `ANNOTATOR_EVALUATION` - Annotator evaluation
            * `ANNOTATION_LIMIT` - Annotation limit
            * `CUSTOM_SCRIPT` - Custom script
        verbose_reason:
          type: string
          nullable: true
          description: Detailed description of why the project is paused, will be
            readable by paused annotators
    PatchedProjectTemplateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 1000
        description:
          type: string
          nullable: true
          minLength: 1
        tags: {}
        project_settings:
          description: general dict serialized project settings
        review_settings:
          description: general dict serialized review settings
        assignment_settings:
          description: general dict serialized assignment settings
        require_comment_on_skip:
          type: boolean
          description: flag to require comment on skip
        custom_script:
          type: string
          nullable: true
          minLength: 1
          description: custom script for projects created from this template
        created_by:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
    PatchedS3DatasetStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
    PatchedSessionTimeoutPolicyRequest:
      type: object
      properties:
        max_session_age:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Max session age (minutes)
          description: Number of minutes that a session can be active before needing
            to re-login
        max_time_between_activity:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Max time (minutes) between activity
          description: Number of minutes that a session stays active without any activity
    PatchedTaskAssignmentRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Assignment type
          description: |-
            Type of assignment: Annotate|Review

            * `AN` - Annotate
            * `RE` - Review
        assignee:
          type: integer
          description: Assigned user
        task:
          type: integer
          description: Assigned task
    PatchedThirdPartyModelVersionRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: Model name
          maxLength: 500
        prompt:
          type: string
          minLength: 1
          description: Prompt to execute
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: |-
            The model provider to use e.g. OpenAI

            * `OpenAI` - OpenAI
            * `AzureOpenAI` - AzureOpenAI
            * `AzureAIFoundry` - AzureAIFoundry
            * `VertexAI` - VertexAI
            * `Gemini` - Gemini
            * `Anthropic` - Anthropic
            * `Custom` - Custom
        provider_model_id:
          type: string
          minLength: 1
          description: The model ID to use within the given provider, e.g. gpt-3.5
          maxLength: 255
        parent_model:
          type: integer
        model_provider_connection:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
    PatchedWebhookSerializerForUpdateRequest:
      type: object
      description: |-
        Serializer class for updating webhooks

        Used to forbid updating project field.
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          title: URL of webhook
          description: URL of webhook
          maxLength: 2048
        send_payload:
          type: boolean
          title: Does webhook send the payload
          description: If value is False send only action
        send_for_all_actions:
          type: boolean
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
        is_active:
          type: boolean
          title: Is webhook active
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionsEnum'
          default: []
    PatchedWorkspaceRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        title:
          type: string
          minLength: 1
          description: Workspace name
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Workspace description
        color:
          type: string
          nullable: true
          maxLength: 16
        is_personal:
          type: boolean
          title: Personal
          description: Workspace is a personal user workspace
        is_archived:
          type: boolean
          title: Archived
          description: Workspace is archived
    Pause:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
          readOnly: true
          nullable: true
          description: Related project for which the pause is set
        user:
          type: integer
          readOnly: true
          nullable: true
          description: User who is paused
        paused_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          readOnly: true
        reason:
          allOf:
          - $ref: '#/components/schemas/ReasonEnum'
          description: |-
            Reason for pausing

            * `MANUAL` - Manual
            * `BEHAVIOR_BASED` - Behavior-based
            * `ANNOTATOR_EVALUATION` - Annotator evaluation
            * `ANNOTATION_LIMIT` - Annotation limit
            * `CUSTOM_SCRIPT` - Custom script
        verbose_reason:
          type: string
          nullable: true
          description: Detailed description of why the project is paused, will be
            readable by paused annotators
        deleted_by:
          type: integer
          readOnly: true
          nullable: true
          description: User who soft-deleted this pause record
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Timestamp when this pause record was soft-deleted
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when this pause record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when this pause record was last updated
      required:
      - created_at
      - deleted_at
      - deleted_by
      - id
      - paused_by
      - project
      - reason
      - updated_at
      - user
    PauseRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/ReasonEnum'
          description: |-
            Reason for pausing

            * `MANUAL` - Manual
            * `BEHAVIOR_BASED` - Behavior-based
            * `ANNOTATOR_EVALUATION` - Annotator evaluation
            * `ANNOTATION_LIMIT` - Annotation limit
            * `CUSTOM_SCRIPT` - Custom script
        verbose_reason:
          type: string
          nullable: true
          description: Detailed description of why the project is paused, will be
            readable by paused annotators
      required:
      - reason
    Prediction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        result:
          type: array
          title: Prediction result list
          description: List of prediction results for the task
          items:
            type: object
            title: Prediction result items (regions)
            description: List of predicted regions for the task
        model_version:
          type: string
          description: Model version - tag for predictions that can be used to filter
            tasks in Data Manager, as well as select specific model version for showing
            preannotations in the labeling interface
        created_ago:
          type: string
          readOnly: true
          default: ''
          description: Delta time from creation time
        score:
          type: number
          format: double
          nullable: true
          description: Prediction score
        cluster:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Cluster for the current prediction
        neighbors:
          nullable: true
          description: Array of task IDs of the closest neighbors
        mislabeling:
          type: number
          format: double
          description: Related task mislabeling score
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        model:
          type: integer
          nullable: true
          description: An ML Backend instance that created the prediction.
        model_run:
          type: integer
          nullable: true
          description: A run of a ModelVersion that created the prediction.
        task:
          type: integer
        project:
          type: integer
          nullable: true
      required:
      - created_ago
      - created_at
      - id
      - result
      - task
      - updated_at
    PredictionRequest:
      type: object
      properties:
        result:
          type: array
          title: Prediction result list
          description: List of prediction results for the task
          items:
            type: object
            title: Prediction result items (regions)
            description: List of predicted regions for the task
        model_version:
          type: string
          description: Model version - tag for predictions that can be used to filter
            tasks in Data Manager, as well as select specific model version for showing
            preannotations in the labeling interface
        score:
          type: number
          format: double
          nullable: true
          description: Prediction score
        cluster:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Cluster for the current prediction
        neighbors:
          nullable: true
          description: Array of task IDs of the closest neighbors
        mislabeling:
          type: number
          format: double
          description: Related task mislabeling score
        model:
          type: integer
          nullable: true
          description: An ML Backend instance that created the prediction.
        model_run:
          type: integer
          nullable: true
          description: A run of a ModelVersion that created the prediction.
        task:
          type: integer
        project:
          type: integer
          nullable: true
      required:
      - result
      - task
    Project:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          description: Project owner
        created_at:
          type: string
          format: date-time
          readOnly: true
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        start_training_on_annotation_update:
          type: boolean
          readOnly: true
          description: Start model training after any annotations are submitted or
            updated
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        num_tasks_with_annotations:
          type: integer
          readOnly: true
          description: Tasks with annotations count
        task_number:
          type: integer
          readOnly: true
          description: Total task number in project
        useful_annotation_number:
          type: integer
          readOnly: true
          description: Useful annotation number in project not including skipped_annotations_number
            and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number
            + ground_truth_number
        ground_truth_number:
          type: integer
          readOnly: true
          description: Honeypot annotation number in project
        skipped_annotations_number:
          type: integer
          readOnly: true
          description: Skipped by collaborators annotation number in project
        total_annotations_number:
          type: integer
          readOnly: true
          description: Total annotations number in project including skipped_annotations_number
            and ground_truth_number.
        total_predictions_number:
          type: integer
          readOnly: true
          description: Total predictions number in project including skipped_annotations_number,
            ground_truth_number, and useful_annotation_number.
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        parsed_label_config:
          readOnly: true
          description: JSON-formatted labeling configuration
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        config_has_control_tags:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for labeling
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
        finished_task_number:
          type: integer
          readOnly: true
          description: Finished tasks
        queue_total:
          type: integer
          readOnly: true
        queue_done:
          type: integer
          readOnly: true
        config_suitable_for_bulk_annotation:
          type: boolean
          readOnly: true
          description: Flag to detect is project ready for bulk annotation
      required:
      - config_has_control_tags
      - config_suitable_for_bulk_annotation
      - created_at
      - finished_task_number
      - ground_truth_number
      - id
      - num_tasks_with_annotations
      - parsed_label_config
      - queue_done
      - queue_total
      - skipped_annotations_number
      - start_training_on_annotation_update
      - task_number
      - total_annotations_number
      - total_predictions_number
      - useful_annotation_number
    ProjectDuplicateRequest:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/ModeEnum'
          description: |-
            Data that you want to duplicate: settings only, with tasks, with annotations

            * `settings` - Only settings
            * `settings,data` - Settings and tasks
        workspace:
          type: integer
          description: Workspace, where to place duplicated project
        title:
          type: string
          minLength: 3
          description: Title of duplicated project
          maxLength: 50
        description:
          type: string
          default: ''
          description: Description of duplicated project
      required:
      - mode
      - title
      - workspace
    ProjectGroup:
      type: object
      properties:
        project_id:
          type: integer
        group:
          type: string
        role:
          $ref: '#/components/schemas/ProjectGroupRoleEnum'
      required:
      - group
      - project_id
      - role
    ProjectGroupRequest:
      type: object
      properties:
        project_id:
          type: integer
        group:
          type: string
          minLength: 1
        role:
          $ref: '#/components/schemas/ProjectGroupRoleEnum'
      required:
      - group
      - project_id
      - role
    ProjectGroupRoleEnum:
      enum:
      - Inherit
      - Annotator
      - Reviewer
      type: string
      description: |-
        * `Inherit` - Inherit
        * `Annotator` - Annotator
        * `Reviewer` - Reviewer
    ProjectImport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
          nullable: true
        preannotated_from_fields:
          nullable: true
        commit_to_project:
          type: boolean
        return_task_ids:
          type: boolean
        status:
          $ref: '#/components/schemas/Status7bfEnum'
        url:
          type: string
          nullable: true
          maxLength: 2048
        error:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Creation time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Updated time
        finished_at:
          type: string
          format: date-time
          nullable: true
          description: Complete or fail time
        task_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        annotation_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        prediction_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        file_upload_ids: {}
        could_be_tasks_list:
          type: boolean
        found_formats: {}
        data_columns: {}
        tasks:
          nullable: true
        task_ids: {}
      required:
      - created_at
      - id
      - updated_at
    ProjectLabelConfig:
      type: object
      properties:
        label_config:
          type: string
          description: Label config in XML format. See more about it in documentation
      required:
      - label_config
    ProjectLabelConfigRequest:
      type: object
      properties:
        label_config:
          type: string
          minLength: 1
          description: Label config in XML format. See more about it in documentation
      required:
      - label_config
    ProjectMember:
      type: object
      properties:
        user:
          type: integer
      required:
      - user
    ProjectMemberRequest:
      type: object
      properties:
        user:
          type: integer
      required:
      - user
    ProjectReimport:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/Status7bfEnum'
        error:
          type: string
          nullable: true
        task_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        annotation_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        prediction_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        file_upload_ids: {}
        files_as_tasks_list:
          type: boolean
        found_formats: {}
        data_columns: {}
      required:
      - id
    ProjectRequest:
      type: object
      description: |-
        Serializer get numbers from project queryset annotation,
        make sure, that you use correct one(Project.objects.with_counts())
      properties:
        title:
          type: string
          nullable: true
          description: Project name. Must be between 3 and 50 characters long.
          maxLength: 50
          minLength: 3
        description:
          type: string
          nullable: true
          description: Project description
        label_config:
          type: string
          nullable: true
          description: Label config in XML format. See more about it in documentation
        expert_instruction:
          type: string
          nullable: true
          description: Labeling instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the annotator before they start
        show_skip_button:
          type: boolean
          description: Show a skip button in interface and allow annotators to skip
            the task
        enable_empty_annotation:
          type: boolean
          description: Allow annotators to submit empty annotations
        show_annotation_history:
          type: boolean
          description: Show annotation history to annotator
        organization:
          type: integer
          nullable: true
        color:
          type: string
          nullable: true
          maxLength: 16
        maximum_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum annotation number
          description: Maximum number of annotations for one task. If the number of
            annotations per task is equal or greater to this value, the task is completed
            (is_labeled=True)
        is_published:
          type: boolean
          title: Published
          description: Whether or not the project is published to annotators
        model_version:
          type: string
          nullable: true
          description: Machine learning model version
        is_draft:
          type: boolean
          description: Whether or not the project is in the middle of being created
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimpleRequest'
          description: Project owner
        min_annotations_to_start_training:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum number of completed tasks after which model training
            is started
        show_collab_predictions:
          type: boolean
          title: Show predictions to annotator
          description: If set, the annotator can view model predictions
        sampling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SamplingEnum'
          - $ref: '#/components/schemas/NullEnum'
        show_ground_truth_first:
          type: boolean
        show_overlap_first:
          type: boolean
        overlap_cohort_percentage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        task_data_login:
          type: string
          nullable: true
          description: 'Task data credentials: login'
          maxLength: 256
        task_data_password:
          type: string
          nullable: true
          description: 'Task data credentials: password'
          maxLength: 256
        control_weights:
          nullable: true
          description: 'Dict of weights for each control tag in metric calculation.
            Each control tag (e.g. label or choice) will have it''s own key in control
            weight dict with weight for each label and overall weight.For example,
            if bounding box annotation with control tag named my_bbox should be included
            with 0.33 weight in agreement calculation, and the first label Car should
            be twice more important than Airplaine, then you have to need the specify:
            {''my_bbox'': {''type'': ''RectangleLabels'', ''labels'': {''Car'': 1.0,
            ''Airplaine'': 0.5}, ''overall'': 0.33}'
        evaluate_predictions_automatically:
          type: boolean
          description: Retrieve and display predictions when loading a task
        skip_queue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SkipQueueEnum'
          - $ref: '#/components/schemas/NullEnum'
        reveal_preannotations_interactively:
          type: boolean
          description: Reveal pre-annotations interactively
        pinned_at:
          type: string
          format: date-time
          nullable: true
          description: Pinned date and time
    ProjectRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/Role9e7Enum'
          description: |-
            User role in project

            * `OW` - Owner
            * `AD` - Administrator
            * `MA` - Manager
            * `RE` - Reviewer
            * `AN` - Annotator
            * `DI` - Deactivated
            * `NO` - Not Activated
        user:
          type: integer
        project:
          type: integer
      required:
      - id
      - project
      - role
      - user
    ProjectRoleRequest:
      type: object
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/Role9e7Enum'
          description: |-
            User role in project

            * `OW` - Owner
            * `AD` - Administrator
            * `MA` - Manager
            * `RE` - Reviewer
            * `AN` - Annotator
            * `DI` - Deactivated
            * `NO` - Not Activated
        user:
          type: integer
        project:
          type: integer
      required:
      - project
      - role
      - user
    ProjectSubsetEnum:
      enum:
      - All
      - HasGT
      - Sample
      type: string
      description: |-
        * `All` - All
        * `HasGT` - HasGT
        * `Sample` - Sample
    ProjectTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1000
        description:
          type: string
          nullable: true
        tags: {}
        project_settings:
          description: general dict serialized project settings
        review_settings:
          description: general dict serialized review settings
        assignment_settings:
          description: general dict serialized assignment settings
        require_comment_on_skip:
          type: boolean
          description: flag to require comment on skip
        custom_script:
          type: string
          nullable: true
          description: custom script for projects created from this template
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ProjectTemplateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 1000
        description:
          type: string
          nullable: true
          minLength: 1
        tags: {}
        project_settings:
          description: general dict serialized project settings
        review_settings:
          description: general dict serialized review settings
        assignment_settings:
          description: general dict serialized assignment settings
        require_comment_on_skip:
          type: boolean
          description: flag to require comment on skip
        custom_script:
          type: string
          nullable: true
          minLength: 1
          description: custom script for projects created from this template
        created_by:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
      required:
      - name
    ProviderEnum:
      enum:
      - OpenAI
      - AzureOpenAI
      - AzureAIFoundry
      - VertexAI
      - Gemini
      - Anthropic
      - Custom
      type: string
      description: |-
        * `OpenAI` - OpenAI
        * `AzureOpenAI` - AzureOpenAI
        * `AzureAIFoundry` - AzureAIFoundry
        * `VertexAI` - VertexAI
        * `Gemini` - Gemini
        * `Anthropic` - Anthropic
        * `Custom` - Custom
    ReasonEnum:
      enum:
      - MANUAL
      - BEHAVIOR_BASED
      - ANNOTATOR_EVALUATION
      - ANNOTATION_LIMIT
      - CUSTOM_SCRIPT
      type: string
      description: |-
        * `MANUAL` - Manual
        * `BEHAVIOR_BASED` - Behavior-based
        * `ANNOTATOR_EVALUATION` - Annotator evaluation
        * `ANNOTATION_LIMIT` - Annotation limit
        * `CUSTOM_SCRIPT` - Custom script
    RedisExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: redis
        synchronizable:
          type: boolean
          default: true
        path:
          type: string
          nullable: true
          description: Storage prefix (optional)
        host:
          type: string
          nullable: true
          description: Server Host IP (optional)
        port:
          type: string
          nullable: true
          description: Server Port (optional)
        password:
          type: string
          nullable: true
          description: Server Password (optional)
        regex_filter:
          type: string
          nullable: true
          title: Port
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        db:
          type: integer
          maximum: 32767
          minimum: 0
          description: Server Database
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    RedisImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: redis
        synchronizable:
          type: boolean
          default: true
        path:
          type: string
          nullable: true
          description: Storage prefix (optional)
        host:
          type: string
          nullable: true
          description: Server Host IP (optional)
        port:
          type: string
          nullable: true
          description: Server Port (optional)
        password:
          type: string
          nullable: true
          description: Server Password (optional)
        regex_filter:
          type: string
          nullable: true
          title: Port
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        db:
          type: integer
          maximum: 32767
          minimum: 0
          description: Server Database
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    RequeueRejectedTasksModeEnum:
      enum:
      - requeue
      - remove
      - flexible
      type: string
      description: |-
        * `requeue` - Requeue
        * `remove` - Remove
        * `flexible` - Flexible
    ReviewCriteriaEnum:
      enum:
      - all
      - one
      type: string
      description: |-
        * `all` - Task is reviewed if all annotations are reviewed
        * `one` - Task is reviewed if at least one annotation is reviewed
    ReviewSettings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        requeue_rejected_tasks_to_annotator:
          type: boolean
          readOnly: true
        review_criteria:
          nullable: true
          description: |-
            Criteria to mark task as reviewed

            * `all` - Task is reviewed if all annotations are reviewed
            * `one` - Task is reviewed if at least one annotation is reviewed
          oneOf:
          - $ref: '#/components/schemas/ReviewCriteriaEnum'
          - $ref: '#/components/schemas/NullEnum'
        anonymize_annotations:
          type: boolean
          description: Hide annotator names from annotations while review
        only_finished_tasks:
          type: boolean
          description: Show only finished tasks in the review stream
        instruction:
          type: string
          nullable: true
          description: Reviewer instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the reviewers before they start
        show_data_manager_to_reviewers:
          type: boolean
          description: Show the data manager to reviewers
        show_agreement_to_reviewers:
          type: boolean
          description: Show the agreement column to reviewers
        require_comment_on_reject:
          type: boolean
          description: If set, the reviewer must leave a comment on reject
        requeue_rejected_tasks_mode:
          nullable: true
          description: |-
            Requeue mode for rejected tasks

            * `requeue` - Requeue
            * `remove` - Remove
            * `flexible` - Flexible
          oneOf:
          - $ref: '#/components/schemas/RequeueRejectedTasksModeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        review_only_manual_assignments:
          type: boolean
          description: When set True, review queue is built only from manually assigned
            tasks
        project:
          type: integer
          nullable: true
      required:
      - id
      - requeue_rejected_tasks_to_annotator
    ReviewSettingsRequest:
      type: object
      properties:
        review_criteria:
          nullable: true
          description: |-
            Criteria to mark task as reviewed

            * `all` - Task is reviewed if all annotations are reviewed
            * `one` - Task is reviewed if at least one annotation is reviewed
          oneOf:
          - $ref: '#/components/schemas/ReviewCriteriaEnum'
          - $ref: '#/components/schemas/NullEnum'
        anonymize_annotations:
          type: boolean
          description: Hide annotator names from annotations while review
        only_finished_tasks:
          type: boolean
          description: Show only finished tasks in the review stream
        instruction:
          type: string
          nullable: true
          description: Reviewer instructions in HTML format
        show_instruction:
          type: boolean
          description: Show instructions to the reviewers before they start
        show_data_manager_to_reviewers:
          type: boolean
          description: Show the data manager to reviewers
        show_agreement_to_reviewers:
          type: boolean
          description: Show the agreement column to reviewers
        require_comment_on_reject:
          type: boolean
          description: If set, the reviewer must leave a comment on reject
        requeue_rejected_tasks_mode:
          nullable: true
          description: |-
            Requeue mode for rejected tasks

            * `requeue` - Requeue
            * `remove` - Remove
            * `flexible` - Flexible
          oneOf:
          - $ref: '#/components/schemas/RequeueRejectedTasksModeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        review_only_manual_assignments:
          type: boolean
          description: When set True, review queue is built only from manually assigned
            tasks
        project:
          type: integer
          nullable: true
    ReviewedEnum:
      enum:
      - only
      - exclude
      description: |-
        * `only` - only
        * `exclude` - exclude
        * `None` - None
    RevokeInviteRequest:
      type: object
      properties:
        email:
          type: string
          minLength: 1
      required:
      - email
    Role9e7Enum:
      enum:
      - OW
      - AD
      - MA
      - RE
      - AN
      - DI
      - 'NO'
      type: string
      description: |-
        * `OW` - Owner
        * `AD` - Administrator
        * `MA` - Manager
        * `RE` - Reviewer
        * `AN` - Annotator
        * `DI` - Deactivated
        * `NO` - Not Activated
    RoleBasedTask:
      oneOf:
      - $ref: '#/components/schemas/LseTask'
      - $ref: '#/components/schemas/LseTaskSerializerForReviewers'
      - $ref: '#/components/schemas/LseTaskSerializerForAnnotators'
    S3DatasetStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: s3
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        job_id:
          type: string
          readOnly: true
          nullable: true
          title: The Job ID for the GCP Dataproc job that will import the records
            of this dataset into the vector db
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
      required:
      - created_at
      - dataset
      - id
      - job_id
      - type
    S3DatasetStorageRequest:
      type: object
      properties:
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        glob_pattern:
          type: string
          nullable: true
          description: Glob pattern for syncing from bucket
        synced:
          type: boolean
          description: Flag if dataset has been previously synced or not
        dataset:
          type: integer
          description: A unique integer value identifying this dataset.
      required:
      - dataset
    S3ExportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: s3
        synchronizable:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        can_delete_objects:
          type: boolean
          nullable: true
          description: Deletion from storage enabled
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    S3ImportStorage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          default: s3
        synchronizable:
          type: boolean
          default: true
        presign:
          type: boolean
          default: true
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Last sync finished time
        last_sync_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Count of tasks synced last time
        last_sync_job:
          type: string
          nullable: true
          description: Last sync job ID
          maxLength: 256
        status:
          $ref: '#/components/schemas/StatusD14Enum'
        traceback:
          type: string
          nullable: true
          description: Traceback report for the last failed sync
        meta:
          nullable: true
          description: Meta and debug information about storage processes
        title:
          type: string
          nullable: true
          description: Cloud storage title
          maxLength: 256
        description:
          type: string
          nullable: true
          description: Cloud storage description
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        bucket:
          type: string
          nullable: true
          description: S3 bucket name
        prefix:
          type: string
          nullable: true
          description: S3 bucket prefix
        regex_filter:
          type: string
          nullable: true
          description: Cloud storage regex for filtering objects
        use_blob_urls:
          type: boolean
          description: Interpret objects as BLOBs and generate URLs
        aws_access_key_id:
          type: string
          nullable: true
          description: AWS_ACCESS_KEY_ID
        aws_secret_access_key:
          type: string
          nullable: true
          description: AWS_SECRET_ACCESS_KEY
        aws_session_token:
          type: string
          nullable: true
          description: AWS_SESSION_TOKEN
        aws_sse_kms_key_id:
          type: string
          nullable: true
          description: AWS SSE KMS Key ID
        region_name:
          type: string
          nullable: true
          description: AWS Region
        s3_endpoint:
          type: string
          nullable: true
          description: S3 Endpoint
        presign_ttl:
          type: integer
          maximum: 32767
          minimum: 0
          description: Presigned URLs TTL (in minutes)
        recursive_scan:
          type: boolean
          description: Perform recursive scan over the bucket content
        project:
          type: integer
          description: A unique integer value identifying this project.
      required:
      - created_at
      - id
      - project
      - type
    SamlSettings:
      type: object
      properties:
        workspaces_groups:
          nullable: true
          description: Workspaces to groups mapping
        roles_groups:
          nullable: true
          description: Roles to groups mapping
        projects_groups:
          nullable: true
          description: Projects to groups mapping
    SamlSettingsUpdate:
      type: object
      properties:
        workspaces_groups:
          type: array
          items:
            type: array
            items:
              type: string
        roles_groups:
          type: array
          items:
            type: array
            items:
              type: string
        projects_groups:
          type: array
          items:
            $ref: '#/components/schemas/ProjectGroup'
    SamlSettingsUpdateRequest:
      type: object
      properties:
        workspaces_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        roles_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        projects_groups:
          type: array
          items:
            $ref: '#/components/schemas/ProjectGroupRequest'
    SamplingEnum:
      enum:
      - Sequential sampling
      - Uniform sampling
      - Uncertainty sampling
      type: string
      description: |-
        * `Sequential sampling` - Tasks are ordered by Data manager ordering
        * `Uniform sampling` - Tasks are chosen randomly
        * `Uncertainty sampling` - Tasks are chosen according to model uncertainty scores (active learning mode)
    ScimSettings:
      type: object
      properties:
        workspaces_groups:
          nullable: true
          description: Workspaces to groups mapping
        roles_groups:
          nullable: true
          description: Roles to groups mapping
        projects_groups:
          nullable: true
          description: Projects to groups mapping
    ScimSettingsUpdate:
      type: object
      properties:
        workspaces_groups:
          type: array
          items:
            type: array
            items:
              type: string
        roles_groups:
          type: array
          items:
            type: array
            items:
              type: string
        projects_groups:
          type: array
          items:
            $ref: '#/components/schemas/ProjectGroup'
    ScimSettingsUpdateRequest:
      type: object
      properties:
        workspaces_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        roles_groups:
          type: array
          items:
            type: array
            items:
              type: string
              minLength: 1
        projects_groups:
          type: array
          items:
            $ref: '#/components/schemas/ProjectGroupRequest'
    ScopeEnum:
      enum:
      - Organization
      - User
      - Model
      type: string
      description: |-
        * `Organization` - Organization
        * `User` - User
        * `Model` - Model
    SendInviteRequest:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
            minLength: 1
        role:
          type: string
          minLength: 1
      required:
      - emails
      - role
    SerializationOption:
      type: object
      properties:
        only_id:
          type: boolean
          default: false
          description: Include a full json body or IDs only
    SerializationOptionRequest:
      type: object
      properties:
        only_id:
          type: boolean
          default: false
          description: Include a full json body or IDs only
    SerializationOptions:
      type: object
      properties:
        drafts:
          allOf:
          - $ref: '#/components/schemas/SerializationOption'
          description: JSON dict with parameters
        predictions:
          allOf:
          - $ref: '#/components/schemas/SerializationOption'
          description: JSON dict with parameters
        include_annotation_history:
          type: boolean
          default: false
          description: Include annotation history
        annotations__completed_by:
          allOf:
          - $ref: '#/components/schemas/SerializationOption'
          description: JSON dict with parameters
        interpolate_key_frames:
          type: boolean
          default: false
          description: Interpolate video key frames
    SerializationOptionsRequest:
      type: object
      properties:
        drafts:
          allOf:
          - $ref: '#/components/schemas/SerializationOptionRequest'
          description: JSON dict with parameters
        predictions:
          allOf:
          - $ref: '#/components/schemas/SerializationOptionRequest'
          description: JSON dict with parameters
        include_annotation_history:
          type: boolean
          default: false
          description: Include annotation history
        annotations__completed_by:
          allOf:
          - $ref: '#/components/schemas/SerializationOptionRequest'
          description: JSON dict with parameters
        interpolate_key_frames:
          type: boolean
          default: false
          description: Interpolate video key frames
    SessionTimeoutPolicy:
      type: object
      properties:
        max_session_age:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Max session age (minutes)
          description: Number of minutes that a session can be active before needing
            to re-login
        max_time_between_activity:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Max time (minutes) between activity
          description: Number of minutes that a session stays active without any activity
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    SkillNameEnum:
      enum:
      - TextClassification
      - NamedEntityRecognition
      type: string
      description: |-
        * `TextClassification` - TextClassification
        * `NamedEntityRecognition` - NamedEntityRecognition
    SkipQueueEnum:
      enum:
      - REQUEUE_FOR_ME
      - REQUEUE_FOR_OTHERS
      - IGNORE_SKIPPED
      type: string
      description: |-
        * `REQUEUE_FOR_ME` - Requeue for me
        * `REQUEUE_FOR_OTHERS` - Requeue for others
        * `IGNORE_SKIPPED` - Ignore skipped
    SkippedEnum:
      enum:
      - only
      - exclude
      description: |-
        * `only` - only
        * `exclude` - exclude
        * `None` - None
    StateEnum:
      enum:
      - CO
      - DI
      - ER
      - TR
      - PR
      type: string
      description: |-
        * `CO` - Connected
        * `DI` - Disconnected
        * `ER` - Error
        * `TR` - Training
        * `PR` - Predicting
    Status7bfEnum:
      enum:
      - created
      - in_progress
      - failed
      - completed
      type: string
      description: |-
        * `created` - Created
        * `in_progress` - In progress
        * `failed` - Failed
        * `completed` - Completed
    StatusD14Enum:
      enum:
      - initialized
      - queued
      - in_progress
      - failed
      - completed
      type: string
      description: |-
        * `initialized` - Initialized
        * `queued` - Queued
        * `in_progress` - In progress
        * `failed` - Failed
        * `completed` - Completed
    TaskAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time of assignment
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Assignment type
          description: |-
            Type of assignment: Annotate|Review

            * `AN` - Annotate
            * `RE` - Review
        assignee:
          type: integer
          description: Assigned user
        task:
          type: integer
          description: Assigned task
      required:
      - assignee
      - created_at
      - id
      - task
    TaskAssignmentRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Assignment type
          description: |-
            Type of assignment: Annotate|Review

            * `AN` - Annotate
            * `RE` - Review
        assignee:
          type: integer
          description: Assigned user
        task:
          type: integer
          description: Assigned task
      required:
      - assignee
      - task
    TaskSimple:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          description: User imported or uploaded data for a task. Data is formatted
            according to the project label config. You can find examples of data for
            your project on the Import page in the Label Studio Data Manager UI.
        meta:
          nullable: true
          description: Meta is user imported (uploaded) data and can be useful as
            input for an ML Backend for embeddings, advanced vectors, and other info.
            It is passed to ML during training/predicting steps.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Time a task was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last time a task was updated
        is_labeled:
          type: boolean
          description: True if the number of annotations for this task is greater
            than or equal to the number of maximum_completions for the project
        overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of distinct annotators that processed the current task
        inner_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: Internal task ID in the project, starts with 1
        total_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total annotations for the current task except cancelled
            annotations
        cancelled_annotations:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total cancelled annotations for the current task
        total_predictions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of total predictions for the current task
        comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of comments in the task including all annotations
        unresolved_comment_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of unresolved comments in the task including all annotations
        last_comment_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the last comment was updated
        project:
          type: integer
          nullable: true
          description: Project ID for this task
        updated_by:
          type: integer
          nullable: true
          description: Last annotator or reviewer who updated this task
        file_upload:
          type: integer
          nullable: true
          description: Uploaded file used as data source for this task
        comment_authors:
          type: array
          items:
            type: integer
          description: Users who wrote comments
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
          readOnly: true
          default: []
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/Prediction'
          readOnly: true
          default: []
      required:
      - annotations
      - created_at
      - data
      - id
      - predictions
      - updated_at
    ThirdPartyModelVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserSimple'
          readOnly: true
          description: User who created Dataset
        score:
          type: string
          readOnly: true
        title:
          type: string
          description: Model name
          maxLength: 500
        prompt:
          type: string
          description: Prompt to execute
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: |-
            The model provider to use e.g. OpenAI

            * `OpenAI` - OpenAI
            * `AzureOpenAI` - AzureOpenAI
            * `AzureAIFoundry` - AzureAIFoundry
            * `VertexAI` - VertexAI
            * `Gemini` - Gemini
            * `Anthropic` - Anthropic
            * `Custom` - Custom
        provider_model_id:
          type: string
          description: The model ID to use within the given provider, e.g. gpt-3.5
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        parent_model:
          type: integer
        model_provider_connection:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - parent_model
      - prompt
      - provider_model_id
      - score
      - title
      - updated_at
    ThirdPartyModelVersionRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: Model name
          maxLength: 500
        prompt:
          type: string
          minLength: 1
          description: Prompt to execute
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: |-
            The model provider to use e.g. OpenAI

            * `OpenAI` - OpenAI
            * `AzureOpenAI` - AzureOpenAI
            * `AzureAIFoundry` - AzureAIFoundry
            * `VertexAI` - VertexAI
            * `Gemini` - Gemini
            * `Anthropic` - Anthropic
            * `Custom` - Custom
        provider_model_id:
          type: string
          minLength: 1
          description: The model ID to use within the given provider, e.g. gpt-3.5
          maxLength: 255
        parent_model:
          type: integer
        model_provider_connection:
          type: integer
          nullable: true
        organization:
          type: integer
          nullable: true
      required:
      - parent_model
      - prompt
      - provider_model_id
      - title
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenRefreshResponse:
      type: object
      properties:
        access:
          type: string
      required:
      - access
    TokenRotateResponse:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    TrialRoleEnum:
      enum:
      - annotator
      - annotator_team_manager
      - business_analyst
      - business_or_data_team_leadership
      - data_engineer_platform_engineer
      - data_scientist
      - other
      type: string
      description: |-
        * `annotator` - Annotator
        * `annotator_team_manager` - Annotator Team Manager
        * `business_analyst` - Business Analyst
        * `business_or_data_team_leadership` - Business Or Data Team Leadership
        * `data_engineer_platform_engineer` - Data Engineer Platform Engineer
        * `data_scientist` - Data Scientist
        * `other` - Other
    TypeEnum:
      enum:
      - AN
      - RE
      type: string
      description: |-
        * `AN` - Annotate
        * `RE` - Review
    UserSimple:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          readOnly: true
      required:
      - avatar
      - id
    UserSimpleRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
    VersionResponse:
      type: object
      properties:
        release:
          type: string
          description: Current release version of Label Studio
        label-studio-os-package:
          description: Information about the Label Studio open source package
        label-studio-os-backend:
          description: Information about the Label Studio backend
        label-studio-frontend:
          description: Information about the Label Studio frontend
        dm2:
          description: Information about the Data Manager 2.0 component
        label-studio-converter:
          description: Information about the Label Studio converter component
        edition:
          allOf:
          - $ref: '#/components/schemas/EditionEnum'
          description: |-
            Label Studio edition (Community or Enterprise)

            * `Community` - Community
            * `Enterprise` - Enterprise
        lsf:
          description: Information about the Label Studio Frontend library
        backend:
          description: Additional backend information
      required:
      - backend
      - dm2
      - edition
      - label-studio-converter
      - label-studio-frontend
      - label-studio-os-backend
      - label-studio-os-package
      - lsf
      - release
    View:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filter_group:
          $ref: '#/components/schemas/FilterGroup'
        data:
          nullable: true
          description: Custom view data
        ordering:
          nullable: true
          description: Ordering parameters
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Position of the tab, starting at the left in data manager and
            increasing as the tabs go left to right
        selected_items:
          nullable: true
          description: Selected items
        user:
          type: integer
          nullable: true
          description: User who made this view
        project:
          type: integer
          description: Project ID
      required:
      - id
      - project
    ViewOrderRequest:
      type: object
      properties:
        project:
          type: integer
        ids:
          type: array
          items:
            type: integer
          description: A list of view IDs in the desired order.
      required:
      - ids
      - project
    Webhook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          type: integer
          readOnly: true
        project:
          type: integer
          nullable: true
        url:
          type: string
          format: uri
          title: URL of webhook
          description: URL of webhook
          maxLength: 2048
        send_payload:
          type: boolean
          title: Does webhook send the payload
          description: If value is False send only action
        send_for_all_actions:
          type: boolean
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
        is_active:
          type: boolean
          title: Is webhook active
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionsEnum'
          default: []
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last update time
      required:
      - created_at
      - id
      - organization
      - updated_at
      - url
    WebhookRequest:
      type: object
      properties:
        project:
          type: integer
          nullable: true
        url:
          type: string
          format: uri
          minLength: 1
          title: URL of webhook
          description: URL of webhook
          maxLength: 2048
        send_payload:
          type: boolean
          title: Does webhook send the payload
          description: If value is False send only action
        send_for_all_actions:
          type: boolean
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
        is_active:
          type: boolean
          title: Is webhook active
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionsEnum'
          default: []
      required:
      - url
    WebhookSerializerForUpdate:
      type: object
      description: |-
        Serializer class for updating webhooks

        Used to forbid updating project field.
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          type: integer
          readOnly: true
        project:
          type: integer
          readOnly: true
          nullable: true
        url:
          type: string
          format: uri
          title: URL of webhook
          description: URL of webhook
          maxLength: 2048
        send_payload:
          type: boolean
          title: Does webhook send the payload
          description: If value is False send only action
        send_for_all_actions:
          type: boolean
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
        is_active:
          type: boolean
          title: Is webhook active
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionsEnum'
          default: []
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last update time
      required:
      - created_at
      - id
      - organization
      - project
      - updated_at
      - url
    WebhookSerializerForUpdateRequest:
      type: object
      description: |-
        Serializer class for updating webhooks

        Used to forbid updating project field.
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          title: URL of webhook
          description: URL of webhook
          maxLength: 2048
        send_payload:
          type: boolean
          title: Does webhook send the payload
          description: If value is False send only action
        send_for_all_actions:
          type: boolean
          title: Use webhook for all actions
          description: If value is False - used only for actions from WebhookAction
        headers:
          title: Request extra headers of webhook
          description: Key Value Json of headers
        is_active:
          type: boolean
          title: Is webhook active
          description: If value is False the webhook is disabled
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionsEnum'
          default: []
      required:
      - url
    Workspace:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Workspace name
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Workspace description
        color:
          type: string
          nullable: true
          maxLength: 16
        is_personal:
          type: boolean
          title: Personal
          description: Workspace is a personal user workspace
        is_archived:
          type: boolean
          title: Archived
          description: Workspace is archived
        created_by:
          type: integer
          readOnly: true
      required:
      - created_by
      - id
      - title
    WorkspaceMemberCreate:
      type: object
      properties:
        user:
          type: integer
          description: User ID
        workspace:
          type: integer
          description: Workspace ID
      required:
      - user
    WorkspaceMemberCreateRequest:
      type: object
      properties:
        user:
          type: integer
          description: User ID
        workspace:
          type: integer
          description: Workspace ID
      required:
      - user
    WorkspaceRequest:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        title:
          type: string
          minLength: 1
          description: Workspace name
          maxLength: 1000
        description:
          type: string
          nullable: true
          description: Workspace description
        color:
          type: string
          nullable: true
          maxLength: 16
        is_personal:
          type: boolean
          title: Personal
          description: Workspace is a personal user workspace
        is_archived:
          type: boolean
          title: Archived
          description: Workspace is archived
      required:
      - title
  securitySchemes:
    Token:
      type: apiKey
      name: Authorization
      in: header
      description: 'The token (or API key) must be passed as a request header. You
        can find your user token on the User Account page in Label Studio. Example:
        <br><pre><code class="language-bash">curl https://label-studio-host/api/projects
        -H "Authorization: Token [your-token]"</code></pre>'
