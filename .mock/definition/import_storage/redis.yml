imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /api/storages/redis/
      method: GET
      auth: true
      docs: >

        You can connect your Redis database to Label Studio as a source storage
        or target storage. Use this API request to get a list of all Redis
        import (source) storage connections for a specific project. 


        The project ID can be found in the URL when viewing the project in Label
        Studio, or you can retrieve all project IDs using [List all
        projects](../projects/list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      display-name: List import storages
      request:
        name: RedisListRequest
        query-parameters:
          project:
            type: optional<integer>
            docs: Project ID
      response:
        docs: ''
        type: list<root.RedisImportStorage>
      examples:
        - response:
            body:
              - id: 1
                type: type
                synchronizable: true
                path: path
                host: host
                port: port
                password: password
                regex_filter: regex_filter
                use_blob_urls: true
                last_sync: '2024-01-15T09:30:00Z'
                last_sync_count: 1
                last_sync_job: last_sync_job
                status: initialized
                traceback: traceback
                meta:
                  key: value
                title: title
                description: description
                created_at: '2024-01-15T09:30:00Z'
                db: 1
                project: 1
      audiences:
        - public
    create:
      path: /api/storages/redis/
      method: POST
      auth: true
      docs: >

        Create a new source storage connection to a Redis database. 


        For information about the required fields and prerequisites, see [Redis
        database](https://labelstud.io/guide/storage#Redis-database) in the
        Label Studio documentation. 


        <Tip>After you add the storage, you should validate the connection
        before attempting to sync your data. Your data will not be imported
        until you [sync your connection](sync).</Tip>
      display-name: Create import storage
      request:
        name: RedisCreateRequest
        body:
          properties:
            regex_filter:
              type: optional<string>
              docs: >-
                Cloud storage regex for filtering objects. You must specify it
                otherwise no objects will be imported.
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your bucket contains images, you can use this option to generate
                URLs for these images. If set to False, it will read the content
                of the file and load it into Label Studio.
              default: false
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            path:
              type: optional<string>
              docs: Storage prefix (optional)
            host:
              type: optional<string>
              docs: Server Host IP (optional)
            port:
              type: optional<string>
              docs: Server Port (optional)
            password:
              type: optional<string>
              docs: Server Password (optional)
      response:
        docs: ''
        type: RedisCreateResponse
      examples:
        - request: {}
          response:
            body:
              regex_filter: regex_filter
              use_blob_urls: true
              title: title
              description: description
              project: 1
              path: path
              host: host
              port: port
              password: password
      audiences:
        - public
    validate:
      path: /api/storages/redis/validate
      method: POST
      auth: true
      docs: >

        Validate a specific Redis import storage connection. This is useful to
        ensure that the storage configuration settings are correct and
        operational before attempting to import data.
      display-name: Validate import storage
      request:
        name: RedisValidateRequest
        body:
          properties:
            id:
              type: optional<integer>
              docs: Storage ID. If set, storage with specified ID will be updated
            regex_filter:
              type: optional<string>
              docs: >-
                Cloud storage regex for filtering objects. You must specify it
                otherwise no objects will be imported.
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your bucket contains images, you can use this option to generate
                URLs for these images. If set to False, it will read the content
                of the file and load it into Label Studio.
              default: false
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            path:
              type: optional<string>
              docs: Storage prefix (optional)
            host:
              type: optional<string>
              docs: Server Host IP (optional)
            port:
              type: optional<string>
              docs: Server Port (optional)
            password:
              type: optional<string>
              docs: Server Password (optional)
      examples:
        - request: {}
      audiences:
        - public
    get:
      path: /api/storages/redis/{id}
      method: GET
      auth: true
      docs: >

        Get a specific Redis import storage connection. You will need to provide
        the import storage ID. You can find this using [List import
        storages](list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this redis import storage.
      display-name: Get import storage
      response:
        docs: ''
        type: root.RedisImportStorage
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              type: type
              synchronizable: true
              path: path
              host: host
              port: port
              password: password
              regex_filter: regex_filter
              use_blob_urls: true
              last_sync: '2024-01-15T09:30:00Z'
              last_sync_count: 1
              last_sync_job: last_sync_job
              status: initialized
              traceback: traceback
              meta:
                key: value
              title: title
              description: description
              created_at: '2024-01-15T09:30:00Z'
              db: 1
              project: 1
      audiences:
        - public
    delete:
      path: /api/storages/redis/{id}
      method: DELETE
      auth: true
      docs: >

        Delete a specific Redis import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        Deleting a source storage connection does not affect tasks with synced
        data in Label Studio. The sync process is designed to import new or
        updated tasks from the connected storage into the project, but it does
        not track deletions of files from the storage. Therefore, if you remove
        the external storage connection, the tasks that were created from that
        storage will remain in the project.


        If you want to remove the tasks that were synced from the external
        storage, you will need to delete them manually from within the Label
        Studio UI or use the [Delete tasks](../../tasks/delete-all-tasks) API. 
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this redis import storage.
      display-name: Delete import storage
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    update:
      path: /api/storages/redis/{id}
      method: PATCH
      auth: true
      docs: >

        Update a specific Redis import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this redis import storage.
      display-name: Update import storage
      request:
        name: RedisUpdateRequest
        body:
          properties:
            regex_filter:
              type: optional<string>
              docs: >-
                Cloud storage regex for filtering objects. You must specify it
                otherwise no objects will be imported.
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your bucket contains images, you can use this option to generate
                URLs for these images. If set to False, it will read the content
                of the file and load it into Label Studio.
              default: false
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            path:
              type: optional<string>
              docs: Storage prefix (optional)
            host:
              type: optional<string>
              docs: Server Host IP (optional)
            port:
              type: optional<string>
              docs: Server Port (optional)
            password:
              type: optional<string>
              docs: Server Password (optional)
      response:
        docs: ''
        type: RedisUpdateResponse
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              regex_filter: regex_filter
              use_blob_urls: true
              title: title
              description: description
              project: 1
              path: path
              host: host
              port: port
              password: password
      audiences:
        - public
    sync:
      path: /api/storages/redis/{id}/sync
      method: POST
      auth: true
      docs: >

        Sync tasks from a Redis import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        Sync operations with external databases only go one way. They either
        create tasks from objects in the database (source/import storage) or
        push annotations to the output database (export/target storage).
        Changing something on the database side doesn’t guarantee consistency in
        results.


        <Note>Before proceeding, you should review [How sync operations work -
        Source storage](https://labelstud.io/guide/storage#Source-storage) to
        ensure that your data remains secure and private.</Note> 
      path-parameters:
        id:
          type: integer
          docs: Storage ID
      display-name: Sync import storage
      response:
        docs: ''
        type: root.RedisImportStorage
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              type: type
              synchronizable: true
              path: path
              host: host
              port: port
              password: password
              regex_filter: regex_filter
              use_blob_urls: true
              last_sync: '2024-01-15T09:30:00Z'
              last_sync_count: 1
              last_sync_job: last_sync_job
              status: initialized
              traceback: traceback
              meta:
                key: value
              title: title
              description: description
              created_at: '2024-01-15T09:30:00Z'
              db: 1
              project: 1
      audiences:
        - public
  source:
    openapi: openapi/openapi.yaml
types:
  RedisCreateResponse:
    properties:
      regex_filter:
        type: optional<string>
        docs: >-
          Cloud storage regex for filtering objects. You must specify it
          otherwise no objects will be imported.
      use_blob_urls:
        type: optional<boolean>
        docs: >-
          Interpret objects as BLOBs and generate URLs. For example, if your
          bucket contains images, you can use this option to generate URLs for
          these images. If set to False, it will read the content of the file
          and load it into Label Studio.
        default: false
      title:
        type: optional<string>
        docs: Storage title
      description:
        type: optional<string>
        docs: Storage description
      project:
        type: optional<integer>
        docs: Project ID
      path:
        type: optional<string>
        docs: Storage prefix (optional)
      host:
        type: optional<string>
        docs: Server Host IP (optional)
      port:
        type: optional<string>
        docs: Server Port (optional)
      password:
        type: optional<string>
        docs: Server Password (optional)
    source:
      openapi: openapi/openapi.yaml
  RedisUpdateResponse:
    properties:
      regex_filter:
        type: optional<string>
        docs: >-
          Cloud storage regex for filtering objects. You must specify it
          otherwise no objects will be imported.
      use_blob_urls:
        type: optional<boolean>
        docs: >-
          Interpret objects as BLOBs and generate URLs. For example, if your
          bucket contains images, you can use this option to generate URLs for
          these images. If set to False, it will read the content of the file
          and load it into Label Studio.
        default: false
      title:
        type: optional<string>
        docs: Storage title
      description:
        type: optional<string>
        docs: Storage description
      project:
        type: optional<integer>
        docs: Project ID
      path:
        type: optional<string>
        docs: Storage prefix (optional)
      host:
        type: optional<string>
        docs: Server Host IP (optional)
      port:
        type: optional<string>
        docs: Server Port (optional)
      password:
        type: optional<string>
        docs: Server Password (optional)
    source:
      openapi: openapi/openapi.yaml
