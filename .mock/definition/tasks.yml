imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_many_status:
      path: /api/projects/{id}/imports/{import_pk}/
      method: GET
      auth: true
      docs: Return data related to async project import operation
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this project import.
        import_pk: integer
      display-name: Get project import info
      response:
        docs: ''
        type: root.ProjectImport
      examples:
        - path-parameters:
            id: 1
            import_pk: 1
          response:
            body:
              id: 1
              project: 1
              preannotated_from_fields:
                key: value
              commit_to_project: true
              return_task_ids: true
              status: created
              url: url
              error: error
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              finished_at: '2024-01-15T09:30:00Z'
              task_count: 1
              annotation_count: 1
              prediction_count: 1
              duration: 1
              file_upload_ids:
                key: value
              could_be_tasks_list: true
              found_formats:
                key: value
              data_columns:
                key: value
              tasks:
                key: value
              task_ids:
                key: value
      audiences:
        - public
    delete_all_tasks:
      path: /api/projects/{id}/tasks/
      method: DELETE
      auth: true
      docs: Delete all tasks from a specific project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this project.
      display-name: Delete all tasks
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    list:
      path: /api/tasks/
      method: GET
      auth: true
      docs: >-
        Retrieve a paginated list of tasks. The response format varies based on
        the user's role in the organization:

        - **Admin/Owner**: Full task details with all annotations, reviews, and
        metadata

        - **Reviewer**: Task details optimized for review workflow

        - **Annotator**: Task details filtered to show only user's own
        annotations and assignments
      pagination:
        offset: $request.page
        results: $response.tasks
      source:
        openapi: openapi/openapi.yaml
      display-name: List tasks
      request:
        name: TasksListRequest
        query-parameters:
          fields:
            type: optional<TasksListRequestFields>
            docs: >-
              Set to "all" if you want to include annotations and predictions in
              the response. Defaults to task_only
          include:
            type: optional<string>
            docs: Specify which fields to include in the response
          only_annotated:
            type: optional<boolean>
            docs: Filter to show only tasks that have annotations
          page:
            type: optional<integer>
            docs: A page number within the paginated result set.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          project:
            type: optional<integer>
            docs: Project ID
          query:
            type: optional<string>
            docs: >-
              Additional query to filter tasks. It must be JSON encoded string
              of dict containing one of the following parameters: {"filters":
              ..., "selectedItems": ..., "ordering": ...}. Check Data Manager >
              Create View > see data field for more details about filters,
              selectedItems and ordering.


              filters: dict with "conjunction" string ("or" or "and") and list
              of filters in "items" array. Each filter is a dictionary with
              keys: "filter", "operator", "type", "value". Read more about
              available filters

              Example: {"conjunction": "or", "items": [{"filter":
              "filter:tasks:completed_at", "operator": "greater", "type":
              "Datetime", "value": "2021-01-01T00:00:00.000Z"}]}

              selectedItems: dictionary with keys: "all", "included",
              "excluded". If "all" is false, "included" must be used. If "all"
              is true, "excluded" must be used.

              Examples: {"all": false, "included": [1, 2, 3]} or {"all": true,
              "excluded": [4, 5]}

              ordering: list of fields to order by. Currently, ordering is
              supported by only one parameter.

              Example: ["completed_at"]
          resolve_uri:
            type: optional<boolean>
            docs: Resolve task data URIs using Cloud Storage
          review:
            type: optional<boolean>
            docs: Get tasks for review
          selectedItems:
            type: optional<string>
            docs: JSON string of selected task IDs for review workflow
          view:
            type: optional<integer>
            docs: View ID
      response:
        docs: ''
        type: root.PaginatedRoleBasedTaskList
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - response:
            body:
              tasks:
                - id: 1
                  agreement: agreement
                  predictions:
                    - {}
                  annotations: annotations
                  drafts:
                    - {}
                  annotators:
                    - 1
                  inner_id: 1
                  cancelled_annotations: 1
                  total_annotations: 1
                  total_predictions: 1
                  completed_at: '2024-01-15T09:30:00Z'
                  annotations_results: annotations_results
                  predictions_results: predictions_results
                  predictions_score: 1.1
                  file_upload: file_upload
                  storage_filename: storage_filename
                  annotations_ids: annotations_ids
                  predictions_model_versions: predictions_model_versions
                  avg_lead_time: 1.1
                  draft_exists: true
                  updated_by:
                    - key: value
                  reviewers:
                    - key: value
                  comments: comments
                  comment_authors:
                    - key: value
                  reviewed: true
                  reviews_accepted: 1
                  reviews_rejected: 1
                  ground_truth: true
                  annotators_count: 1
                  reviewers_count: 1
                  comment_authors_count: 1
                  data:
                    key: value
                  meta:
                    key: value
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
                  is_labeled: true
                  overlap: 1
                  comment_count: 1
                  unresolved_comment_count: 1
                  last_comment_updated_at: '2024-01-15T09:30:00Z'
                  project: 1
              total: 123
              total_annotations: 456
              total_predictions: 78
      audiences:
        - public
    create:
      path: /api/tasks/
      method: POST
      auth: true
      docs: Create a new task
      source:
        openapi: openapi/openapi.yaml
      display-name: Create a new task
      request:
        name: LseTaskRequest
        body:
          properties:
            data: unknown
            meta: optional<unknown>
            is_labeled:
              type: optional<boolean>
              docs: >-
                True if the number of annotations for this task is greater than
                or equal to the number of maximum_completions for the project
            overlap:
              type: optional<integer>
              docs: Number of distinct annotators that processed the current task
              validation:
                min: -2147483648
                max: 2147483647
            inner_id:
              type: optional<long>
              docs: Internal task ID in the project, starts with 1
            total_annotations:
              type: optional<integer>
              docs: >-
                Number of total annotations for the current task except
                cancelled annotations
              validation:
                min: -2147483648
                max: 2147483647
            cancelled_annotations:
              type: optional<integer>
              docs: Number of total cancelled annotations for the current task
              validation:
                min: -2147483648
                max: 2147483647
            total_predictions:
              type: optional<integer>
              docs: Number of total predictions for the current task
              validation:
                min: -2147483648
                max: 2147483647
            comment_count:
              type: optional<integer>
              docs: Number of comments in the task including all annotations
              validation:
                min: -2147483648
                max: 2147483647
            unresolved_comment_count:
              type: optional<integer>
              docs: >-
                Number of unresolved comments in the task including all
                annotations
              validation:
                min: -2147483648
                max: 2147483647
            last_comment_updated_at:
              type: optional<datetime>
              docs: When the last comment was updated
            project:
              type: optional<integer>
              docs: Project ID for this task
            updated_by:
              type: optional<integer>
              docs: Last annotator or reviewer who updated this task
            file_upload:
              type: optional<integer>
              docs: Uploaded file used as data source for this task
            comment_authors:
              type: optional<list<integer>>
              docs: Users who wrote comments
        content-type: application/json
      response:
        docs: ''
        type: root.LseTask
      audiences:
        - public
    get:
      path: /api/tasks/{id}/
      method: GET
      auth: true
      docs: >-
        Get task data, metadata, annotations and other attributes for a specific
        labeling task by task ID.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: string
          docs: Task ID
      display-name: Get task
      response:
        docs: ''
        type: root.RoleBasedTask
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: 1
              agreement: agreement
              predictions:
                - result:
                    - key: value
                  score: 1.1
                  model_version: model_version
                  model:
                    key: value
                  model_run:
                    key: value
                  task: 1
                  project: 1
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
              annotations: annotations
              drafts:
                - result:
                    - key: value
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
              annotators:
                - 1
              inner_id: 1
              cancelled_annotations: 1
              total_annotations: 1
              total_predictions: 1
              completed_at: '2024-01-15T09:30:00Z'
              annotations_results: annotations_results
              predictions_results: predictions_results
              predictions_score: 1.1
              file_upload: file_upload
              storage_filename: storage_filename
              annotations_ids: annotations_ids
              predictions_model_versions: predictions_model_versions
              avg_lead_time: 1.1
              draft_exists: true
              updated_by:
                - key: value
              reviewers:
                - key: value
              comments: comments
              comment_authors:
                - key: value
              reviewed: true
              reviews_accepted: 1
              reviews_rejected: 1
              ground_truth: true
              annotators_count: 1
              reviewers_count: 1
              comment_authors_count: 1
              data:
                key: value
              meta:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              is_labeled: true
              overlap: 1
              comment_count: 1
              unresolved_comment_count: 1
              last_comment_updated_at: '2024-01-15T09:30:00Z'
              project: 1
      audiences:
        - public
    delete:
      path: /api/tasks/{id}/
      method: DELETE
      auth: true
      docs: Delete a task in Label Studio. This action cannot be undone!
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: string
          docs: Task ID
      display-name: Delete task
      examples:
        - path-parameters:
            id: id
      audiences:
        - public
    update:
      path: /api/tasks/{id}/
      method: PATCH
      auth: true
      docs: Update the attributes of an existing labeling task.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: string
          docs: Task ID
      display-name: Update task
      request:
        name: PatchedLseTaskRequest
        body:
          properties:
            inner_id: optional<integer>
            cancelled_annotations: optional<integer>
            total_annotations: optional<integer>
            total_predictions: optional<integer>
            completed_at: optional<datetime>
            predictions_score: optional<double>
            avg_lead_time: optional<double>
            draft_exists: optional<boolean>
            reviewed: optional<boolean>
            reviews_accepted: optional<integer>
            reviews_rejected: optional<integer>
            ground_truth: optional<boolean>
            data: optional<unknown>
            meta: optional<unknown>
            is_labeled:
              type: optional<boolean>
              docs: >-
                True if the number of annotations for this task is greater than
                or equal to the number of maximum_completions for the project
            overlap:
              type: optional<integer>
              docs: Number of distinct annotators that processed the current task
              validation:
                min: -2147483648
                max: 2147483647
            comment_count:
              type: optional<integer>
              docs: Number of comments in the task including all annotations
              validation:
                min: -2147483648
                max: 2147483647
            unresolved_comment_count:
              type: optional<integer>
              docs: >-
                Number of unresolved comments in the task including all
                annotations
              validation:
                min: -2147483648
                max: 2147483647
            last_comment_updated_at:
              type: optional<datetime>
              docs: When the last comment was updated
            project:
              type: optional<integer>
              docs: Project ID for this task
        content-type: application/json
      response:
        docs: ''
        type: root.RoleBasedTask
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: 1
              agreement: agreement
              predictions:
                - result:
                    - key: value
                  score: 1.1
                  model_version: model_version
                  model:
                    key: value
                  model_run:
                    key: value
                  task: 1
                  project: 1
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
              annotations: annotations
              drafts:
                - result:
                    - key: value
                  created_at: '2024-01-15T09:30:00Z'
                  updated_at: '2024-01-15T09:30:00Z'
              annotators:
                - 1
              inner_id: 1
              cancelled_annotations: 1
              total_annotations: 1
              total_predictions: 1
              completed_at: '2024-01-15T09:30:00Z'
              annotations_results: annotations_results
              predictions_results: predictions_results
              predictions_score: 1.1
              file_upload: file_upload
              storage_filename: storage_filename
              annotations_ids: annotations_ids
              predictions_model_versions: predictions_model_versions
              avg_lead_time: 1.1
              draft_exists: true
              updated_by:
                - key: value
              reviewers:
                - key: value
              comments: comments
              comment_authors:
                - key: value
              reviewed: true
              reviews_accepted: 1
              reviews_rejected: 1
              ground_truth: true
              annotators_count: 1
              reviewers_count: 1
              comment_authors_count: 1
              data:
                key: value
              meta:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              is_labeled: true
              overlap: 1
              comment_count: 1
              unresolved_comment_count: 1
              last_comment_updated_at: '2024-01-15T09:30:00Z'
              project: 1
      audiences:
        - public
  source:
    openapi: openapi/openapi.yaml
types:
  TasksListRequestFields:
    enum:
      - all
      - task_only
    source:
      openapi: openapi/openapi.yaml
