imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /api/storages/s3/
      method: GET
      auth: true
      docs: >

        You can connect your S3 bucket to Label Studio as a source storage or
        target storage. Use this API request to get a list of all Google import
        (source) storage connections for a specific project. 


        The project ID can be found in the URL when viewing the project in Label
        Studio, or you can retrieve all project IDs using [List all
        projects](../projects/list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      display-name: List import storages
      request:
        name: S3ListRequest
        query-parameters:
          project:
            type: optional<integer>
            docs: Project ID
      response:
        docs: ''
        type: list<root.S3ImportStorage>
      examples:
        - response:
            body:
              - id: 1
                type: type
                synchronizable: true
                presign: true
                last_sync: '2024-01-15T09:30:00Z'
                last_sync_count: 1
                last_sync_job: last_sync_job
                status: initialized
                traceback: traceback
                meta:
                  meta:
                    key: value
                title: title
                description: description
                created_at: '2024-01-15T09:30:00Z'
                bucket: bucket
                prefix: prefix
                regex_filter: regex_filter
                use_blob_urls: true
                aws_access_key_id: aws_access_key_id
                aws_secret_access_key: aws_secret_access_key
                aws_session_token: aws_session_token
                aws_sse_kms_key_id: aws_sse_kms_key_id
                region_name: region_name
                s3_endpoint: s3_endpoint
                presign_ttl: 1
                recursive_scan: true
                project: 1
      audiences:
        - public
    create:
      path: /api/storages/s3/
      method: POST
      auth: true
      docs: >

        Create a new source storage connection to a S3 bucket. 


        For information about the required fields and prerequisites, see [Amazon
        S3](https://labelstud.io/guide/storage#Amazon-S3) in the Label Studio
        documentation. 


        <Info>Ensure you configure CORS before adding cloud storage. This
        ensures you will be able to see the content of the data rather than just
        a link.</Info>


        <Tip>After you add the storage, you should validate the connection
        before attempting to sync your data. Your data will not be imported
        until you [sync your connection](sync).</Tip>
      display-name: Create import storage
      request:
        name: S3CreateRequest
        body:
          properties:
            regex_filter:
              type: optional<string>
              docs: >-
                Cloud storage regex for filtering objects. You must specify it
                otherwise no objects will be imported.
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your bucket contains images, you can use this option to generate
                URLs for these images. If set to False, it will read the content
                of the file and load it into Label Studio.
            presign:
              type: optional<boolean>
              docs: Presign URLs for download
            presign_ttl:
              type: optional<integer>
              docs: Presign TTL in minutes
              default: 1
            recursive_scan:
              type: optional<boolean>
              docs: Scan recursively
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            bucket:
              type: optional<string>
              docs: S3 bucket name
            prefix:
              type: optional<string>
              docs: S3 bucket prefix
            aws_access_key_id:
              type: optional<string>
              docs: AWS_ACCESS_KEY_ID
            aws_secret_access_key:
              type: optional<string>
              docs: AWS_SECRET_ACCESS_KEY
            aws_session_token:
              type: optional<string>
              docs: AWS_SESSION_TOKEN
            aws_sse_kms_key_id:
              type: optional<string>
              docs: AWS SSE KMS Key ID
            region_name:
              type: optional<string>
              docs: AWS Region
            s3_endpoint:
              type: optional<string>
              docs: S3 Endpoint
      response:
        docs: ''
        type: S3CreateResponse
      examples:
        - request: {}
          response:
            body:
              regex_filter: regex_filter
              use_blob_urls: true
              presign: true
              presign_ttl: 1
              recursive_scan: true
              title: title
              description: description
              project: 1
              bucket: bucket
              prefix: prefix
              aws_access_key_id: aws_access_key_id
              aws_secret_access_key: aws_secret_access_key
              aws_session_token: aws_session_token
              aws_sse_kms_key_id: aws_sse_kms_key_id
              region_name: region_name
              s3_endpoint: s3_endpoint
      audiences:
        - public
    validate:
      path: /api/storages/s3/validate
      method: POST
      auth: true
      docs: >

        Validate a specific S3 import storage connection. This is useful to
        ensure that the storage configuration settings are correct and
        operational before attempting to import data.
      display-name: Validate import storage
      request:
        name: S3ValidateRequest
        body:
          properties:
            id:
              type: optional<integer>
              docs: Storage ID. If set, storage with specified ID will be updated
            regex_filter:
              type: optional<string>
              docs: >-
                Cloud storage regex for filtering objects. You must specify it
                otherwise no objects will be imported.
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your bucket contains images, you can use this option to generate
                URLs for these images. If set to False, it will read the content
                of the file and load it into Label Studio.
            presign:
              type: optional<boolean>
              docs: Presign URLs for download
            presign_ttl:
              type: optional<integer>
              docs: Presign TTL in minutes
              default: 1
            recursive_scan:
              type: optional<boolean>
              docs: Scan recursively
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            bucket:
              type: optional<string>
              docs: S3 bucket name
            prefix:
              type: optional<string>
              docs: S3 bucket prefix
            aws_access_key_id:
              type: optional<string>
              docs: AWS_ACCESS_KEY_ID
            aws_secret_access_key:
              type: optional<string>
              docs: AWS_SECRET_ACCESS_KEY
            aws_session_token:
              type: optional<string>
              docs: AWS_SESSION_TOKEN
            aws_sse_kms_key_id:
              type: optional<string>
              docs: AWS SSE KMS Key ID
            region_name:
              type: optional<string>
              docs: AWS Region
            s3_endpoint:
              type: optional<string>
              docs: S3 Endpoint
      examples:
        - request: {}
      audiences:
        - public
    get:
      path: /api/storages/s3/{id}
      method: GET
      auth: true
      docs: >

        Get a specific S3 import storage connection. You will need to provide
        the import storage ID. You can find this using [List import
        storages](list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this s3 import storage.
      display-name: Get import storage
      response:
        docs: ''
        type: root.S3ImportStorage
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              type: type
              synchronizable: true
              presign: true
              last_sync: '2024-01-15T09:30:00Z'
              last_sync_count: 1
              last_sync_job: last_sync_job
              status: initialized
              traceback: traceback
              meta:
                meta:
                  key: value
              title: title
              description: description
              created_at: '2024-01-15T09:30:00Z'
              bucket: bucket
              prefix: prefix
              regex_filter: regex_filter
              use_blob_urls: true
              aws_access_key_id: aws_access_key_id
              aws_secret_access_key: aws_secret_access_key
              aws_session_token: aws_session_token
              aws_sse_kms_key_id: aws_sse_kms_key_id
              region_name: region_name
              s3_endpoint: s3_endpoint
              presign_ttl: 1
              recursive_scan: true
              project: 1
      audiences:
        - public
    delete:
      path: /api/storages/s3/{id}
      method: DELETE
      auth: true
      docs: >

        Delete a specific S3 import storage connection. You will need to provide
        the import storage ID. You can find this using [List import
        storages](list). 


        Deleting a source storage connection does not affect tasks with synced
        data in Label Studio. The sync process is designed to import new or
        updated tasks from the connected storage into the project, but it does
        not track deletions of files from the storage. Therefore, if you remove
        the external storage connection, the tasks that were created from that
        storage will remain in the project.


        If you want to remove the tasks that were synced from the external
        storage, you will need to delete them manually from within the Label
        Studio UI or use the [Delete tasks](../../tasks/delete-all-tasks) API. 
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this s3 import storage.
      display-name: Delete import storage
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    update:
      path: /api/storages/s3/{id}
      method: PATCH
      auth: true
      docs: >

        Update a specific S3 import storage connection. You will need to provide
        the import storage ID. You can find this using [List import
        storages](list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this s3 import storage.
      display-name: Update import storage
      request:
        name: S3UpdateRequest
        body:
          properties:
            regex_filter:
              type: optional<string>
              docs: >-
                Cloud storage regex for filtering objects. You must specify it
                otherwise no objects will be imported.
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your bucket contains images, you can use this option to generate
                URLs for these images. If set to False, it will read the content
                of the file and load it into Label Studio.
            presign:
              type: optional<boolean>
              docs: Presign URLs for download
            presign_ttl:
              type: optional<integer>
              docs: Presign TTL in minutes
              default: 1
            recursive_scan:
              type: optional<boolean>
              docs: Scan recursively
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            bucket:
              type: optional<string>
              docs: S3 bucket name
            prefix:
              type: optional<string>
              docs: S3 bucket prefix
            aws_access_key_id:
              type: optional<string>
              docs: AWS_ACCESS_KEY_ID
            aws_secret_access_key:
              type: optional<string>
              docs: AWS_SECRET_ACCESS_KEY
            aws_session_token:
              type: optional<string>
              docs: AWS_SESSION_TOKEN
            aws_sse_kms_key_id:
              type: optional<string>
              docs: AWS SSE KMS Key ID
            region_name:
              type: optional<string>
              docs: AWS Region
            s3_endpoint:
              type: optional<string>
              docs: S3 Endpoint
      response:
        docs: ''
        type: S3UpdateResponse
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              regex_filter: regex_filter
              use_blob_urls: true
              presign: true
              presign_ttl: 1
              recursive_scan: true
              title: title
              description: description
              project: 1
              bucket: bucket
              prefix: prefix
              aws_access_key_id: aws_access_key_id
              aws_secret_access_key: aws_secret_access_key
              aws_session_token: aws_session_token
              aws_sse_kms_key_id: aws_sse_kms_key_id
              region_name: region_name
              s3_endpoint: s3_endpoint
      audiences:
        - public
    sync:
      path: /api/storages/s3/{id}/sync
      method: POST
      auth: true
      docs: >

        Sync tasks from an S3 import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        Sync operations with external buckets only go one way. They either
        create tasks from objects in the bucket (source/import storage) or push
        annotations to the output bucket (export/target storage). Changing
        something on the bucket side doesn’t guarantee consistency in results.


        <Note>Before proceeding, you should review [How sync operations work -
        Source storage](https://labelstud.io/guide/storage#Source-storage) to
        ensure that your data remains secure and private.</Note> 
      path-parameters:
        id:
          type: integer
          docs: Storage ID
      display-name: Sync import storage
      response:
        docs: ''
        type: root.S3ImportStorage
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              type: type
              synchronizable: true
              presign: true
              last_sync: '2024-01-15T09:30:00Z'
              last_sync_count: 1
              last_sync_job: last_sync_job
              status: initialized
              traceback: traceback
              meta:
                meta:
                  key: value
              title: title
              description: description
              created_at: '2024-01-15T09:30:00Z'
              bucket: bucket
              prefix: prefix
              regex_filter: regex_filter
              use_blob_urls: true
              aws_access_key_id: aws_access_key_id
              aws_secret_access_key: aws_secret_access_key
              aws_session_token: aws_session_token
              aws_sse_kms_key_id: aws_sse_kms_key_id
              region_name: region_name
              s3_endpoint: s3_endpoint
              presign_ttl: 1
              recursive_scan: true
              project: 1
      audiences:
        - public
types:
  S3CreateResponse:
    properties:
      regex_filter:
        type: optional<string>
        docs: >-
          Cloud storage regex for filtering objects. You must specify it
          otherwise no objects will be imported.
      use_blob_urls:
        type: optional<boolean>
        docs: >-
          Interpret objects as BLOBs and generate URLs. For example, if your
          bucket contains images, you can use this option to generate URLs for
          these images. If set to False, it will read the content of the file
          and load it into Label Studio.
      presign:
        type: optional<boolean>
        docs: Presign URLs for download
      presign_ttl:
        type: optional<integer>
        docs: Presign TTL in minutes
        default: 1
      recursive_scan:
        type: optional<boolean>
        docs: Scan recursively
      title:
        type: optional<string>
        docs: Storage title
      description:
        type: optional<string>
        docs: Storage description
      project:
        type: optional<integer>
        docs: Project ID
      bucket:
        type: optional<string>
        docs: S3 bucket name
      prefix:
        type: optional<string>
        docs: S3 bucket prefix
      aws_access_key_id:
        type: optional<string>
        docs: AWS_ACCESS_KEY_ID
      aws_secret_access_key:
        type: optional<string>
        docs: AWS_SECRET_ACCESS_KEY
      aws_session_token:
        type: optional<string>
        docs: AWS_SESSION_TOKEN
      aws_sse_kms_key_id:
        type: optional<string>
        docs: AWS SSE KMS Key ID
      region_name:
        type: optional<string>
        docs: AWS Region
      s3_endpoint:
        type: optional<string>
        docs: S3 Endpoint
  S3UpdateResponse:
    properties:
      regex_filter:
        type: optional<string>
        docs: >-
          Cloud storage regex for filtering objects. You must specify it
          otherwise no objects will be imported.
      use_blob_urls:
        type: optional<boolean>
        docs: >-
          Interpret objects as BLOBs and generate URLs. For example, if your
          bucket contains images, you can use this option to generate URLs for
          these images. If set to False, it will read the content of the file
          and load it into Label Studio.
      presign:
        type: optional<boolean>
        docs: Presign URLs for download
      presign_ttl:
        type: optional<integer>
        docs: Presign TTL in minutes
        default: 1
      recursive_scan:
        type: optional<boolean>
        docs: Scan recursively
      title:
        type: optional<string>
        docs: Storage title
      description:
        type: optional<string>
        docs: Storage description
      project:
        type: optional<integer>
        docs: Project ID
      bucket:
        type: optional<string>
        docs: S3 bucket name
      prefix:
        type: optional<string>
        docs: S3 bucket prefix
      aws_access_key_id:
        type: optional<string>
        docs: AWS_ACCESS_KEY_ID
      aws_secret_access_key:
        type: optional<string>
        docs: AWS_SECRET_ACCESS_KEY
      aws_session_token:
        type: optional<string>
        docs: AWS_SESSION_TOKEN
      aws_sse_kms_key_id:
        type: optional<string>
        docs: AWS SSE KMS Key ID
      region_name:
        type: optional<string>
        docs: AWS Region
      s3_endpoint:
        type: optional<string>
        docs: S3 Endpoint
