imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /api/storages/localfiles/
      method: GET
      auth: true
      docs: >

        If you have local files that you want to add to Label Studio from a
        specific directory, you can set up a specific local directory on the
        machine where LS is running as source or target storage. Use this API
        request to get a list of all local file import (source) storage
        connections for a specific project. 


        The project ID can be found in the URL when viewing the project in Label
        Studio, or you can retrieve all project IDs using [List all
        projects](../projects/list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      display-name: List import storages
      request:
        name: LocalListRequest
        query-parameters:
          project:
            type: optional<integer>
            docs: Project ID
      response:
        docs: ''
        type: list<root.LocalFilesImportStorage>
      examples:
        - response:
            body:
              - id: 1
                type: type
                synchronizable: true
                path: path
                regex_filter: regex_filter
                use_blob_urls: true
                last_sync: '2024-01-15T09:30:00Z'
                last_sync_count: 1
                last_sync_job: last_sync_job
                status: initialized
                traceback: traceback
                meta:
                  key: value
                title: title
                description: description
                created_at: '2024-01-15T09:30:00Z'
                project: 1
      audiences:
        - public
    create:
      path: /api/storages/localfiles/
      method: POST
      auth: true
      docs: >

        Create a new source storage connection to a local file directory. 


        For information about the required fields and prerequisites, see [Local
        storage](https://labelstud.io/guide/storage#Local-storage) in the Label
        Studio documentation. 


        <Tip>After you add the storage, you should validate the connection
        before attempting to sync your data. Your data will not be imported
        until you [sync your connection](sync).</Tip>
      display-name: Create import storage
      request:
        name: LocalCreateRequest
        body:
          properties:
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            path:
              type: optional<string>
              docs: Path to local directory
            regex_filter:
              type: optional<string>
              docs: Regex for filtering objects
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your directory contains images, you can use this option to
                generate URLs for these images. If set to False, it will read
                the content of the file and load it into Label Studio.
              default: false
      response:
        docs: ''
        type: LocalCreateResponse
      examples:
        - request: {}
          response:
            body:
              title: title
              description: description
              project: 1
              path: path
              regex_filter: regex_filter
              use_blob_urls: true
      audiences:
        - public
    validate:
      path: /api/storages/localfiles/validate
      method: POST
      auth: true
      docs: >

        Validate a specific local file import storage connection. This is useful
        to ensure that the storage configuration settings are correct and
        operational before attempting to import data.
      display-name: Validate import storage
      request:
        name: LocalValidateRequest
        body:
          properties:
            id:
              type: optional<integer>
              docs: Storage ID. If set, storage with specified ID will be updated
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            path:
              type: optional<string>
              docs: Path to local directory
            regex_filter:
              type: optional<string>
              docs: Regex for filtering objects
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your directory contains images, you can use this option to
                generate URLs for these images. If set to False, it will read
                the content of the file and load it into Label Studio.
              default: false
      examples:
        - request: {}
      audiences:
        - public
    get:
      path: /api/storages/localfiles/{id}
      method: GET
      auth: true
      docs: >

        Get a specific local file import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this local files import storage.
      display-name: Get import storage
      response:
        docs: ''
        type: root.LocalFilesImportStorage
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              type: type
              synchronizable: true
              path: path
              regex_filter: regex_filter
              use_blob_urls: true
              last_sync: '2024-01-15T09:30:00Z'
              last_sync_count: 1
              last_sync_job: last_sync_job
              status: initialized
              traceback: traceback
              meta:
                key: value
              title: title
              description: description
              created_at: '2024-01-15T09:30:00Z'
              project: 1
      audiences:
        - public
    delete:
      path: /api/storages/localfiles/{id}
      method: DELETE
      auth: true
      docs: >

        Delete a specific local import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        Deleting a source storage connection does not affect tasks with synced
        data in Label Studio. The sync process is designed to import new or
        updated tasks from the connected storage into the project, but it does
        not track deletions of files from the storage. Therefore, if you remove
        the external storage connection, the tasks that were created from that
        storage will remain in the project.


        If you want to remove the tasks that were synced from the external
        storage, you will need to delete them manually from within the Label
        Studio UI or use the [Delete tasks](../../tasks/delete-all-tasks) API. 
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this local files import storage.
      display-name: Delete import storage
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    update:
      path: /api/storages/localfiles/{id}
      method: PATCH
      auth: true
      docs: >

        Update a specific local import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        For more information about working with external storage, see [Sync data
        from external storage](https://labelstud.io/guide/storage).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this local files import storage.
      display-name: Update import storage
      request:
        name: LocalUpdateRequest
        body:
          properties:
            title:
              type: optional<string>
              docs: Storage title
            description:
              type: optional<string>
              docs: Storage description
            project:
              type: optional<integer>
              docs: Project ID
            path:
              type: optional<string>
              docs: Path to local directory
            regex_filter:
              type: optional<string>
              docs: Regex for filtering objects
            use_blob_urls:
              type: optional<boolean>
              docs: >-
                Interpret objects as BLOBs and generate URLs. For example, if
                your directory contains images, you can use this option to
                generate URLs for these images. If set to False, it will read
                the content of the file and load it into Label Studio.
              default: false
      response:
        docs: ''
        type: LocalUpdateResponse
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              title: title
              description: description
              project: 1
              path: path
              regex_filter: regex_filter
              use_blob_urls: true
      audiences:
        - public
    sync:
      path: /api/storages/localfiles/{id}/sync
      method: POST
      auth: true
      docs: >

        Sync tasks from a local import storage connection. You will need to
        provide the import storage ID. You can find this using [List import
        storages](list). 


        Sync operations with external sources only go one way. They either
        create tasks from objects in the source directory (source/import
        storage) or push annotations to the output directory (export/target
        storage). Changing something on the local file side doesn’t guarantee
        consistency in results.


        <Note>Before proceeding, you should review [How sync operations work -
        Source storage](https://labelstud.io/guide/storage#Source-storage) to
        ensure that your data remains secure and private.</Note> 
      path-parameters:
        id:
          type: integer
          docs: Storage ID
      display-name: Sync import storage
      response:
        docs: ''
        type: root.LocalFilesImportStorage
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              type: type
              synchronizable: true
              path: path
              regex_filter: regex_filter
              use_blob_urls: true
              last_sync: '2024-01-15T09:30:00Z'
              last_sync_count: 1
              last_sync_job: last_sync_job
              status: initialized
              traceback: traceback
              meta:
                key: value
              title: title
              description: description
              created_at: '2024-01-15T09:30:00Z'
              project: 1
      audiences:
        - public
types:
  LocalCreateResponse:
    properties:
      title:
        type: optional<string>
        docs: Storage title
      description:
        type: optional<string>
        docs: Storage description
      project:
        type: optional<integer>
        docs: Project ID
      path:
        type: optional<string>
        docs: Path to local directory
      regex_filter:
        type: optional<string>
        docs: Regex for filtering objects
      use_blob_urls:
        type: optional<boolean>
        docs: >-
          Interpret objects as BLOBs and generate URLs. For example, if your
          directory contains images, you can use this option to generate URLs
          for these images. If set to False, it will read the content of the
          file and load it into Label Studio.
        default: false
  LocalUpdateResponse:
    properties:
      title:
        type: optional<string>
        docs: Storage title
      description:
        type: optional<string>
        docs: Storage description
      project:
        type: optional<integer>
        docs: Project ID
      path:
        type: optional<string>
        docs: Path to local directory
      regex_filter:
        type: optional<string>
        docs: Regex for filtering objects
      use_blob_urls:
        type: optional<boolean>
        docs: >-
          Interpret objects as BLOBs and generate URLs. For example, if your
          directory contains images, you can use this option to generate URLs
          for these images. If set to False, it will read the content of the
          file and load it into Label Studio.
        default: false
