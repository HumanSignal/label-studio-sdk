imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /api/organizations/{id}/memberships
      method: GET
      auth: true
      docs: Retrieve a list of all users and roles in a specific organization.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this organization.
      display-name: Get organization members/roles
      request:
        name: MembersListRequest
        query-parameters:
          exclude_project_id:
            type: optional<integer>
            docs: >-
              Project ID to exclude users who are already associated with this
              project (direct members, workspace members, or implicit
              admin/owner access).
          exclude_workspace_id:
            type: optional<integer>
            docs: >-
              Workspace ID to exclude users who are already associated with this
              workspace (direct workspace members or implicit admin/owner
              access).
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          page:
            type: optional<integer>
            docs: A page number within the paginated result set.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          search:
            type: optional<string>
            docs: A search term.
      response:
        docs: ''
        type: root.PaginatedLseOrganizationMemberListList
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              count: 123
              next: http://api.example.org/accounts/?page=4
              previous: http://api.example.org/accounts/?page=2
              results:
                - id: 1
                  organization: 1
                  role: role
                  user:
                    avatar: avatar
                    contributed_to_projects: contributed_to_projects
                    created_projects: created_projects
                    id: 1
                    initials: initials
                    last_activity: '2024-01-15T09:30:00Z'
                    lse_fields:
                      email_notification_settings: email_notification_settings
                      invite_expired: invite_expired
                      invite_expired_at: invite_expired_at
                    pause: pause
                    username: username
      audiences:
        - public
    update:
      path: /api/organizations/{id}/memberships
      method: PATCH
      auth: true
      docs: >+
        Update organization membership or role for a specific user ID.


        **User Rotation Best Practices for API Usage**


        To maintain compliance with our licensing terms and ensure optimal
        performance of HumanSignal's APIs, please consider the following
        guidelines when managing user assignments:


        * **Maintain a 7-Day Minimum Assignment**: Once a licensed seat is
        assigned to a user, maintain that assignment for at least seven
        consecutive days before rotating it to another user.


        * **Automate, Monitor, and Log Rotations**: Implement automated
        scheduling and logging mechanisms to track the timing of user rotations.
        This helps ensure that rotations adhere to the seven-day minimum period.


        * **Adhere to API Update Frequency and Wait Periods**: When updating
        user assignments via our APIs, follow the recommended frequency and wait
        period guidelines provided in the HumanSignal API documentation. Avoid
        sending rapid, successive requests that might overload the endpoint.
        Instead, incorporate appropriate delays between calls as specified in
        the documentation.


        * **Avoid Overloading the API Endpoint**: Design your integration to
        batch or schedule updates where possible, and implement backoff
        strategies if the API indicates rate limiting. This helps prevent
        service disruptions and ensures a smooth operation.

      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this organization.
      display-name: Update organization member/role
      request:
        name: PatchedOrganizationMemberCreateUpdateRequest
        body:
          properties:
            role: optional<root.Role9E7Enum>
            user_id: optional<integer>
        content-type: application/json
      response:
        docs: ''
        type: root.LseOrganizationMemberList
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              id: 1
              organization: 1
              role: role
              user:
                active_organization: 1
                allow_newsletters: true
                avatar: avatar
                contributed_to_projects: contributed_to_projects
                created_projects: created_projects
                custom_hotkeys:
                  key: value
                date_joined: '2024-01-15T09:30:00Z'
                email: email
                first_name: first_name
                id: 1
                initials: initials
                last_activity: '2024-01-15T09:30:00Z'
                last_name: last_name
                lse_fields:
                  email_notification_settings: email_notification_settings
                  invite_activated: true
                  invite_expired: invite_expired
                  invite_expired_at: invite_expired_at
                  invited_at: '2024-01-15T09:30:00Z'
                  invited_by: 1
                  onboarding_state: not_started
                  social_auth_finished: true
                  trial_company: trial_company
                  trial_experience_labeling: trial_experience_labeling
                  trial_license_enterprise: true
                  trial_models_in_production: trial_models_in_production
                  trial_role: annotator
                pause: pause
                phone: phone
                username: username
      audiences:
        - public
    get:
      path: /api/organizations/{id}/memberships/{user_pk}/
      method: GET
      auth: true
      docs: Get organization member details by user ID.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
        user_pk:
          type: integer
          docs: >-
            A unique integer value identifying the user to get organization
            details for.
      display-name: Get organization member details
      response:
        docs: ''
        type: root.OrganizationMember
      examples:
        - path-parameters:
            id: 1
            user_pk: 1
          response:
            body:
              annotations_count: annotations_count
              contributed_projects_count: contributed_projects_count
              created_at: '2024-01-15T09:30:00Z'
              organization: 1
              user: 1
      audiences:
        - public
    delete:
      path: /api/organizations/{id}/memberships/{user_pk}/
      method: DELETE
      auth: true
      docs: Soft delete a member from the organization.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
        user_pk:
          type: integer
          docs: >-
            A unique integer value identifying the user to be deleted from the
            organization.
      display-name: Soft delete an organization member
      errors:
        - root.ForbiddenError
        - root.NotFoundError
        - root.MethodNotAllowedError
      examples:
        - path-parameters:
            id: 1
            user_pk: 1
      audiences:
        - public
  source:
    openapi: openapi/openapi.yaml
