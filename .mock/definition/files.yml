imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /api/import/file-upload/{id}
      method: GET
      auth: true
      docs: >-
        Retrieve details about a specific uploaded file. To get the file upload
        ID, use [Get files list](list).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this file upload.
      display-name: Get file upload
      response:
        docs: ''
        type: root.FileUpload
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              file: file
      audiences:
        - public
    delete:
      path: /api/import/file-upload/{id}
      method: DELETE
      auth: true
      docs: >-
        Delete a specific uploaded file. To get the file upload ID, use [Get
        files list](list).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this file upload.
      display-name: Delete file upload
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    update:
      path: /api/import/file-upload/{id}
      method: PATCH
      auth: true
      docs: >

        Update a specific uploaded file. To get the file upload ID, use [Get
        files list](list). 


        You will need to include the file data in the request body. For example:

        ```bash

        curl -H 'Authorization: Token abc123' \ -X POST
        'https://localhost:8080/api/import/file-upload/245' -F
        ‘file=@path/to/my_file.csv’

        ```
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this file upload.
      display-name: Update file upload
      request:
        body: root.FileUpload
      response:
        docs: ''
        type: root.FileUpload
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              id: 1
              file: file
      audiences:
        - public
    list:
      path: /api/projects/{id}/file-uploads
      method: GET
      auth: true
      docs: >

        Retrieve the list of uploaded files used to create labeling tasks for a
        specific project. These are files that have been uploaded directly to
        Label Studio. 


        You must provide a project ID. The project ID can be found in the URL
        when viewing the project in Label Studio, or you can retrieve all
        project IDs using [List all projects](../list). 
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this file upload.
      display-name: Get files list
      request:
        name: FilesListRequest
        query-parameters:
          all:
            type: optional<boolean>
            docs: Set to "true" if you want to retrieve all file uploads
          ids:
            type: optional<integer>
            allow-multiple: true
            docs: Specify the list of file upload IDs to retrieve, e.g. ids=[1,2,3]
      response:
        docs: ''
        type: list<root.FileUpload>
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              - id: 1
                file: file
      audiences:
        - public
    delete_many:
      path: /api/projects/{id}/file-uploads
      method: DELETE
      auth: true
      docs: >

        Delete uploaded files for a specific project. These are files that have
        been uploaded directly to Label Studio. 


        You must provide a project ID. The project ID can be found in the URL
        when viewing the project in Label Studio, or you can retrieve all
        project IDs using [List all projects](../list). 
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this file upload.
      display-name: Delete files
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    download:
      path: /data/upload/{filename}
      method: GET
      auth: true
      docs: >-
        Download a specific uploaded file. If you aren't sure of the file name,
        try [Get files list](list) first.
      path-parameters:
        filename: string
      display-name: Download file
      examples:
        - path-parameters:
            filename: filename
      audiences:
        - public
