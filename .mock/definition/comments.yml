imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    api_comments_list:
      path: /api/comments/
      method: GET
      auth: true
      docs: List all comments for a specific annotation ID.
      source:
        openapi: openapi/openapi.yaml
      display-name: List comments
      request:
        name: ApiCommentsListRequest
        query-parameters:
          annotators:
            type: optional<string>
            docs: Comma-separated list of annotator user IDs
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          projects:
            type: optional<string>
            docs: Comma-separated list of project IDs
      response:
        docs: ''
        type: list<root.Comment>
      examples:
        - response:
            body:
              - id: 1
                region_ref:
                  key: value
                classifications:
                  key: value
                text: text
                created_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                is_resolved: true
                resolved_at: '2024-01-15T09:30:00Z'
                project: 1
                task: 1
                draft: 1
                annotation: 1
                created_by: 1
    api_comments_create:
      path: /api/comments/
      method: POST
      auth: true
      docs: Create a comment for a specific annotation ID.
      source:
        openapi: openapi/openapi.yaml
      display-name: Create comment
      request:
        body: root.CommentRequest
        content-type: application/json
      response:
        docs: ''
        type: root.Comment
      examples:
        - request: {}
          response:
            body:
              id: 1
              region_ref:
                key: value
              classifications:
                key: value
              text: text
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              is_resolved: true
              resolved_at: '2024-01-15T09:30:00Z'
              project: 1
              task: 1
              draft: 1
              annotation: 1
              created_by: 1
    api_comments_retrieve:
      path: /api/comments/{id}/
      method: GET
      auth: true
      docs: Retrieve a specific comment by ID for an annotation.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: string
      display-name: Get comment
      response:
        docs: ''
        type: root.Comment
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: 1
              region_ref:
                key: value
              classifications:
                key: value
              text: text
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              is_resolved: true
              resolved_at: '2024-01-15T09:30:00Z'
              project: 1
              task: 1
              draft: 1
              annotation: 1
              created_by: 1
    api_comments_update:
      path: /api/comments/{id}/
      method: PUT
      auth: true
      docs: Overwrite a specific comment by ID.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: string
      display-name: Put comment
      request:
        body: root.CommentRequest
        content-type: application/json
      response:
        docs: ''
        type: root.Comment
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: 1
              region_ref:
                key: value
              classifications:
                key: value
              text: text
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              is_resolved: true
              resolved_at: '2024-01-15T09:30:00Z'
              project: 1
              task: 1
              draft: 1
              annotation: 1
              created_by: 1
    api_comments_destroy:
      path: /api/comments/{id}/
      method: DELETE
      auth: true
      docs: Delete a comment by ID
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: string
      display-name: Delete comment
      examples:
        - path-parameters:
            id: id
    api_comments_partial_update:
      path: /api/comments/{id}/
      method: PATCH
      auth: true
      docs: Update a specific comment by ID.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: string
      display-name: Update comment
      request:
        name: PatchedCommentRequest
        body:
          properties:
            region_ref: optional<unknown>
            classifications: optional<unknown>
            text:
              type: optional<string>
              docs: Reviewer or annotator comment
            is_resolved:
              type: optional<boolean>
              docs: True if the comment is resolved
            draft: optional<integer>
            annotation: optional<integer>
        content-type: application/json
      response:
        docs: ''
        type: root.Comment
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: 1
              region_ref:
                key: value
              classifications:
                key: value
              text: text
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              is_resolved: true
              resolved_at: '2024-01-15T09:30:00Z'
              project: 1
              task: 1
              draft: 1
              annotation: 1
              created_by: 1
    api_comments_export_retrieve:
      path: /api/comments/export/
      method: GET
      auth: true
      docs: Export comments to CSV file
      source:
        openapi: openapi/openapi.yaml
      display-name: Export comments to CSV
      request:
        name: ApiCommentsExportRetrieveRequest
        query-parameters:
          annotators:
            type: optional<string>
            docs: Comma-separated list of annotator user IDs
          projects:
            type: optional<string>
            docs: Comma-separated list of project IDs
          tz:
            type: optional<string>
            docs: >-
              Timezone in which to export the data. Format IANA timezone name,
              e.g. "America/New_York"
      examples:
        - {}
  source:
    openapi: openapi/openapi.yaml
