types:
  ProjectsListRequestFilter:
    enum:
      - all
      - exclude_pinned
      - pinned_only
    source:
      openapi: openapi/openapi.yaml
  LseProjectCreateRequestSampling:
    discriminated: false
    union:
      - root.SamplingEnum
      - root.NullEnum
    source:
      openapi: openapi/openapi.yaml
    inline: true
  LseProjectCreateRequestSkipQueue:
    discriminated: false
    union:
      - root.SkipQueueEnum
      - root.NullEnum
    source:
      openapi: openapi/openapi.yaml
    inline: true
  PatchedLseProjectUpdateRequestSampling:
    discriminated: false
    union:
      - root.SamplingEnum
      - root.NullEnum
    source:
      openapi: openapi/openapi.yaml
    inline: true
  PatchedLseProjectUpdateRequestSkipQueue:
    discriminated: false
    union:
      - root.SkipQueueEnum
      - root.NullEnum
    source:
      openapi: openapi/openapi.yaml
    inline: true
  ProjectsDuplicateResponse:
    properties:
      id:
        type: integer
        docs: The ID of the duplicated project.
    source:
      openapi: openapi/openapi.yaml
  ProjectsImportTasksResponse:
    docs: Task creation response
    properties:
      annotation_count:
        type: optional<integer>
        docs: Number of annotations added
      could_be_tasks_list:
        type: optional<boolean>
        docs: Whether uploaded files can contain lists of tasks, like CSV/TSV files
      data_columns:
        type: optional<list<string>>
        docs: The list of found data columns
      duration:
        type: optional<double>
        docs: Time in seconds to create
      file_upload_ids:
        type: optional<list<integer>>
        docs: Database IDs of uploaded files
      found_formats:
        type: optional<list<string>>
        docs: The list of found file formats
      predictions_count:
        type: optional<integer>
        docs: Number of predictions added
      task_count:
        type: optional<integer>
        docs: Number of tasks added
    source:
      openapi: openapi/openapi.yaml
  ApiProjectsProjectExtraParamsRetrieveResponse:
    docs: Create or change annotator weights for statistics
    properties:
      annotator_params:
        type: optional<list<map<string, unknown>>>
        docs: Dict of users with weights
      use_kappa:
        type: optional<boolean>
        docs: If project uses Cohen's Kappa in calculation
    source:
      openapi: openapi/openapi.yaml
  ApiProjectsProjectExtraParamsCreateResponse:
    docs: Create or change annotator weights for statistics
    properties:
      annotator_params:
        type: optional<list<map<string, unknown>>>
        docs: Dict of users with weights
      use_kappa:
        type: optional<boolean>
        docs: If project uses Cohen's Kappa in calculation
    source:
      openapi: openapi/openapi.yaml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /api/projects/
      method: GET
      auth: true
      docs: Retrieve a list of projects.
      pagination:
        offset: $request.page
        results: $response.results
      source:
        openapi: openapi/openapi.yaml
      display-name: List projects
      request:
        name: ProjectsListRequest
        query-parameters:
          filter:
            type: optional<ProjectsListRequestFilter>
            docs: >-
              Filter projects by pinned status. Use 'pinned_only' to return only
              pinned projects, 'exclude_pinned' to return only non-pinned
              projects, or 'all' to return all projects.
          ids:
            type: optional<string>
            docs: ids
          include:
            type: optional<string>
            docs: >-
              Comma-separated list of count fields to include in the response to
              optimize performance. Available fields: task_number,
              finished_task_number, total_predictions_number,
              total_annotations_number, num_tasks_with_annotations,
              useful_annotation_number, ground_truth_number,
              skipped_annotations_number. If not specified, all count fields are
              included.
          members_limit:
            type: optional<integer>
            default: 10
            docs: Maximum number of members to return.
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          page:
            type: optional<integer>
            docs: A page number within the paginated result set.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          title:
            type: optional<string>
            docs: title
          workspaces:
            type: optional<integer>
            docs: workspaces
      response:
        docs: ''
        type: root.PaginatedAllRolesProjectListList
      examples:
        - response:
            body:
              count: 123
              next: http://api.example.org/accounts/?page=4
              previous: http://api.example.org/accounts/?page=2
              results:
                - allow_stream: allow_stream
                  annotation_limit_count: 1
                  annotation_limit_percent: annotation_limit_percent
                  annotator_evaluation_minimum_score: annotator_evaluation_minimum_score
                  annotator_evaluation_minimum_tasks: 1
                  assignment_settings:
                    id: 1
                  blueprints:
                    - created_at: '2024-01-15T09:30:00Z'
                      id: 1
                      share_id: share_id
                      short_url: short_url
                  color: color
                  comment_classification_config: comment_classification_config
                  config_has_control_tags: true
                  config_suitable_for_bulk_annotation: true
                  control_weights:
                    key: value
                  created_at: '2024-01-15T09:30:00Z'
                  created_by:
                    avatar: avatar
                    id: 1
                  custom_script: custom_script
                  custom_task_lock_ttl: 1
                  data_types:
                    key: value
                  description: description
                  description_short: description_short
                  duplication_done: true
                  duplication_status: duplication_status
                  enable_empty_annotation: true
                  evaluate_predictions_automatically: true
                  expert_instruction: expert_instruction
                  finished_task_number: 1
                  ground_truth_number: 1
                  has_blueprints: has_blueprints
                  id: 1
                  is_draft: true
                  is_published: true
                  label_config: label_config
                  maximum_annotations: 1
                  members: members
                  members_count: 1
                  min_annotations_to_start_training: 1
                  model_version: model_version
                  num_tasks_with_annotations: num_tasks_with_annotations
                  organization: 1
                  overlap_cohort_percentage: 1
                  parsed_label_config:
                    key: value
                  pause_on_failed_annotator_evaluation: true
                  pinned_at: '2024-01-15T09:30:00Z'
                  prompts: prompts
                  queue_done: queue_done
                  queue_left: queue_left
                  queue_total: queue_total
                  ready: ready
                  rejected: rejected
                  require_comment_on_skip: true
                  reveal_preannotations_interactively: true
                  review_settings:
                    id: 1
                    requeue_rejected_tasks_to_annotator: true
                  review_total_tasks: review_total_tasks
                  reviewed_number: reviewed_number
                  reviewer_queue_total: reviewer_queue_total
                  sampling: Sequential sampling
                  show_annotation_history: true
                  show_collab_predictions: true
                  show_ground_truth_first: true
                  show_instruction: true
                  show_overlap_first: true
                  show_skip_button: true
                  skip_queue: REQUEUE_FOR_ME
                  skipped_annotations_number: skipped_annotations_number
                  start_training_on_annotation_update: true
                  task_number: 1
                  title: title
                  total_annotations_number: total_annotations_number
                  total_predictions_number: 1
                  useful_annotation_number: useful_annotation_number
                  workspace: workspace
                  workspace_title: workspace_title
      audiences:
        - public
    create:
      path: /api/projects/
      method: POST
      auth: true
      docs: Create a project for a specific organization.
      source:
        openapi: openapi/openapi.yaml
      display-name: Create a project
      request:
        name: LseProjectCreateRequest
        body:
          properties:
            color:
              type: optional<string>
              validation:
                maxLength: 16
            control_weights: optional<unknown>
            created_by:
              type: optional<root.UserSimpleRequest>
              docs: Project owner
            description:
              type: optional<string>
              docs: Project description
            enable_empty_annotation:
              type: optional<boolean>
              docs: Allow annotators to submit empty annotations
            evaluate_predictions_automatically:
              type: optional<boolean>
              docs: Retrieve and display predictions when loading a task
            expert_instruction:
              type: optional<string>
              docs: Labeling instructions in HTML format
            is_draft:
              type: optional<boolean>
              docs: Whether or not the project is in the middle of being created
            is_published:
              type: optional<boolean>
              docs: Whether or not the project is published to annotators
            label_config:
              type: optional<string>
              docs: Label config in XML format. See more about it in documentation
            maximum_annotations:
              type: optional<integer>
              docs: >-
                Maximum number of annotations for one task. If the number of
                annotations per task is equal or greater to this value, the task
                is completed (is_labeled=True)
              validation:
                min: -2147483648
                max: 2147483647
            min_annotations_to_start_training:
              type: optional<integer>
              docs: >-
                Minimum number of completed tasks after which model training is
                started
              validation:
                min: -2147483648
                max: 2147483647
            model_version:
              type: optional<string>
              docs: Machine learning model version
            organization: optional<integer>
            overlap_cohort_percentage:
              type: optional<integer>
              validation:
                min: -2147483648
                max: 2147483647
            pinned_at:
              type: optional<datetime>
              docs: Pinned date and time
            reveal_preannotations_interactively:
              type: optional<boolean>
              docs: Reveal pre-annotations interactively
            sampling: optional<LseProjectCreateRequestSampling>
            show_annotation_history:
              type: optional<boolean>
              docs: Show annotation history to annotator
            show_collab_predictions:
              type: optional<boolean>
              docs: If set, the annotator can view model predictions
            show_ground_truth_first: optional<boolean>
            show_instruction:
              type: optional<boolean>
              docs: Show instructions to the annotator before they start
            show_overlap_first: optional<boolean>
            show_skip_button:
              type: optional<boolean>
              docs: >-
                Show a skip button in interface and allow annotators to skip the
                task
            skip_queue: optional<LseProjectCreateRequestSkipQueue>
            task_data_login:
              type: optional<string>
              docs: 'Task data credentials: login'
              validation:
                maxLength: 256
            task_data_password:
              type: optional<string>
              docs: 'Task data credentials: password'
              validation:
                maxLength: 256
            title:
              type: optional<string>
              docs: Project name. Must be between 3 and 50 characters long.
              validation:
                minLength: 3
                maxLength: 50
            workspace: optional<integer>
        content-type: application/json
      response:
        docs: ''
        type: root.LseProjectCreate
      examples:
        - request: {}
          response:
            body:
              color: color
              config_has_control_tags: true
              config_suitable_for_bulk_annotation: true
              control_weights:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              created_by:
                avatar: avatar
                email: email
                first_name: first_name
                id: 1
                last_name: last_name
              description: description
              enable_empty_annotation: true
              evaluate_predictions_automatically: true
              expert_instruction: expert_instruction
              finished_task_number: 1
              ground_truth_number: 1
              id: 1
              is_draft: true
              is_published: true
              label_config: label_config
              maximum_annotations: 1
              min_annotations_to_start_training: 1
              model_version: model_version
              num_tasks_with_annotations: 1
              organization: 1
              overlap_cohort_percentage: 1
              parsed_label_config:
                key: value
              pinned_at: '2024-01-15T09:30:00Z'
              queue_done: 1
              queue_total: 1
              reveal_preannotations_interactively: true
              sampling: Sequential sampling
              show_annotation_history: true
              show_collab_predictions: true
              show_ground_truth_first: true
              show_instruction: true
              show_overlap_first: true
              show_skip_button: true
              skip_queue: REQUEUE_FOR_ME
              skipped_annotations_number: 1
              start_training_on_annotation_update: true
              task_data_login: task_data_login
              task_data_password: task_data_password
              task_number: 1
              title: title
              total_annotations_number: 1
              total_predictions_number: 1
              useful_annotation_number: 1
              workspace: 1
      audiences:
        - public
    api_projects_counts_list:
      path: /api/projects/counts/
      method: GET
      auth: true
      docs: >-
        Returns a list of projects with their counts. For example, task_number
        which is the total task number in project
      source:
        openapi: openapi/openapi.yaml
      display-name: List project's counts
      request:
        name: ApiProjectsCountsListRequest
        query-parameters:
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          page:
            type: optional<integer>
            docs: A page number within the paginated result set.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
      response:
        docs: ''
        type: root.PaginatedLseProjectCountsList
      examples:
        - response:
            body:
              count: 123
              next: http://api.example.org/accounts/?page=4
              previous: http://api.example.org/accounts/?page=2
              results:
                - finished_task_number: 1
                  ground_truth_number: 1
                  id: 1
                  num_tasks_with_annotations: num_tasks_with_annotations
                  queue_done: queue_done
                  queue_left: queue_left
                  queue_total: queue_total
                  rejected: rejected
                  review_total_tasks: review_total_tasks
                  reviewed_number: reviewed_number
                  skipped_annotations_number: skipped_annotations_number
                  task_number: 1
                  total_annotations_number: total_annotations_number
                  total_predictions_number: 1
                  useful_annotation_number: useful_annotation_number
    api_projects_validate_create:
      path: /api/projects/validate/
      method: POST
      auth: true
      docs: Validate an arbitrary labeling configuration.
      source:
        openapi: openapi/openapi.yaml
      display-name: Validate label config
      request:
        body: root.ProjectLabelConfigRequest
        content-type: application/json
      errors:
        - root.BadRequestError
      examples:
        - request:
            label_config: label_config
      audiences:
        - internal
    get:
      path: /api/projects/{id}/
      method: GET
      auth: true
      docs: Retrieve information about a project by project ID.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Get project by ID
      response:
        docs: Project information
        type: root.Project
      examples:
        - name: response
          path-parameters:
            id: 1
          response:
            body:
              color: '#FF0000'
              config_has_control_tags: true
              config_suitable_for_bulk_annotation: true
              control_weights: {}
              created_at: '2023-08-24T14:15:22Z'
              created_by:
                avatar: avatar
                email: manager@humansignal.com
                first_name: Jo
                id: 1
                last_name: Doe
              description: My first project
              enable_empty_annotation: true
              evaluate_predictions_automatically: false
              expert_instruction: Label all cats
              finished_task_number: 10
              ground_truth_number: 5
              id: 1
              is_draft: false
              is_published: true
              label_config: <View>[...]</View>
              maximum_annotations: 1
              min_annotations_to_start_training: 0
              model_version: 1.0.0
              num_tasks_with_annotations: 10
              organization: 1
              overlap_cohort_percentage: 100
              parsed_label_config: '{"tag": {...}}'
              pinned_at: '2023-08-24T14:15:22Z'
              queue_done: 100
              queue_total: 10
              reveal_preannotations_interactively: true
              sampling: Sequential sampling
              show_annotation_history: true
              show_collab_predictions: true
              show_ground_truth_first: true
              show_instruction: true
              show_overlap_first: true
              show_skip_button: true
              skip_queue: REQUEUE_FOR_ME
              skipped_annotations_number: 0
              start_training_on_annotation_update: true
              task_data_login: user
              task_data_password: secret
              task_number: 100
              title: My project
              total_annotations_number: 10
              total_predictions_number: 0
              useful_annotation_number: 10
      audiences:
        - public
    delete:
      path: /api/projects/{id}/
      method: DELETE
      auth: true
      docs: Delete a project by specified project ID.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Delete project
      examples:
        - path-parameters:
            id: 1
      audiences:
        - public
    update:
      path: /api/projects/{id}/
      method: PATCH
      auth: true
      docs: Update the details of a specific project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Update project details
      request:
        name: PatchedLseProjectUpdateRequest
        body:
          properties:
            annotation_limit_count:
              type: optional<integer>
              validation:
                min: 1
            annotation_limit_percent:
              type: optional<string>
              validation:
                pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
            annotator_evaluation_minimum_score:
              type: optional<string>
              default: '95.00'
              validation:
                pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
            annotator_evaluation_minimum_tasks:
              type: optional<integer>
              default: 10
              validation:
                min: 0
            assignment_settings: optional<root.AssignmentSettingsRequest>
            color:
              type: optional<string>
              validation:
                maxLength: 16
            comment_classification_config: optional<string>
            control_weights: optional<unknown>
            created_by:
              type: optional<root.UserSimpleRequest>
              docs: Project owner
            custom_script: optional<string>
            custom_task_lock_ttl:
              type: optional<integer>
              docs: TTL in seconds for task reservations, on new and existing tasks
              validation:
                min: 1
                max: 86400
            description:
              type: optional<string>
              docs: Project description
            enable_empty_annotation:
              type: optional<boolean>
              docs: Allow annotators to submit empty annotations
            evaluate_predictions_automatically:
              type: optional<boolean>
              docs: Retrieve and display predictions when loading a task
            expert_instruction:
              type: optional<string>
              docs: Labeling instructions in HTML format
            is_draft:
              type: optional<boolean>
              docs: Whether or not the project is in the middle of being created
            is_published:
              type: optional<boolean>
              docs: Whether or not the project is published to annotators
            label_config:
              type: optional<string>
              docs: Label config in XML format. See more about it in documentation
            maximum_annotations:
              type: optional<integer>
              docs: >-
                Maximum number of annotations for one task. If the number of
                annotations per task is equal or greater to this value, the task
                is completed (is_labeled=True)
              validation:
                min: -2147483648
                max: 2147483647
            min_annotations_to_start_training:
              type: optional<integer>
              docs: >-
                Minimum number of completed tasks after which model training is
                started
              validation:
                min: -2147483648
                max: 2147483647
            model_version:
              type: optional<string>
              docs: Machine learning model version
            organization: optional<integer>
            overlap_cohort_percentage:
              type: optional<integer>
              validation:
                min: -2147483648
                max: 2147483647
            pause_on_failed_annotator_evaluation:
              type: optional<boolean>
              default: false
            pinned_at:
              type: optional<datetime>
              docs: Pinned date and time
            require_comment_on_skip:
              type: optional<boolean>
              default: false
            reveal_preannotations_interactively:
              type: optional<boolean>
              docs: Reveal pre-annotations interactively
            review_settings: optional<root.ReviewSettingsRequest>
            sampling: optional<PatchedLseProjectUpdateRequestSampling>
            show_annotation_history:
              type: optional<boolean>
              docs: Show annotation history to annotator
            show_collab_predictions:
              type: optional<boolean>
              docs: If set, the annotator can view model predictions
            show_ground_truth_first: optional<boolean>
            show_instruction:
              type: optional<boolean>
              docs: Show instructions to the annotator before they start
            show_overlap_first: optional<boolean>
            show_skip_button:
              type: optional<boolean>
              docs: >-
                Show a skip button in interface and allow annotators to skip the
                task
            skip_queue: optional<PatchedLseProjectUpdateRequestSkipQueue>
            task_data_login:
              type: optional<string>
              docs: 'Task data credentials: login'
              validation:
                maxLength: 256
            task_data_password:
              type: optional<string>
              docs: 'Task data credentials: password'
              validation:
                maxLength: 256
            title:
              type: optional<string>
              docs: Project name. Must be between 3 and 50 characters long.
              validation:
                minLength: 3
                maxLength: 50
            workspace: optional<integer>
        content-type: application/json
      response:
        docs: ''
        type: root.LseProjectUpdate
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              annotation_limit_count: 1
              annotation_limit_percent: annotation_limit_percent
              annotator_evaluation_minimum_score: annotator_evaluation_minimum_score
              annotator_evaluation_minimum_tasks: 1
              assignment_settings:
                id: 1
                label_stream_task_distribution: auto_distribution
                project: 1
              color: color
              comment_classification_config: comment_classification_config
              config_has_control_tags: true
              config_suitable_for_bulk_annotation: true
              control_weights:
                key: value
              created_at: '2024-01-15T09:30:00Z'
              created_by:
                avatar: avatar
                email: email
                first_name: first_name
                id: 1
                last_name: last_name
              custom_script: custom_script
              custom_task_lock_ttl: 1
              description: description
              enable_empty_annotation: true
              evaluate_predictions_automatically: true
              expert_instruction: expert_instruction
              finished_task_number: 1
              ground_truth_number: 1
              id: 1
              is_draft: true
              is_published: true
              label_config: label_config
              maximum_annotations: 1
              min_annotations_to_start_training: 1
              model_version: model_version
              num_tasks_with_annotations: 1
              organization: 1
              overlap_cohort_percentage: 1
              parsed_label_config:
                key: value
              pause_on_failed_annotator_evaluation: true
              pinned_at: '2024-01-15T09:30:00Z'
              prompts: prompts
              queue_done: 1
              queue_total: 1
              require_comment_on_skip: true
              reveal_preannotations_interactively: true
              review_settings:
                anonymize_annotations: true
                id: 1
                instruction: instruction
                only_finished_tasks: true
                project: 1
                requeue_rejected_tasks_mode: requeue
                requeue_rejected_tasks_to_annotator: true
                require_comment_on_reject: true
                review_criteria: all
                review_only_manual_assignments: true
                show_agreement_to_reviewers: true
                show_data_manager_to_reviewers: true
                show_instruction: true
              sampling: Sequential sampling
              show_annotation_history: true
              show_collab_predictions: true
              show_ground_truth_first: true
              show_instruction: true
              show_overlap_first: true
              show_skip_button: true
              skip_queue: REQUEUE_FOR_ME
              skipped_annotations_number: 1
              start_training_on_annotation_update: true
              task_data_login: task_data_login
              task_data_password: task_data_password
              task_number: 1
              title: title
              total_annotations_number: 1
              total_predictions_number: 1
              useful_annotation_number: 1
              workspace: 1
              workspace_title: workspace_title
      audiences:
        - public
    duplicate:
      path: /api/projects/{id}/duplicate/
      method: POST
      auth: true
      docs: Make a copy of project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Duplicate project
      request:
        name: ProjectDuplicateRequest
        body:
          properties:
            description:
              type: optional<string>
              docs: Description of duplicated project
              default: ''
            mode:
              type: root.ModeEnum
              docs: >-
                Data that you want to duplicate: settings only, with tasks, with
                annotations


                * `settings` - Only settings

                * `settings,data` - Settings and tasks
            title:
              type: string
              docs: Title of duplicated project
              validation:
                minLength: 3
                maxLength: 50
            workspace:
              type: integer
              docs: Workspace, where to place duplicated project
        content-type: application/json
      response:
        docs: Project duplicated
        type: ProjectsDuplicateResponse
      examples:
        - path-parameters:
            id: 1
          request:
            mode: settings
            title: title
            workspace: 1
          response:
            body:
              id: 1
      audiences:
        - public
    import_tasks:
      path: /api/projects/{id}/import
      method: POST
      auth: true
      docs: |2-

                    Import data as labeling tasks in bulk using this API endpoint. You can use this API endpoint to import multiple tasks.
                    One POST request is limited at 250K tasks and 200 MB.

                    **Note:** Imported data is verified against a project *label_config* and must
                    include all variables that were used in the *label_config*. For example,
                    if the label configuration has a *$text* variable, then each item in a data object
                    must include a "text" field.
                    <br>

                    ## POST requests
                    <hr style="opacity:0.3">

                    There are three possible ways to import tasks with this endpoint:

                    ### 1. **POST with data**
                    Send JSON tasks as POST data. Only JSON is supported for POSTing files directly.
                    Update this example to specify your authorization token and Label Studio instance host, then run the following from
                    the command line.

                    ```bash
                    curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \
                    -X POST 'http://localhost:8000/api/projects/1/import' --data '[{"text": "Some text 1"}, {"text": "Some text 2"}]'
                    ```

                    ### 2. **POST with files**
                    Send tasks as files. You can attach multiple files with different names.

                    - **JSON**: text files in JavaScript object notation format
                    - **CSV**: text files with tables in Comma Separated Values format
                    - **TSV**: text files with tables in Tab Separated Value format
                    - **TXT**: simple text files are similar to CSV with one column and no header, supported for projects with one source only

                    Update this example to specify your authorization token, Label Studio instance host, and file name and path,
                    then run the following from the command line:

                    ```bash
                    curl -H 'Authorization: Token abc123' \
                    -X POST 'http://localhost:8000/api/projects/1/import' -F 'file=@path/to/my_file.csv'
                    ```

                    ### 3. **POST with URL**
                    You can also provide a URL to a file with labeling tasks. Supported file formats are the same as in option 2.

                    ```bash
                    curl -H 'Content-Type: application/json' -H 'Authorization: Token abc123' \
                    -X POST 'http://localhost:8000/api/projects/1/import' \
                    --data '[{"url": "http://example.com/test1.csv"}, {"url": "http://example.com/test2.csv"}]'
                    ```

                    <br>
                
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this project.
      display-name: Import tasks
      request:
        body: list<root.ImportApiRequest>
        query-parameters:
          commit_to_project:
            type: optional<boolean>
            default: true
            docs: Set to "true" to immediately commit tasks to the project.
          preannotated_from_fields:
            type: optional<string>
            allow-multiple: true
            docs: >-
              List of fields to preannotate from the task data. For example, if
              you provide a list of `{"text": "text", "prediction": "label"}`
              items in the request, the system will create a task with the
              `text` field and a prediction with the `label` field when
              `preannoted_from_fields=["prediction"]`.
          return_task_ids:
            type: optional<boolean>
            default: false
            docs: Set to "true" to return task IDs in the response.
        name: ProjectsImportTasksRequest
        content-type: application/json
      response:
        docs: Tasks successfully imported
        type: ProjectsImportTasksResponse
      errors:
        - root.BadRequestError
      examples:
        - path-parameters:
            id: 1
          request: []
          response:
            body:
              annotation_count: 1
              could_be_tasks_list: true
              data_columns:
                - data_columns
              duration: 1.1
              file_upload_ids:
                - 1
              found_formats:
                - found_formats
              predictions_count: 1
              task_count: 1
      audiences:
        - public
    api_projects_members_create:
      path: /api/projects/{id}/members/
      method: POST
      auth: true
      docs: Add a member to a specific project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Add project member
      request:
        name: ProjectMemberRequest
        body:
          properties:
            user: integer
        content-type: application/json
      response:
        docs: ''
        type: root.ProjectMember
      examples:
        - path-parameters:
            id: 1
          request:
            user: 1
          response:
            body:
              user: 1
    api_projects_members_destroy:
      path: /api/projects/{id}/members/
      method: DELETE
      auth: true
      docs: Remove a member from a specific project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Remove member from project
      request:
        name: ApiProjectsMembersDestroyRequest
        query-parameters:
          project_member:
            type: optional<integer>
            docs: A unique integer value identifying this project member.
      examples:
        - path-parameters:
            id: 1
    api_projects_members_paginated_list:
      path: /api/projects/{id}/members/paginated/
      method: GET
      auth: true
      docs: Retrieve the members for a specific project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Get project members paginated
      request:
        name: ApiProjectsMembersPaginatedListRequest
        query-parameters:
          ids:
            type: optional<string>
            docs: Comma-separated list of user IDs to filter by
          implicit:
            type: optional<boolean>
            docs: >-
              Include/Exclude implicit project members in the results. If not
              provided, explicit + implicit members are returned.
          no_annotators:
            type: optional<boolean>
            docs: Exclude annotators from the results
          page:
            type: optional<integer>
            docs: A page number within the paginated result set.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          search:
            type: optional<string>
            docs: Search term for filtering members by name, email, or username
          with_deleted:
            type: optional<boolean>
            docs: Include deleted members in the results
      response:
        docs: ''
        type: root.PaginatedLseUserList
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              count: 123
              next: http://api.example.org/accounts/?page=4
              previous: http://api.example.org/accounts/?page=2
              results:
                - active_organization: 1
                  active_organization_meta: active_organization_meta
                  allow_newsletters: true
                  avatar: avatar
                  custom_hotkeys:
                    key: value
                  date_joined: '2024-01-15T09:30:00Z'
                  email: email
                  first_name: first_name
                  id: 1
                  initials: initials
                  last_activity: '2024-01-15T09:30:00Z'
                  last_name: last_name
                  lse_fields:
                    email_notification_settings: email_notification_settings
                    invite_expired: invite_expired
                    invite_expired_at: invite_expired_at
                  org_membership:
                    - active: active
                      organization_id: 1
                      role: role
                  pause: pause
                  phone: phone
                  username: username
    api_projects_project_extra_params_retrieve:
      path: /api/projects/{id}/project-extra-params/
      method: GET
      auth: true
      docs: >-
        Retrieve the annotator weights for statistics and Cohen's Kappa for a
        specific project.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Get annotator weights
      response:
        docs: Annotator weights retrieved
        type: ApiProjectsProjectExtraParamsRetrieveResponse
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              annotator_params:
                - key: value
              use_kappa: true
    api_projects_project_extra_params_create:
      path: /api/projects/{id}/project-extra-params/
      method: POST
      auth: true
      docs: >-
        Create annotator weights to be used in the annotation statistics for a
        project, such as when calculating kappa metrics for inter-annotator
        agreement.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id: integer
      display-name: Create annotator weights for statistics
      request:
        name: LseProjectParamsRequest
        body:
          properties:
            annotator_params: optional<unknown>
            use_kappa:
              type: optional<boolean>
              docs: >-
                If categorical variables are used in labeling (e.g. choices),
                Cohen's Kappa statistic is computed to measure inter-rater
                reliability instead of basic agreement
        content-type: application/json
      response:
        docs: Annotator weights created/updated
        type: ApiProjectsProjectExtraParamsCreateResponse
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              annotator_params:
                - key: value
              use_kappa: true
    api_projects_reimports_retrieve:
      path: /api/projects/{id}/reimports/{reimport_pk}/
      method: GET
      auth: true
      docs: Return data related to async project reimport operation
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this project reimport.
        reimport_pk: integer
      display-name: Get project reimport info
      response:
        docs: ''
        type: root.ProjectReimport
      examples:
        - path-parameters:
            id: 1
            reimport_pk: 1
          response:
            body:
              annotation_count: 1
              data_columns:
                key: value
              duration: 1
              error: error
              file_upload_ids:
                key: value
              files_as_tasks_list: true
              found_formats:
                key: value
              id: 1
              prediction_count: 1
              project: 1
              status: created
              task_count: 1
      audiences:
        - internal
    api_projects_tasks_list:
      path: /api/projects/{id}/tasks/
      method: GET
      auth: true
      docs: |2-

                    Retrieve a paginated list of tasks for a specific project. For example, use the following cURL command:
                    ```bash
                    curl -X GET http://localhost:8000/api/projects/{id}/tasks/?page=1&page_size=10 -H 'Authorization: Token abc123'
                    ```
                
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this project.
      display-name: List project tasks
      request:
        name: ApiProjectsTasksListRequest
        query-parameters:
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          page:
            type: optional<integer>
            docs: '[or "start"] current page'
          page_size:
            type: optional<integer>
            docs: >-
              [or "length"] tasks per page, use -1 to obtain all tasks (in this
              case "page" has no effect and this operation might be slow)
      response:
        docs: ''
        type: list<root.TaskSimple>
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              - annotations:
                  - created_ago: created_ago
                    created_at: '2024-01-15T09:30:00Z'
                    created_username: created_username
                    id: 1
                    updated_at: '2024-01-15T09:30:00Z'
                cancelled_annotations: 1
                comment_authors:
                  - 1
                comment_count: 1
                created_at: '2024-01-15T09:30:00Z'
                data:
                  key: value
                file_upload: 1
                id: 1
                inner_id: 1000000
                is_labeled: true
                last_comment_updated_at: '2024-01-15T09:30:00Z'
                meta:
                  key: value
                overlap: 1
                predictions:
                  - created_ago: created_ago
                    created_at: '2024-01-15T09:30:00Z'
                    id: 1
                    result:
                      - key: value
                    task: 1
                    updated_at: '2024-01-15T09:30:00Z'
                project: 1
                total_annotations: 1
                total_predictions: 1
                unresolved_comment_count: 1
                updated_at: '2024-01-15T09:30:00Z'
                updated_by: 1
      audiences:
        - internal
    validate_label_config:
      path: /api/projects/{id}/validate/
      method: POST
      auth: true
      docs: >-
        Determine whether the label configuration for a specific project is
        valid.
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this project.
      display-name: Validate project label config
      request:
        body: root.ProjectLabelConfigRequest
        content-type: application/json
      response:
        docs: ''
        type: root.ProjectLabelConfig
      examples:
        - path-parameters:
            id: 1
          request:
            label_config: label_config
          response:
            body:
              label_config: label_config
      audiences:
        - public
    api_projects_subset_tasks_list:
      path: /api/projects/{project_pk}/subset-tasks
      method: GET
      auth: true
      docs: |2-

                Provides list of tasks, based on project subset. Includes predictions for tasks. For the 'HasGT' subset, accuracy metrics will also be provided.
                
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        project_pk: integer
      display-name: Get Project Subset Task List with Predictions and Accuracy details
      request:
        name: ApiProjectsSubsetTasksListRequest
        query-parameters:
          model_run:
            type: optional<integer>
            docs: A unique ID of a ModelRun
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          page:
            type: optional<integer>
            docs: A page number within the paginated result set.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          project_subset:
            type: optional<string>
            docs: The project subset to retrieve tasks for
      errors:
        - root.BadRequestError
      examples:
        - path-parameters:
            project_pk: 1
    api_projects_subsets_retrieve:
      path: /api/projects/{project_pk}/subsets
      method: GET
      auth: true
      docs: |2-

                Provides list of available subsets for a project along with count of tasks in each subset
                
      source:
        openapi: openapi/openapi.yaml
      path-parameters:
        project_pk: integer
      display-name: Get available subsets of a project (for prompts usage)
      examples:
        - path-parameters:
            project_pk: 1
  source:
    openapi: openapi/openapi.yaml
