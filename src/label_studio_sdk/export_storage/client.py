# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .azure.client import AsyncAzureClient, AzureClient
from .gcs.client import AsyncGcsClient, GcsClient
from .local.client import AsyncLocalClient, LocalClient
from .raw_client import AsyncRawExportStorageClient, RawExportStorageClient
from .redis.client import AsyncRedisClient, RedisClient
from .s3.client import AsyncS3Client, S3Client
from .s3s.client import AsyncS3SClient, S3SClient
from .types.export_storage_list_types_response_item import ExportStorageListTypesResponseItem


class ExportStorageClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawExportStorageClient(client_wrapper=client_wrapper)
        self.azure = AzureClient(client_wrapper=client_wrapper)

        self.gcs = GcsClient(client_wrapper=client_wrapper)

        self.local = LocalClient(client_wrapper=client_wrapper)

        self.redis = RedisClient(client_wrapper=client_wrapper)

        self.s3 = S3Client(client_wrapper=client_wrapper)

        self.s3s = S3SClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawExportStorageClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawExportStorageClient
        """
        return self._raw_client

    def list_types(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[ExportStorageListTypesResponseItem]:
        """
        Retrieve a list of the export storages types.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[ExportStorageListTypesResponseItem]


        Examples
        --------
        from label_studio_sdk import LabelStudio
        client = LabelStudio(api_key="YOUR_API_KEY", )
        client.export_storage.list_types()
        """
        _response = self._raw_client.list_types(request_options=request_options)
        return _response.data


class AsyncExportStorageClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawExportStorageClient(client_wrapper=client_wrapper)
        self.azure = AsyncAzureClient(client_wrapper=client_wrapper)

        self.gcs = AsyncGcsClient(client_wrapper=client_wrapper)

        self.local = AsyncLocalClient(client_wrapper=client_wrapper)

        self.redis = AsyncRedisClient(client_wrapper=client_wrapper)

        self.s3 = AsyncS3Client(client_wrapper=client_wrapper)

        self.s3s = AsyncS3SClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawExportStorageClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawExportStorageClient
        """
        return self._raw_client

    async def list_types(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[ExportStorageListTypesResponseItem]:
        """
        Retrieve a list of the export storages types.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[ExportStorageListTypesResponseItem]


        Examples
        --------
        from label_studio_sdk import AsyncLabelStudio
        import asyncio
        client = AsyncLabelStudio(api_key="YOUR_API_KEY", )
        async def main() -> None:
            await client.export_storage.list_types()
        asyncio.run(main())
        """
        _response = await self._raw_client.list_types(request_options=request_options)
        return _response.data
