# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ProjectSubsetTaskItem(UncheckedBaseModel):
    data: typing.Dict[str, typing.Optional[typing.Any]]
    error: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    ground_truth: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    id: typing.Optional[int] = None
    prediction: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    score: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
