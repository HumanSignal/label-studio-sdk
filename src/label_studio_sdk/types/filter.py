# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Filter(UncheckedBaseModel):
    id: int
    index: typing.Optional[int] = pydantic.Field(default=None)
    """
    To keep filter order
    """

    column: str = pydantic.Field()
    """
    Field name
    """

    type: str = pydantic.Field()
    """
    Field type
    """

    operator: str = pydantic.Field()
    """
    Filter operator
    """

    value: typing.Optional[typing.Optional[typing.Any]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
