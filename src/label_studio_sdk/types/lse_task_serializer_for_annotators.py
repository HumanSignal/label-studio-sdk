# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import datetime as dt
import pydantic
from .lse_task_serializer_for_annotators_drafts_item import LseTaskSerializerForAnnotatorsDraftsItem
from .lse_task_serializer_for_annotators_predictions_item import LseTaskSerializerForAnnotatorsPredictionsItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LseTaskSerializerForAnnotators(UncheckedBaseModel):
    """
    Task Serializer with project scheme configs validation
    """

    annotations: str
    annotations_results: str
    cancelled_annotations: typing.Optional[int] = None
    comment_count: str
    comments: str
    created_at: dt.datetime = pydantic.Field()
    """
    Time a task was created
    """

    data: typing.Optional[typing.Any] = None
    draft_exists: typing.Optional[bool] = None
    drafts: typing.List[LseTaskSerializerForAnnotatorsDraftsItem] = pydantic.Field()
    """
    Drafts for this task
    """

    id: int
    predictions: typing.List[LseTaskSerializerForAnnotatorsPredictionsItem] = pydantic.Field()
    """
    Predictions for this task
    """

    predictions_results: str
    predictions_score: typing.Optional[float] = None
    reviews_rejected: typing.Optional[int] = None
    total_annotations: typing.Optional[int] = None
    total_predictions: typing.Optional[int] = None
    unresolved_comment_count: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
