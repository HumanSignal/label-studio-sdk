# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .serialization_option import SerializationOption
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SerializationOptions(UncheckedBaseModel):
    drafts: typing.Optional[SerializationOption] = pydantic.Field(default=None)
    """
    JSON dict with parameters
    """

    predictions: typing.Optional[SerializationOption] = pydantic.Field(default=None)
    """
    JSON dict with parameters
    """

    include_annotation_history: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Include annotation history
    """

    annotations_completed_by: typing_extensions.Annotated[
        typing.Optional[SerializationOption], FieldMetadata(alias="annotations__completed_by")
    ] = pydantic.Field(default=None)
    """
    JSON dict with parameters
    """

    interpolate_key_frames: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Interpolate video key frames
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
