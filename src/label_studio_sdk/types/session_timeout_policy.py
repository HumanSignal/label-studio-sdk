# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import datetime as dt
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SessionTimeoutPolicy(UncheckedBaseModel):
    created_at: dt.datetime
    max_session_age: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of minutes that a session can be active before needing to re-login
    """

    max_time_between_activity: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of minutes that a session stays active without any activity
    """

    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
