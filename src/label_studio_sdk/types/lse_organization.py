# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .default_role_enum import DefaultRoleEnum
import datetime as dt
from .organization_billing import OrganizationBilling
from .lse_organization_custom_scripts_editable_by import LseOrganizationCustomScriptsEditableBy
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LseOrganization(UncheckedBaseModel):
    id: int
    external_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    External ID to uniquely identify this organization
    """

    title: str
    token: str
    default_role: typing.Optional[DefaultRoleEnum] = pydantic.Field(default=None)
    """
    Default membership role for invited users
    
    * `OW` - Owner
    * `AD` - Administrator
    * `MA` - Manager
    * `RE` - Reviewer
    * `AN` - Annotator
    * `DI` - Deactivated
    * `NO` - Not Activated
    """

    created_at: dt.datetime
    billing: OrganizationBilling
    embed_domains: typing.Optional[typing.Optional[typing.Any]] = None
    embed_settings: typing.Optional[typing.Optional[typing.Any]] = None
    custom_scripts_enabled: str
    custom_scripts_editable_by: typing.Optional[LseOrganizationCustomScriptsEditableBy] = pydantic.Field(default=None)
    """
    Set the minimum user role that can edit custom scripts in the UI.
    
    * `AD` - Administrator
    * `MA` - Manager
    """

    email_notification_settings: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
