# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .associated_project import AssociatedProject
import datetime as dt
from .user_simple import UserSimple
import pydantic
from .skill_name_enum import SkillNameEnum
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ModelInterfaceSerializerGet(UncheckedBaseModel):
    associated_projects: typing.Optional[typing.List[AssociatedProject]] = None
    created_at: dt.datetime
    created_by: typing.Optional[UserSimple] = pydantic.Field(default=None)
    """
    User who created Dataset
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Model description
    """

    id: int
    input_fields: typing.Optional[typing.Optional[typing.Any]] = None
    organization: typing.Optional[int] = None
    output_classes: typing.Optional[typing.Optional[typing.Any]] = None
    skill_name: typing.Optional[SkillNameEnum] = None
    title: str = pydantic.Field()
    """
    Model name
    """

    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
