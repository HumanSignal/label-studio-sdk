# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .edition_enum import EditionEnum
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class VersionResponse(UncheckedBaseModel):
    backend: typing.Optional[typing.Any] = None
    dm2: typing.Optional[typing.Any] = None
    edition: EditionEnum = pydantic.Field()
    """
    Label Studio edition (Community or Enterprise)
    
    * `Community` - Community
    * `Enterprise` - Enterprise
    """

    label_studio_converter: typing_extensions.Annotated[
        typing.Optional[typing.Any], FieldMetadata(alias="label-studio-converter")
    ] = None
    label_studio_frontend: typing_extensions.Annotated[
        typing.Optional[typing.Any], FieldMetadata(alias="label-studio-frontend")
    ] = None
    label_studio_os_backend: typing_extensions.Annotated[
        typing.Optional[typing.Any], FieldMetadata(alias="label-studio-os-backend")
    ] = None
    label_studio_os_package: typing_extensions.Annotated[
        typing.Optional[typing.Any], FieldMetadata(alias="label-studio-os-package")
    ] = None
    lsf: typing.Optional[typing.Any] = None
    release: str = pydantic.Field()
    """
    Current release version of Label Studio
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
