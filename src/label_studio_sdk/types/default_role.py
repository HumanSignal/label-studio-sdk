# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from .default_role_enum import DefaultRoleEnum
import datetime as dt
from .default_role_custom_scripts_editable_by import DefaultRoleCustomScriptsEditableBy
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class DefaultRole(UncheckedBaseModel):
    organization: int = pydantic.Field()
    """
    A unique integer value identifying this organization.
    """

    default_role: typing.Optional[DefaultRoleEnum] = pydantic.Field(default=None)
    """
    Default membership role for invited users
    
    * `OW` - Owner
    * `AD` - Administrator
    * `MA` - Manager
    * `RE` - Reviewer
    * `AN` - Annotator
    * `DI` - Deactivated
    * `NO` - Not Activated
    """

    external_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    External ID to uniquely identify this organization
    """

    embed_domains: typing.Optional[typing.Optional[typing.Any]] = None
    embed_settings: typing.Optional[typing.Optional[typing.Any]] = None
    extra_data_on_activity_logs: typing.Optional[bool] = None
    custom_scripts_enabled_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Set to current time to enabled custom scripts for this organization. Can only be enabled if no organization members are active members of any other organizations; otherwise an error will be raised. If this occurs, contact the LEAP team for assistance with enabling custom scripts.
    """

    custom_scripts_editable_by: typing.Optional[DefaultRoleCustomScriptsEditableBy] = pydantic.Field(default=None)
    """
    Set the minimum user role that can edit custom scripts in the UI.
    
    * `AD` - Administrator
    * `MA` - Manager
    """

    annotator_reviewer_firewall_enabled_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Set to current time to restrict data sharing between annotators and reviewers in the label stream, review stream, and notifications (which will be disabled). In these settings, information about annotator and reviewer identity is suppressed in the UI.
    """

    read_only_quick_view_enabled_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Set to current time to prevent creating or editing annotations in quick view.
    """

    label_stream_navigation_disabled_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Set to current time to disable the label stream navigation for this organization. This will prevent users from going back in the label stream to view previous labels.
    """

    email_notification_settings: typing.Optional[typing.Optional[typing.Any]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
