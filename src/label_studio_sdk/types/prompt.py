# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .prompt_created_by import PromptCreatedBy
import datetime as dt
from .prompt_organization import PromptOrganization


class Prompt(UniversalBaseModel):
    title: str = pydantic.Field()
    """
    Title of the prompt
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Description of the prompt
    """

    created_by: typing.Optional[PromptCreatedBy] = pydantic.Field(default=None)
    """
    User ID of the creator of the prompt
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Date and time the prompt was created
    """

    updated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Date and time the prompt was last updated
    """

    organization: typing.Optional[PromptOrganization] = pydantic.Field(default=None)
    """
    Organization ID of the prompt
    """

    input_fields: typing.List[str] = pydantic.Field()
    """
    List of input fields
    """

    output_classes: typing.List[str] = pydantic.Field()
    """
    List of output classes
    """

    associated_projects: typing.Optional[typing.List[int]] = pydantic.Field(default=None)
    """
    List of associated projects IDs
    """

    skill_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Name of the skill
    """

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
