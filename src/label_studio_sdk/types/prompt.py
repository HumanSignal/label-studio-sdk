# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .prompt_created_by import PromptCreatedBy
from .prompt_organization import PromptOrganization


class Prompt(pydantic_v1.BaseModel):
    title: str = pydantic_v1.Field()
    """
    Title of the prompt
    """

    description: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Description of the prompt
    """

    created_by: typing.Optional[PromptCreatedBy] = pydantic_v1.Field(default=None)
    """
    User ID of the creator of the prompt
    """

    created_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    Date and time the prompt was created
    """

    updated_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    Date and time the prompt was last updated
    """

    organization: typing.Optional[PromptOrganization] = pydantic_v1.Field(default=None)
    """
    Organization ID of the prompt
    """

    input_fields: typing.List[str] = pydantic_v1.Field()
    """
    List of input fields
    """

    output_classes: typing.List[str] = pydantic_v1.Field()
    """
    List of output classes
    """

    associated_projects: typing.Optional[typing.List[int]] = pydantic_v1.Field(default=None)
    """
    List of associated projects IDs
    """

    skill_name: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Name of the skill
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
