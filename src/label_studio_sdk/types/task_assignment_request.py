# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from .type_enum import TypeEnum
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class TaskAssignmentRequest(UncheckedBaseModel):
    assignee: int = pydantic.Field()
    """
    Assigned user
    """

    task: int = pydantic.Field()
    """
    Assigned task
    """

    type: typing.Optional[TypeEnum] = pydantic.Field(default=None)
    """
    Type of assignment: Annotate|Review
    
    * `AN` - Annotate
    * `RE` - Review
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
