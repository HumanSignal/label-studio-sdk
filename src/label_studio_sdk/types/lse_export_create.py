# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .lse_annotation_filter_options import LseAnnotationFilterOptions
from .converted_format import ConvertedFormat
import datetime as dt
import pydantic
from .user_simple import UserSimple
from .serialization_options import SerializationOptions
from .status7bf_enum import Status7BfEnum
from .lse_task_filter_options import LseTaskFilterOptions
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LseExportCreate(UncheckedBaseModel):
    annotation_filter_options: typing.Optional[LseAnnotationFilterOptions] = None
    converted_formats: typing.Optional[typing.List[ConvertedFormat]] = None
    counters: typing.Optional[typing.Optional[typing.Any]] = None
    created_at: dt.datetime = pydantic.Field()
    """
    Creation time
    """

    created_by: typing.Optional[UserSimple] = None
    finished_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Complete or fail time
    """

    id: int
    md5: typing.Optional[str] = None
    serialization_options: typing.Optional[SerializationOptions] = None
    status: typing.Optional[Status7BfEnum] = None
    task_filter_options: typing.Optional[LseTaskFilterOptions] = None
    title: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
