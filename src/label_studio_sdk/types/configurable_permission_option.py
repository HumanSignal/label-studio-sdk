# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .configurable_permission_option_default_role import ConfigurablePermissionOptionDefaultRole
from .options_enum import OptionsEnum
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ConfigurablePermissionOption(UncheckedBaseModel):
    default_role: typing.Optional[ConfigurablePermissionOptionDefaultRole] = None
    label: typing.Optional[str] = None
    options: typing.List[OptionsEnum]
    permission: str
    tooltip: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
