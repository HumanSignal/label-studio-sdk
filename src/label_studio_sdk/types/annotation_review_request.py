# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class AnnotationReviewRequest(UncheckedBaseModel):
    """
    A ModelSerializer that takes additional arguments for
    "fields", "omit" and "expand" in order to
    control which fields are displayed, and whether to replace simple
    values with complex, nested serializations
    """

    accepted: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Accepted or rejected (if false) flag
    """

    annotation: int = pydantic.Field()
    """
    Corresponding annotation
    """

    comment: typing.Optional[str] = None
    last_annotation_history: typing.Optional[int] = None
    remove_from_queue: typing.Optional[bool] = None
    result: typing.Optional[typing.Optional[typing.Any]] = None
    started_at: typing.Optional[dt.datetime] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
