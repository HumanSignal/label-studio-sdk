# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LseProjectCounts(UncheckedBaseModel):
    """
    Serializer get numbers from project queryset annotation,
    make sure, that you use correct one(Project.objects.with_counts())
    """

    finished_task_number: int
    ground_truth_number: int = pydantic.Field()
    """
    Honeypot annotation number in project
    """

    id: int
    num_tasks_with_annotations: int
    queue_done: int
    queue_left: int
    queue_total: str
    rejected: int
    review_total_tasks: int
    reviewed_number: int
    skipped_annotations_number: str
    task_number: int = pydantic.Field()
    """
    Total task number in project
    """

    total_annotations_number: str
    total_predictions_number: int
    useful_annotation_number: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
