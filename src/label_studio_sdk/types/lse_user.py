# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import datetime as dt
import pydantic
from .organization_membership import OrganizationMembership
from .lse_fields import LseFields
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LseUser(UncheckedBaseModel):
    """
    A ModelSerializer that takes additional arguments for
    "fields", "omit" and "expand" in order to
    control which fields are displayed, and whether to replace simple
    values with complex, nested serializations
    """

    id: int
    first_name: typing.Optional[str] = None
    last_name: typing.Optional[str] = None
    username: str
    email: typing.Optional[str] = None
    last_activity: dt.datetime
    custom_hotkeys: typing.Optional[typing.Optional[typing.Any]] = None
    avatar: str
    initials: str
    phone: typing.Optional[str] = None
    active_organization: typing.Optional[int] = None
    active_organization_meta: str
    allow_newsletters: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Allow sending newsletters to user
    """

    date_joined: typing.Optional[dt.datetime] = None
    org_membership: typing.List[OrganizationMembership]
    lse_fields: LseFields
    pause: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
