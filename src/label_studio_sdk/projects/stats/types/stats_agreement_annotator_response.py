# This file was auto-generated by Fern from our API Definition.

from ....core.unchecked_base_model import UncheckedBaseModel
import typing_extensions
import typing
from ....core.serialization import FieldMetadata
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class StatsAgreementAnnotatorResponse(UncheckedBaseModel):
    agreement_per_annotator: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="Agreement_per_annotator")
    ] = pydantic.Field(default=None)
    """
    Agreement score for the annotator (0-1)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
