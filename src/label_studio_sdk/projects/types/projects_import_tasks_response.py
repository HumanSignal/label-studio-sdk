# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class ProjectsImportTasksResponse(pydantic_v1.BaseModel):
    """
    Task creation response
    """

    task_count: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Number of tasks added
    """

    annotation_count: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Number of annotations added
    """

    predictions_count: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Number of predictions added
    """

    duration: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    Time in seconds to create
    """

    file_upload_ids: typing.Optional[typing.List[int]] = pydantic_v1.Field(default=None)
    """
    Database IDs of uploaded files
    """

    could_be_tasks_list: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    Whether uploaded files can contain lists of tasks, like CSV/TSV files
    """

    found_formats: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    The list of found file formats
    """

    data_columns: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    The list of found data columns
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
