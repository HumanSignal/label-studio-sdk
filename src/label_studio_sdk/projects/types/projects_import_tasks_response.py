# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ProjectsImportTasksResponse(UncheckedBaseModel):
    """
    Task creation response
    """

    annotation_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of annotations added
    """

    could_be_tasks_list: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether uploaded files can contain lists of tasks, like CSV/TSV files
    """

    data_columns: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    The list of found data columns
    """

    duration: typing.Optional[float] = pydantic.Field(default=None)
    """
    Time in seconds to create
    """

    file_upload_ids: typing.Optional[typing.List[int]] = pydantic.Field(default=None)
    """
    Database IDs of uploaded files
    """

    found_formats: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    The list of found file formats
    """

    predictions_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of predictions added
    """

    task_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of tasks added
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
