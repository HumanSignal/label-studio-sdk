# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from ....types.export_format import ExportFormat
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class ExportsListFormatsResponseItem(UniversalBaseModel):
    name: typing.Optional[ExportFormat] = None
    title: typing.Optional[str] = pydantic.Field(default=None)
    """
    Export format title
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Export format description
    """

    link: typing.Optional[str] = pydantic.Field(default=None)
    """
    Export format documentation link
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Export format tags
    """

    disabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If true, the export format is not supported by the project.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
