# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from ....types.export_format import ExportFormat
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class ExportsConvertResponse(UniversalBaseModel):
    export_type: typing.Optional[ExportFormat] = None
    converted_format: typing.Optional[int] = pydantic.Field(default=None)
    """
    ID of the converted format
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
